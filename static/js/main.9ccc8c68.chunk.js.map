{"version":3,"sources":["Functions/Functions.js","components/Card/Card.js","Functions/Http.js","components/Loading/Loading.js","Container/Graph/Graph.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/Multiplayer/LifeTime.js","Container/Multiplayer/Data.js","Container/Statistics/Statistics.js","components/Logo/Logo.js","Container/Login/Login.js","App.js","index.js"],"names":["normalizeNumber","num","slice","arguments","length","undefined","concat","toString","split","getPrestigeImage","Card","props","react_default","a","createElement","className","name","toUpperCase","map","letter","join","children","text","URL","toJson","data","json","getUserData","username","action","fetch","then","res","console","log","path","match","Promise","resolve","Loading","id","Graph","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshData","setState","dates","type","normalizeDate","timeList","x","Date","toLocaleDateString","getHours","getMinutes","createDataForGraph","temp","avgValue","avg","state","reduce","b","i","push","labels","reverse","datasets","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","getBar","myData","es","height","width","getPie","data2","createDataForPie","redraw","options","maintainAspectRatio","data1","result","hoverBackgroundColor","inherits","createClass","key","value","_this$state","Loading_Loading_Loading","React","Component","WeeklyGraphs","playerName","params","_ref","killList","matches","playerStats","kills","ekiaList","ekia","deathList","deaths","assistsList","assists","ekiadRatioList","ekiadRatio","times","utcStartSeconds","size","prevProps","_this2","window","addEventListener","innerWidth","chartList","keys","index","Graph_Graph","LifeTime","getData","allData","mp","lifetime","all","assign","pieFactory","divider","divided","obj1","hardFilter","obj2","Card_Card_Card","cardFactory","cardName","filterResult","list","word","filter","cardFactoryList","pieFactorList","Statistics","location","_data$mp","level","prestige","multiplayerData","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","pagesLabels","outPage","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","inPage","onClick","pages","Container_WeeklyGraphs_WeeklyGraphs","Container_Multiplayer_LifeTime","Logo","src","alt","Login","validateUsername","results","validate","status","query","isLoading","onChange","event","target","hidden","Link","to","pathname","App","setAutoraztion","access","isAuthorized","com","Logo_Logo","BrowserRouter","Route","exact","component","render","Container_Statistics_Statistics","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9ccc8c68.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const normalizeNumber = (num, slice = 3) => {\n    return `${num.toString().split('.')[0]}.${num.toString().split('.')[1].slice(0,slice)}`\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const Card = (props) => {\n    return (<div className={'card'}>\n        <div>\n            <div className={'card-top'}>{fixName(props.name)}</div>\n            <div className={'card-context'}>{props.children}</div>\n            <div className={'card-sub'}>{props.text} </div>\n        </div>\n    </div>)\n};\n\n","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action='profile') => {\n\n        fetch('http://localhost:5000/api').then(res=>console.log((res)));\n\n\n    const path = (!action.match('matches')  ? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar, Doughnut} from \"react-chartjs-2\";\nimport {Loading} from \"../../components/Loading/Loading\";\n\nexport class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            data: [],\n            dates: [],\n            type: '',\n\n        }\n    }\n\n    componentDidMount() {\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            type: this.props.type,\n\n        });\n    };\n\n    normalizeDate = (timeList) => {\n        return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')}${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n    };\n\n    createDataForGraph = (name, data, dates) => {\n        const temp = this.normalizeDate(dates);\n        const avgValue = [];\n        const avg = this.state.data ? this.state.data.reduce((a, b) => a + b) : 0;\n        for (let i = 0; i < 20; i++) {\n            avgValue.push(avg / 20)\n        }\n        return {\n            labels: temp.reverse(),\n            datasets: [\n                {\n                    type: 'line',\n                    fill: false,\n                    label: `Average`,\n                    backgroundColor: 'rgba(255, 255, 255,0.5)',\n                    borderColor: 'rgba(255, 255, 255,0.5)',\n                    data: avgValue,\n                    steppedLine: false,\n                    lineTension: 0.6,\n                    pointRadius: 0,\n                    pointHitRadius: 10,\n                    borderDash: [3],\n                },\n                {\n                    type: 'bar',\n                    fill: false,\n                    borderDash: [],\n                    label: name.toUpperCase(),\n                    backgroundColor: 'rgba(255,140,0)',// orange\n                    borderColor: 'rgb(255,140,0)',\n                    data: data,\n                    lineTension: 0.1,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n\n                },\n\n            ],\n        };\n    };\n\n    getBar = (name, data, dates) => {\n        const myData = this.createDataForGraph(name, data, dates);\n        return (<Bar\n            height={400}\n            width={400}\n            data={myData}\n        />)\n    };\n\n    getPie = (name, data, data2) => {\n        const options = {maintainAspectRatio: false};\n        const myData = this.createDataForPie(name, data, data2);\n        return (<Doughnut\n            height={250}\n            width={200}\n            data={myData}\n            redraw={true}\n            options={options}/>)\n    };\n\n    createDataForPie = (name, data1, data2) => {\n        return {\n            labels: [\n                data1.action, data2.action],\n            datasets: [{\n                data: [data1.result, data2.result],\n                backgroundColor: [\n                    '#b17a1a',\n                    '#6d4c0c',\n                ],\n                hoverBackgroundColor: [\n                    '#7e5812',\n                    '#4a310d',\n                ]\n            }]\n        };\n    };\n\n    render() {\n        const {data, name, dates} = this.state;\n        return (\n            <div>\n                {\n                    this.state.type\n                        ?\n                        this.state.type.match('line')\n                            ?\n                            this.getBar(name, data, dates)\n                            :\n                            this.getPie(name, data, dates)\n                        :\n                        <Loading/>\n                }\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport './Graph.css'\nimport {Graph} from \"../Graph/Graph\";\nimport {getUserData} from \"../../Functions/Http\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            data: [],\n            times: [],\n            type: '',\n            size: ''\n        };\n    }\n\n    componentWillUpdate(prevProps) {\n        if (this.props.data !== prevProps.data)\n            this.refreshData()\n    }\n\n    componentDidMount() {\n        console.log('component mounted', this.state.size);\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        const playerName = this.props.match.params.name;\n        getUserData(playerName, 'matches').then(({data}) => {\n            this.setState({\n                data: {\n                    killList: {data: data.matches.map(x => x.playerStats.kills), name: 'kill'},\n                    ekiaList: {data: data.matches.map(x => x.playerStats.ekia), name: 'ekia'},\n                    deathList: {data: data.matches.map(x => x.playerStats.deaths), name: 'death'},\n                    assistsList: {data: data.matches.map(x => x.playerStats.assists), name: 'assists'},\n                    ekiadRatioList: {data: data.matches.map(x => x.playerStats.ekiadRatio), name: 'ekiadRatio'},\n                },\n                times: {data: data.matches.map(x => x.utcStartSeconds)}\n            })\n        })\n    };\n\n    render() {\n        window.addEventListener('resize', () => this.setState({size: window.innerWidth}));\n        const chartList = Object.keys(this.state.data).map(x => this.state.data[x]);\n        const times = Object.keys(this.state.times).map(x => this.state.times[x])[0];\n        return (\n            <div className={'graph-container'}>\n                {\n                    chartList.map((x, index) => {\n                        return (<div key={index}>\n                            <Graph name={x.name} dates={times} data={x.data} type={'line'} size={this.state.size}/>\n                        </div>)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport {normalizeNumber} from \"../../Functions/Functions\";\nimport {Card} from \"../../components/Card/Card\";\nimport {Graph} from \"../Graph/Graph\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport './LifeTime.css'\nimport {cardsData, pieData} from \"./Data\";\n\nclass LifeTime extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n        }\n    }\n\n    s;\n\n    componentDidMount() {\n        this.getData(this.props.name);\n    }\n\n\n    getData = (username) => {\n        getUserData(username, 'profile').then(({data}) => {\n            this.setState({\n                allData: Object.keys(data.mp.lifetime.all)\n                    .map(x => Object.assign({action: x, result: data.mp.lifetime.all[x]})),\n            });\n        });\n    };\n    pieFactory = (divider, divided) => {\n        const {allData} = this.state;\n        const obj1 = this.hardFilter(allData, divider);\n        const obj2 = this.hardFilter(allData, divided);\n        return (<div className={'middel'}>\n            <div className={'card-wrapper'}>\n                <Card name={`${obj1.action.toUpperCase()}/${obj2.action.toUpperCase()}`}\n                      text={`Ratio ${normalizeNumber((obj1.result / obj2.result) * 100)}%`}>\n                    <Graph name={'test'} data={obj1} dates={obj2} type={'pie'} size={500}/>\n                </Card>\n            </div>\n        </div>)\n    };\n\n    cardFactory = (cardName) => {\n        const {allData} = this.state;\n        const filterResult = this.hardFilter(allData, cardName);\n        return (<Card\n            name={filterResult.action}>{((filterResult.result % 1) !== 0 ? normalizeNumber(filterResult.result) : filterResult.result)}</Card>)\n    };\n\n\n    hardFilter = (list, word) => {\n        return list.filter(x => x.action.split(' ').join('') === word)[0]\n    };\n\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        const cardFactoryList = cardsData();\n        const pieFactorList = pieData();\n        return (\n            <div>\n                {\n                    list.length > 0 ?\n                        <div className={'cards-wrapper'}>\n                            {\n                                pieFactorList.map((x, index) => {\n                                    return (<div key={index}>{this.pieFactory(x.obj1, x.obj2)}</div>)\n                                })\n                            }\n                            {\n                                cardFactoryList.map((x, index) => {\n                                    return (<div key={index}>{this.cardFactory(x)}</div>)\n                                })\n                            }\n                        </div>\n                        :\n                        <Loading/>\n                }\n            </div>\n        );\n    }\n\n\n}\n\nexport default LifeTime","export const pieData = () => {\n    return [\n        {\n            obj1: 'ekia',\n            obj2: 'deaths',\n        },\n        {\n            obj1: 'wins',\n            obj2: 'losses',\n\n        },\n        {\n            obj1: 'kills',\n            obj2: 'deaths',\n\n        },\n        {\n            obj1: 'statsHeadshot',\n            obj2: 'kills',\n\n        },\n        {\n            obj1: 'hits',\n            obj2: 'totalShots',\n\n        },\n        {\n            obj1: 'headshots',\n            obj2: 'hits',\n\n        },\n        {\n            obj1: 'hits',\n            obj2: 'misses',\n\n        }\n    ];\n};\nexport const cardsData = () => {\n    return [\n        'scoreCore',\n        'scorePerGame',\n        'scorePerMinute',\n        'kills',\n        \"damagePerGame\",\n        \"damagePerMinute\",\n        \"healsPerGame\",\n\n    ]\n};\n\n","import React from 'react'\nimport './Statistics.css'\nimport {SmallCard} from \"../../components/Card/Card\";\nimport {getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport WeeklyGraphs from \"../WeeklyGraphs/WeeklyGraphs\";\nimport LifeTime from \"../Multiplayer/LifeTime\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            allData: null,\n            playerStats: {\n                username: '',\n                level: 0,\n                prestige: 0,\n            },\n            page: '',\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n                const {data} = this.props.location.state;\n                const {username} = data;\n                const {level, prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n                this.setState({\n                    allData: Object.keys(multiplayerData).map(x => Object.assign({action: x, result: multiplayerData[x]})),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch',\n                });\n\n    };\n\n    Top =() => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}</div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n\n    pagesLabels = () => {\n        const outPage = {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            color: '#553400',\n            backgroundColor: '#1b1b1b',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n        };\n        const inPage = {\n            backgroundColor: '#101010',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        };\n        return (\n            <div className={'page-labels'}>\n                <div style={this.state.page.match('Team Deathmatch') ? inPage : outPage}\n                     onClick={() => this.setState({page: 'Team Deathmatch'})}>Life time\n                </div>\n                <div style={!this.state.page.match('Team Deathmatch') ? inPage : outPage}\n                     onClick={() => this.setState({page: 'BlackOut'})}>Weekly\n                </div>\n            </div>)\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <WeeklyGraphs type={'mp'} playerName={this.state.playerStats.username}/>;\n            default:\n                return <LifeTime name={this.state.playerStats.username}/>;\n        }\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div className={'container'}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    {this.pagesLabels()}\n                                    <div className={'pagination-border'}>\n                                        {this.pages(this.state.page)}\n                                    </div>\n                                </div>\n                                :\n                                <Loading/>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from \"react\";\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n","import React from 'react'\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport './Login.css'\nimport {Link} from \"react-router-dom\";\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            validate: null,\n            query: '',\n            data:[]\n        }\n    }\n\n\n    validateUsername = (username) => {\n\n        getUserData(username).then(results => {\n            this.setState({validate: results.status === 'success',\n            data:results.data});\n        })\n    };\n\n    render() {\n        return (\n            <div className={'login'}>\n                {this.state.isLoading ?\n                    <Loading/>\n                    :\n                    <div/>}\n                <input onChange={(event) => {\n                    this.setState({query: event.target.value}, () => this.validateUsername(this.state.query));\n                }}/>\n\n\n                <div hidden={this.state.validate === null || this.state.validate === false}>\n                    <Link  to={{ pathname: `/user/${this.state.query}`, state: { data: this.state.data} }}>\n                        <button>Enter</button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Login","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./components/Logo/Logo\";\nimport Login from \"./Container/Login/Login\";\nimport LifeTime from \"./Container/Multiplayer/LifeTime\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            list: [],\n            com: false,\n            isAuthorized: null\n        }\n    }\n\n    setAutoraztion = (access, username) => {\n        if (access)\n            this.setState({\n                isAuthorized: true,\n                username: username\n            })\n    };\n\n    render() {\n        return (\n            <div>\n                <Logo/>\n                <Router>\n                    <div>\n                        <Route exact path={'/'} component={Login}/>\n                        <Route path={'/user/:name'} render={(props)=><Statistics {...props} />}/>\n                        <Route path={'/lifetime/:neme'} component={LifeTime}/>\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport {Route, Router} from \"react-router-dom\";\nimport Login from \"./Container/Login/Login\";\nimport WeeklyGraphs from \"./Container/WeeklyGraphs/WeeklyGraphs\";\nimport LifeTime from \"./Container/Multiplayer/LifeTime\";\n\n\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}