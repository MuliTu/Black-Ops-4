{"version":3,"sources":["components/Card/CardPie.js","components/Functions.js","Main/Statistics.js","App.js","index.js"],"names":["CardPie","_ref","name","data1","data2","sub","data","labels","concat","datasets","backgroundColor","hoverBackgroundColor","react_default","a","createElement","className","es","width","height","options","maintainAspectRatio","Card","_ref2","getPresentage","num","total","arguments","length","undefined","Math","floor","toString","slice","getShortNum","getUserData","URL","fetch","headers","Access-Control-Allow-Origin","then","res","json","Statistics","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","state","username","mp","console","log","setState","level","hits","all","misses","hs","headshotPercentage","wins","losses","suicides","longestKillstreak","prestige","damagePerMinute","damagePerGame","ekiaPerGame","ekia","deaths","kills","assists","timePlayedTotal","getTimePlayed","time","lifetime","style","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","totalShots","totalGames","main_min_default","completed","colors","CardPie_CardPie","CardPie_Card","split","React","Component","App","changeList","user","show","list","_this2","src","alt","map","index","key","type","defaultChecked","onClick","src_Main_Statistics","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.25ea87f1.chunk.js","sourcesContent":["import React from \"react\";\nimport './Card.css'\nimport {Doughnut} from 'react-chartjs-2';\nexport const CardPie = ({name, data1, data2, sub}) => {\n    const orange = '#b27b00';\n    const blackOrange = '#6e4c00';\n    const data = {\n        labels: [\n            `${data1}%`,\n            `${data2}%`\n        ],\n        datasets: [{\n            data: [data1, data2],\n            backgroundColor: [\n                '#ff9202',\n                '#694603',\n            ],\n            hoverBackgroundColor: [\n                '#ff9202',\n                '#694603',\n            ]\n        }]\n    };\n    return (<div className={'card'}>\n        <div className={'card-container-pie'}>\n            <div className={'card-top'}>{name}</div>\n\n            <Doughnut data={data}\n                      width={150}\n                      height={100}\n                      options={{\n                          maintainAspectRatio: false\n                      }}/>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div className={'card-container'}>\n            <div className={'background'}></div>\n            <div className={'card-top'}> {name}</div>\n            <div className={'card-context'}>{data}</div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};","export const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num,slice=4) =>{\n    return num.toString().slice(0,slice)\n};\n\nexport const getPrestigeImage = (num) => {\n        const list = [\n                '',\n                'https://image.ibb.co/ideMDA/L1.png',\n                'https://image.ibb.co/jFtgDA/L2.png',\n                'https://image.ibb.co/idRe0q/L3.png',\n                'https://image.ibb.co/jsoRfq/L4.png',\n                'https://image.ibb.co/cwviRV/L5.png',\n                'https://image.ibb.co/iRMe0q/L6.png',\n                'https://image.ibb.co/i9bq6V/L7.png',\n                'https://image.ibb.co/cPXK0q/L8.png',\n                'https://image.ibb.co/mZvHmV/L9.png',\n                'https://image.ibb.co/dzGe0q/L10.png'\n            ];\n\n        return list[num]\n    };\n\nexport const getUserData = (name) => {\n    const URL = `https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/${name}/profile/`;\n    return fetch(URL, {\n        headers: {'Access-Control-Allow-Origin': '*',}})\n        .then(res => res.json()).then(({data}) => {\n            return data;\n        })\n\n};\n\n\n\n\n","import React from 'react'\nimport './Statistics.css'\nimport {Card, CardPie} from \"../components/Card/CardPie\";\nimport ProgressBar from 'react-progress-bar-battlenet-style';\nimport {getPresentage, getPrestigeImage, getShortNum, getUserData} from \"../components/Functions\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: this.props.name,\n            level: null,\n            lifetime: [],\n            hits: 0,\n            misses: 0,\n            hs: 0,\n            wins: 0,\n            losses: 0,\n            suicides: 0,\n            longestKillstreak: 0,\n            prestige: 0,\n            damagePerMinute: 0,\n            damagePerGame: 0,\n            headshotPercentage: 0,\n            ekiaPerGame: 0,\n            ekia: 0,\n            deaths: 0,\n            kills: 0,\n            assists: 0,\n            timePlayedTotal: 0\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        getUserData(this.state.username)\n            .then(({username, mp}) => {\n                console.log(mp);\n                this.setState({\n                    username: username,\n                    level: mp['level'],\n                    hits: mp['lifetime'].all['hits'],\n                    misses: mp['lifetime'].all['misses'],\n                    hs: mp['lifetime'].all['headshots'],\n                    headshotPercentage: mp['lifetime'].all['headshotPercentage'],\n                    wins: mp['lifetime'].all['wins'],\n                    losses: mp['lifetime'].all['losses'],\n                    suicides: mp['lifetime'].all['suicides'],\n                    longestKillstreak: mp['lifetime'].all['longestKillstreak'],\n                    prestige: mp['prestige'],\n                    damagePerMinute: mp['lifetime'].all['damagePerMinute'],\n                    damagePerGame: mp['lifetime'].all['damagePerGame'],\n                    ekiaPerGame: mp['lifetime'].all['ekiaPerGame'],\n                    ekia: mp['lifetime'].all['ekia'],\n                    deaths: mp['lifetime'].all['deaths'],\n                    kills: mp['lifetime'].all['kills'],\n                    assists: mp['lifetime'].all['assists'],\n                    timePlayedTotal: mp['lifetime'].all['timePlayedTotal']\n                })\n            });\n    };\n\n    getTimePlayed = (time) => {\n        const h = (time / 60) / 60;\n        return (h).toString().slice(0, 4)\n    };\n\n    render() {\n        const style = {\n            backgroundImage: `url(${getPrestigeImage(this.state.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        const totalShots = this.state.misses + this.state.hits;\n        const totalGames = this.state.wins + this.state.losses;\n        return (\n            <div className={'container'}>\n                <div className={'top'} style={style}>\n                        <div className={'left'} >\n                            <div >\n                                {this.state.username}\n                            </div>\n                        </div>\n                        <div className={'right'}>\n                            <div className={'right-sub'}>Level: {this.state.level}\n                                <ProgressBar\n                                    completed={getPresentage(this.state.level, 55)}\n                                    colors={[30, 70, 95]}/>\n                            </div>\n                            <div className={'right-sub'}>Prestige: {this.state.prestige}</div>\n                    </div>\n                </div>\n                <div className={'middle'}>\n                    <CardPie name={`Shots (${totalShots})`}\n                             data1={getPresentage(this.state.hits, totalShots)}\n                             data2={getPresentage(this.state.misses, totalShots)}\n                             sub={`Hits: ${this.state.hits} | Miss: ${this.state.misses}`}/>\n                    <CardPie name={`Win/Lose (${totalGames})`}\n                             data1={getPresentage(this.state.wins, totalGames)}\n                             data2={getPresentage(this.state.losses, totalGames)}\n                             sub={`Wins: ${this.state.wins} | Losses: ${this.state.losses}`}/>\n                    <Card name={'Headshots'}\n                          data={this.state.hs}\n                          sub={`${getPresentage(this.state.hs, this.state.hits, false)}% of you hits are headshots`}/>\n                    <Card name={'Suicides'}\n                          data={this.state.suicides}\n                          sub={`${getPresentage(this.state.suicides, this.state.deaths, false)}% of you death is suicide `}/>\n                    <Card name={'Longest Kill streak'}\n                          data={this.state.longestKillstreak}\n                          sub={(this.state.longestKillstreak > 10 ? 'Nice!!!' : 'Try to work on yourself dude')}/>\n                    <Card name={'Damage Per Minute'} data={getShortNum(this.state.damagePerMinute, 5)}\n                          sub={`${((this.state.damagePerMinute) / 100).toString().split('.')[0]} +/- People in minute`}/>\n                    <Card name={'Damage Per Game'}\n                          data={getShortNum(this.state.damagePerGame)}\n                          sub={`${((this.state.damagePerGame) / 100).toString().split('.')[0]} +/- People in game`}/>\n                    <Card name={'Avg. EKIA Per Game'}\n                          data={getShortNum(this.state.ekiaPerGame)}\n                          sub={(this.state.ekiaPerGame > 10 ? 'Nice!!!!' : 'Need to practise')}/>\n                    <Card name={'K/D Ratio'}\n                          data={getShortNum(this.state.kills / this.state.deaths)}\n                          sub={`Kills: ${this.state.kills}| Deaths: ${this.state.deaths}`}/>\n                    <Card name={'EKIA (Kills + Assists) Ratio'}\n                          data={getShortNum((this.state.kills + this.state.assists) / this.state.deaths)}\n                          sub={`EKIA: ${this.state.assists + this.state.kills} | Death:${this.state.deaths}`}/>\n                    <Card name={'Time Played'}\n                          data={this.getTimePlayed(this.state.timePlayedTotal)}\n                          sub={'Time in total'}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Statistics;","import React from 'react'\nimport Statistics from \"./Main/Statistics\";\nimport './App.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [\n                {show: true, name: 'dudioudo'},\n                {show: true, name: 'WakingBrizard'},\n                {show: true, name: 'FormingSpoon801'},\n                {show: true, name: 'MenahemCohen'},\n                {show: true, name: 'SufleShokolad'},\n\n            ]\n        }\n\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n\n        })\n    };\n\n\n    render() {\n        return (\n            <div>\n                    <img className={'logo'}\n                         src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                         alt={'logo'}/>\n                {this.state.list.map((user,index) => {\n                    return (<div key={index} className={'player-list'}>\n                        <label>\n                            <input type={'checkbox'}\n                                   defaultChecked\n                                   onClick={() => {this.changeList(user)}}/>\n                            {user.name}\n                        </label>\n                    </div>)\n                })}\n                <div className={'App'}>\n                    {this.state.list.map((user,index) => {\n                        return user.show ?\n                            <div key={index}>\n                                <Statistics name={user.name}/>\n                            </div>\n                            :\n                            <div/>\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}