{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","Container/Statistics/Statistics.js","components/Loading/Loading.js","App.js","index.js"],"names":["getPresentage","num","total","arguments","length","undefined","Math","floor","toString","slice","getPrestigeImage","Logo","react_default","a","createElement","className","src","alt","Card","_ref2","name","data","sub","split","toUpperCase","map","letter","concat","join","fixName","TestGraph","_ref3","lable","datasets","options","title","display","text","user","createDataForGraph","color","x","push","style","backgroundColor","es","width","height","label","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","toJson","json","getUserData","username","console","log","Promise","resolve","url","fetch","then","Statistics","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","_ref","prestige","level","mp","multiplayerData","lifetime","all","setState","temp","playerStats","prestig","isLoading","keys","state","assign","action","result","show","getTimePlayed","time","prestigeImage","Top","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","main_min_default","completed","colors","Tags","query","_this2","tags","currentUserColor","border","list","onChange","event","target","value","replace","tag","index","key","onClick","toLowerCase","includes","CardPie_Card","hidden","React","Component","Loading","App","changeList","clickHendler","com","getAllUsers","users","Functions_Logo","Container_Statistics_Statistics","Loading_Loading","CardPie_TestGraph","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mUAEaA,EAAgB,SAACC,EAAKC,GAC/B,QADsDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACvCG,KAAKC,MAAON,EAAMC,EAAS,MAASD,EAAMC,GAAQM,WAAWC,MAAM,EAAG,IAO5EC,EAAmB,SAACT,GAe7B,MAda,CACT,GACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,uCAGQA,IAGHU,EAAO,WAChB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACXC,IAAK,uEACLC,IAAK,UCQRC,EAAO,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,IAC9B,OAAQV,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAhB,IDPW,SAACK,GACxB,OAAOA,EAAKG,MAAM,IAAI,GAAGC,cACrBJ,EAAKG,MAAM,IAAId,MAAM,GAChBgB,IAAI,SAAAC,GAAM,OAAKA,IAAWA,EAAOF,cAAlB,IAAAG,OACND,GACJA,IAASE,KAAK,ICEcC,CAAQT,IACtCR,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACVM,EAAKb,WAAWe,MAAM,IAAInB,OAAS,GACjCiB,EAAKb,WAAWC,MAAM,EAAG,GAAKY,GAEtCT,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAaO,EAA7B,QAKCQ,EAAY,SAAAC,GAAmB,IAAjBX,EAAiBW,EAAjBX,KAAMY,EAAWD,EAAXC,MACvBX,EAAO,CACTW,MAAO,CAACA,GACRC,SAAU,GACVC,QAAS,CACLC,MAAO,CACHC,SAAS,EACTC,KAAM,wBAMlB,OAFajB,EAAKK,IAAI,SAAAa,GAAI,OAAIC,EAAmBD,EAAKjB,KAAL,SAAuBiB,EAAKjB,KAAKW,GAAQM,EAAKE,SAC1Ff,IAAI,SAAAgB,GAAC,OAAIpB,EAAKY,SAASS,KAAKD,KAC1B7B,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAc4B,MAAO,CAACC,gBAAiB,UACnDhC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAciB,EAAOT,MAAM,IAAI,GAAGC,cAClDQ,EAAMT,MAAM,IAAId,MAAM,GACjBgB,IAAI,SAAAC,GAAM,OAAKA,IAAWA,EAAOF,cAAlB,IAAAG,OACND,GACJA,IAASE,KAAK,KAExBhB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAKF,MAAO,CAACC,gBAAiB,QAASJ,MAAO,SACzCM,MAAO,IACPC,OAAQ,IAAK1B,KAAMA,IACxBT,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAhB,YASHwB,EAAqB,SAACnB,EAAMC,EAAMmB,GAC3C,MAAO,CACHQ,MAAO5B,EACPwB,gBAAe,QAAAjB,OAAUa,EAAV,SACfS,YAAW,QAAAtB,OAAUa,EAAV,OACXU,YAAa,EACbC,qBAAoB,QAAAxB,OAAUa,EAAV,SACpBY,iBAAgB,QAAAzB,OAAUa,EAAV,OAChBnB,KAAM,CAACA,KC9FFgC,EAAS,SAAChC,GACnB,OAAOA,EAAKiC,QAOHC,EAAc,SAACC,GAGxB,OAFAC,QAAQC,IAAI,mBAAmBF,GAExBG,QAAQC,SAPKC,EAQJ,qFAAAlC,OAAsF6B,EAAtF,aAPTM,MAAMD,GAAKE,KAAKV,KADJ,IAACQ,GCsITG,cAjIX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAiBVQ,QAAU,SAACjB,GACPD,EAAYC,GACPO,KAAK,SAAAW,GAAY,IAAVrD,EAAUqD,EAAVrD,KACJoC,QAAQC,IAAIrC,GACZ,IAAMmC,EAAWnC,EAAKmC,SAChBmB,EAAWtD,EAAKsD,SAChBC,EAAQvD,EAAKwD,GAAGD,MAChBE,EAAkBzD,EAAKwD,GAAGE,SAASC,IACzCd,EAAKe,SAAS,CACVC,KAAMJ,EACNK,YAAa,CACT3B,SAAUA,EACVoB,MAAOA,EACPQ,QAAST,KAGjBT,EAAKe,SAAS,CAACI,WAAW,IAC1BnB,EAAKe,SAAS,CACVC,KAAMf,OAAOmB,KAAKpB,EAAKqB,MAAML,MAAMzD,IAAI,SAAAgB,GAAC,OAAI0B,OAAOqB,OAAO,CACtDC,OAAQhD,EACRiD,OAAQxB,EAAKqB,MAAML,KAAKzC,GACxBkD,MAAM,WAvCPzB,EA6CnB0B,cAAgB,SAACC,GAEb,OADWA,EAAO,GAAM,IACbrF,WAAWC,MAAM,EAAG,IA/ChByD,EAkDnB4B,cAAgB,WACZ,MAAO,IAnDQ5B,EAsDnB6B,IAAM,WACF,IAAMD,EAAgB,CAClBE,gBAAe,OAAArE,OAASjB,EAAiBwD,EAAKqB,MAAMJ,YAAYR,UAAjD,KACfsB,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,SAEpB,OACIvF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MAAO4B,MAAOmD,GAC1BlF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACZH,EAAAC,EAAAC,cAAA,WACKoD,EAAKqB,MAAMJ,YAAY3B,WAGhC5C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAhB,UAAqCmD,EAAKqB,MAAMJ,YAAYP,MACxDhE,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CACIwF,UAAWrG,EAAckE,EAAKqB,MAAMJ,YAAYP,MAAO,IACvD0B,OAAQ,CAAC,GAAI,GAAI,OAEzB1F,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAhB,aAAwCmD,EAAKqB,MAAMJ,YAAYR,aA1E5DT,EA+EnBqC,KAAO,WACH,MAAO,CAAC,OAAQ,OAAO,QA9EvBrC,EAAKqB,MAAQ,CACTL,KAAM,KACNsB,MAAO,GACPrB,YAAa,CACT3B,SAAU,GACVoB,MAAO,KACPD,SAAU,GAEdU,WAAW,GAVAnB,mFAefG,KAAKI,QAAQJ,KAAKJ,MAAM7C,uCAqEnB,IAAAqF,EAAApC,KACCqC,EAAOrC,KAAKkC,OACZI,EAAmB,CAACC,OAAM,cAAAjF,OAAgB0C,KAAKJ,MAAMzB,QACrDqE,EAA4B,OAApBxC,KAAKkB,MAAML,KAAgBb,KAAKkB,MAAML,KAAO,GAC3D,OACItE,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAa4B,MAAOgE,GAE5B/F,EAAAC,EAAAC,cAAA,WACKuD,KAAK0B,MACNnF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOgG,SAAU,SAACC,GACdN,EAAKxB,SAAS,CAACuB,MAAOO,EAAMC,OAAOC,MAAMzG,WAAW0G,QAAQ,IAAK,SAFzE,QAMQR,EAAKjF,IAAI,SAAC0F,EAAKC,GAAN,OACLxG,EAAAC,EAAAC,cAAA,MAAIC,UAAW,WAAYsG,IAAKD,EAAOE,QAAS,kBAAMb,EAAKxB,SAAS,CAACuB,MAAOW,EAAII,kBAAkBJ,KAI1GvG,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACX8F,EAAKzG,OAAS,EAEXyG,EAAKpF,IAAI,SAACgB,EAAG2E,GACT,OAAO3E,EAAEgD,OAAO8B,cAAcC,SAASf,EAAKlB,MAAMiB,OAC9C5F,EAAAC,EAAAC,cAAA,OAAKuG,IAAKD,GACNxG,EAAAC,EAAAC,cAAC2G,EAAD,CAAMrG,KAAMqB,EAAEgD,OAAQpE,KAAMoB,EAAEiD,UAGlC9E,EAAAC,EAAAC,cAAA,OAAKuG,IAAKD,EAAOM,QAAQ,MAKjC9G,EAAAC,EAAAC,cAAA,uBAvHX6G,IAAMC,WCNlBC,UAAU,WACnB,OAAQjH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBACpBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBCiFN+G,cA7EX,SAAAA,EAAY7D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IACf5D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2D,GAAAtD,KAAAH,KAAMJ,KAeV8D,WAAa,SAACzF,GACVA,EAAKqD,MAAQrD,EAAKqD,KAClBzB,EAAKe,SAAS,CACV3C,UAnBW4B,EAuBnB8D,aAAe,WACX9D,EAAKe,SAAS,CAACgD,KAAM/D,EAAKqB,MAAM0C,OAxBjB/D,EA2BnBgE,YAAc,WACV,OAAOhE,EAAKqB,MAAMsB,KAAKpF,IAAI,SAAAgB,GAAC,MAAK,CAACpB,KAAMoB,EAAEpB,KAAMmB,MAAOC,EAAED,UA1BzD0B,EAAKqB,MAAQ,CACTsB,KAAM,GACNoB,KAAK,GAJM/D,mFAUfG,KAAKY,SAAS,CACV4B,KAAMA,uCAoBL,IAAAJ,EAAApC,KAKC8D,EAAQ9D,KAAK6D,cACnB,OACItH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsH,EAAD,MAEID,EAAM/H,QAAU,EAEZQ,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACXsD,KAAKkB,MAAMsB,KAAKpF,IAAI,SAACa,EAAM8E,GACxB,OAAOe,EAAM/H,OAAS,EAElBQ,EAAAC,EAAAC,cAAA,OAAKuG,IAAKD,EAAOrG,UAAW,uBACxBH,EAAAC,EAAAC,cAAA,UAAQwG,QAAS,kBAAMb,EAAKuB,iBAA5B,UAAArG,OACiB8E,EAAKlB,MAAM0C,IAAgB,aAAV,QADlC,UAGArH,EAAAC,EAAAC,cAACuH,EAAD,CAAYjH,KAAMkB,EAAKlB,KACXoB,MAAK,OAAAb,OAASW,EAAKE,MAAd,QAGrB5B,EAAAC,EAAAC,cAAA,OAAKuG,IAAKD,GACNxG,EAAAC,EAAAC,cAACwH,EAAD,UAMhB1H,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SA9BjB,CAAC,QAAS,OAAQ,KAAM,OAAQ,WAC3C,oBAAqB,kBAAmB,gBAAiB,qBACzD,cAAe,OAAQ,SAAU,QAAS,WA8BfU,IAAI,SAACO,EAAOoF,GACf,OAAQxG,EAAAC,EAAAC,cAAA,OAAKuG,IAAKD,GACdxG,EAAAC,EAAAC,cAACyH,EAAD,CAAWnH,KAAM+G,EAAOnG,MAAOA,gBAnErD2F,IAAMC,WAgFXf,EAAO,WAChB,MAAO,CAGH,CAAClB,MAAM,EAAMvE,KAAM,kBAAmBoB,MAAO,YAAanB,KAAM,MCtFxEmH,IAASC,OAAO7H,EAAAC,EAAAC,cAAC4H,EAAD,MAAOC,SAASC,eAAe","file":"static/js/main.0106e14a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num, slice = 4) => {\n    return num.toString().slice(0, slice)\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {Bar, Doughnut} from 'react-chartjs-2';\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const CardPie = ({name, data1, data2, sub}) => {\n    const data = {\n        labels: [\n            `${data1}%`,\n            `${data2}%`\n        ],\n        datasets: [{\n            data: [data1, data2],\n            backgroundColor: [\n                '#ff9202',\n                '#694603',\n            ],\n            hoverBackgroundColor: [\n                '#ff9202',\n                '#694603',\n            ]\n        }]\n    };\n\n    return (<div className={'card'}>\n        <div className={'card-container-pie'}>\n            <div className={'card-top'}>{name}</div>\n\n            <Doughnut data={data}\n                      width={150}\n                      height={100}\n                      options={{\n                          maintainAspectRatio: false\n                      }}/>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div className={'card-container'}>\n            <div className={'card-top'}> {fixName(name)}</div>\n            <div className={'card-context'}>\n                {(data.toString().split('').length > 10 ?\n                    data.toString().slice(0, 6) : data)}\n            </div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const TestGraph = ({name, lable}) => {\n    const data = {\n        lable: [lable],\n        datasets: [],\n        options: {\n            title: {\n                display: true,\n                text: 'Custom Chart Title'\n            }\n        }\n    };\n    const test = name.map(user => createDataForGraph(user.data['username'], user.data[lable], user.color));\n    test.map(x => data.datasets.push(x));\n    return <div className={'card'}>\n        <div className={'graph-mini'} style={{backgroundColor: 'white'}}>\n            <div className={'card-container-pie'}>\n                <div className={'card-top'}>{(lable).split('')[0].toUpperCase() +\n                lable.split('').slice(1)\n                    .map(letter => (letter === letter.toUpperCase()\n                        ? ` ${letter}`\n                        : letter)).join('')}\n                </div>\n                <Bar style={{backgroundColor: 'white', color: 'white'}}\n                     width={300}\n                     height={300} data={data}/>\n                <div className={'card-sub'}>test</div>\n            </div>\n        </div>\n\n    </div>\n\n\n};\n\nexport const createDataForGraph = (name, data, color) => {\n    return {\n        label: name,\n        backgroundColor: `rgba(${color},0.4)`,\n        borderColor: `rgba(${color},1)`,\n        borderWidth: 1,\n        hoverBackgroundColor: `rgba(${color},0.7)`,\n        hoverBorderColor: `rgba(${color},1)`,\n        data: [data]\n    };\n};\n","export const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username) => {\n    console.log('this is username',username);\n\n    return Promise.resolve(\n             myFetch(`https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/${username}/profile/`)\n    )\n\n};\n","import React from 'react'\nimport './Statistics.css'\nimport ProgressBar from 'react-progress-bar-battlenet-style';\nimport {Card, CardPie} from \"../../components/Card/CardPie\";\nimport {fixName, getPresentage, getPrestigeImage, getShortNum} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\n\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temp: null,\n            query: '',\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            isLoading: true\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name)\n    }\n\n    getData = (username) => {\n        getUserData(username)\n            .then(({data}) => {\n                console.log(data);\n                const username = data.username;\n                const prestige = data.prestige;\n                const level = data.mp.level;\n                const multiplayerData = data.mp.lifetime.all;\n                this.setState({\n                    temp: multiplayerData,\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestig: prestige,\n                    }\n                });\n                this.setState({isLoading: false});\n                this.setState({\n                    temp: Object.keys(this.state.temp).map(x => Object.assign({\n                        action: x,\n                        result: this.state.temp[x],\n                        show: true\n                    }))\n                });\n            });\n    };\n\n    getTimePlayed = (time) => {\n        const h = (time / 60) / 60;\n        return (h).toString().slice(0, 4)\n    };\n\n    prestigeImage = () => {\n        return {};\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                        <ProgressBar\n                            completed={getPresentage(this.state.playerStats.level, 55)}\n                            colors={[30, 70, 95]}/>\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n    Tags = () => {\n        return ['Kill', 'Ekia','All'];\n    };\n\n\n    render() {\n        const tags = this.Tags();\n        const currentUserColor = {border: `solid thin ${this.props.color}`};\n        const list = (this.state.temp !== null ? this.state.temp : []);\n        return (\n            <div className={'container'} style={currentUserColor}>\n                {\n                    <div>\n                        {this.Top()}\n                        <div >\n                            <input onChange={(event) => {\n                                this.setState({query: event.target.value.toString().replace(' ', '')})\n                            }}/>\n                            Tags:\n                            {\n                                tags.map((tag, index) =>\n                                    <li className={'tag-list'} key={index} onClick={() => this.setState({query: tag.toLowerCase()})}>{tag}</li>\n                                )\n                            }\n\n                            <div className={'card-wrapper'}>\n                                {list.length > 0\n                                    ?\n                                    list.map((x, index) => {\n                                        return x.action.toLowerCase().includes(this.state.query) ?\n                                            <div key={index}>\n                                                <Card name={x.action} data={x.result}/>\n                                            </div>\n                                            :\n                                            <div key={index} hidden={true}/>\n\n\n                                    })\n                                    :\n                                    <div/>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;","import React from 'react'\n\nexport const Loading = () => {\n    return (<div className={'loading-spinner'}>\n        <i className=\"fas fa-spinner\"/>\n    </div>)\n};","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {TestGraph} from \"./components/Card/CardPie\";\nimport {Loading} from \"./components/Loading/Loading\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            com: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    clickHendler = () => {\n        this.setState({com: !this.state.com})\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n    render() {\n        const labels = ['level', 'hits', 'hs', 'wins', 'suicides',\n            'longestKillstreak', 'damagePerMinute', 'damagePerGame', 'headshotPercentage',\n            'ekiaPerGame', 'ekia', 'deaths', 'kills', 'assists'\n        ];\n        const users = this.getAllUsers();\n        return (\n            <div>\n                <Logo/>\n                {\n                    users.length >= 1\n                        ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n\n                                    <div key={index} className={'statistic-container'}>\n                                        <button onClick={() => this.clickHendler()}>\n                                            {`To the ${(!this.state.com ? 'Graph' : 'Statistics')} page`}\n                                        </button>\n                                        <Statistics name={user.name}\n                                                    color={`rgb(${user.color})`}/>\n                                    </div>\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div className={'graph'}>\n                            {\n                                labels.map((lable, index) => {\n                                    return (<div key={index}>\n                                        <TestGraph name={users} lable={lable}/>\n                                    </div>)\n                                })\n                            }\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        // {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}