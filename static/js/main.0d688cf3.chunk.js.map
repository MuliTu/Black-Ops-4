{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","components/Loading/Loading.js","Container/Card/Graph.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/Multiplayer/LifeTime.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["normalizeNumber","num","slice","arguments","length","undefined","concat","toString","split","getPrestigeImage","Logo","react_default","a","createElement","className","src","alt","fixName","name","toUpperCase","map","letter","join","Card","props","children","text","URL","toJson","data","json","getUserData","username","action","path","match","Promise","resolve","fetch","then","Loading","id","Graph","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshData","setState","dates","type","normalizeDate","timeList","x","Date","toLocaleDateString","getHours","getMinutes","createDataForGraph","temp","console","log","avgValue","avg","state","reduce","b","i","push","labels","reverse","datasets","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","getBar","myData","es","height","width","redraw","getPie","data2","createDataForPie","data1","result","hoverBackgroundColor","inherits","createClass","key","value","prevProps","Loading_Loading_Loading","React","Component","WeeklyGraphs","playerName","_ref","killList","matches","playerStats","kills","ekiaList","ekia","deathList","deaths","assistsList","assists","ekiadRatioList","ekiadRatio","times","utcStartSeconds","_this2","chartList","keys","index","Graph_Graph","LifeTime","getData","allData","mp","lifetime","all","assign","pieFactory","divider","divided","obj1","hardFilter","obj2","CardPie_Card","cardFactory","cardName","filterResult","lifeTime","list","word","filter","Statistics","_data$mp","level","prestige","multiplayerData","ction","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","pagesLabels","outPage","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","inPage","onClick","pages","Container_WeeklyGraphs_WeeklyGraphs","Container_Multiplayer_LifeTime","array","App","changeList","user","show","getAllUsers","validateName","status","isAutorise","query","com","users","Functions_Logo","Container_Statistics_Statistics","onChange","event","target","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0d688cf3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const normalizeNumber = (num, slice = 3) => {\n    return `${num.toString().split('.')[0]}.${num.toString().split('.')[1].slice(0,slice)}`\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {fixName, normalizeNumber} from \"../../Functions/Functions\";\n\nexport const Card = (props) => {\n    return (<div className={'small-card'}>\n        <div>\n            <div className={'mall-card-top'}>{fixName(props.name)}</div>\n            <div className={'small-card-context'}>{props.children}</div>\n            <div className={'small-card-sub'}>{props.text} </div>\n        </div>\n    </div>)\n};\n\nexport const List = ({data,filter}) => {\n        const filteredList = data.filter(x=>x.action.startsWith(filter));\n    return (\n        <div>\n            <h1>{fixName(filter)}</h1>\n            <div  className={'table'}>\n                {SortMaxMin(filteredList).map((x,index)=>\n                    <div key={index} className={'table-line'}>\n                        <div>{fixName(x.action).replace(fixName(filter),'').length > 0\n                    ?\n                            fixName(x.action).replace(fixName(filter),''):\n                            filter\n                    }</div>\n                        <div className={'table-result'}>{Math.round(x.result)}</div>\n                    </div>)}\n            </div>\n\n        </div>\n    );\n};\n\n\n const SortMaxMin = (array)=>{\n    return array.sort((a,b)=> b.result - a.result)\n};\n\n\nexport class MyPie {\n}","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action='profile') => {\n    const path = (!action.match('matches')  ? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar, Doughnut} from \"react-chartjs-2\";\nimport {Loading} from \"../../components/Loading/Loading\";\n\nexport class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            data: [],\n            dates: [],\n            type: ''\n\n        }\n    }\n\n    componentDidMount() {\n        this.refreshData()\n    }\n\n    componentWillUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.refreshData()\n        }\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            type: this.props.type\n\n        });\n    };\n\n    normalizeDate = (timeList) => {\n        return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')}${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n    };\n\n    createDataForGraph = (name, data, dates) => {\n        const temp = this.normalizeDate(dates);\n        console.log(typeof temp);\n        const avgValue = [];\n        const avg = this.state.data ? this.state.data.reduce((a, b) => a + b) : 0;\n        for (let i = 0; i < 20; i++) {avgValue.push(avg/20)}\n            return {\n                labels: temp.reverse(),\n                datasets: [\n                    {\n                        type: 'line',\n                        fill: false,\n                        label: `Average`,\n                        backgroundColor: 'rgba(255, 255, 255,0.5)',\n                        borderColor: 'rgba(255, 255, 255,0.5)',\n                        data: avgValue,\n                        steppedLine: false,\n                        lineTension: 0.6,\n                        pointRadius: 0,\n                        pointHitRadius: 10,\n                        borderDash: [3],\n                    },\n                    {\n                        type: 'bar',\n                        fill: false,\n                        borderDash: [],\n                        label: name.toUpperCase(),\n                        backgroundColor: 'rgba(255,140,0)',// orange\n                        borderColor: 'rgb(255,140,0)',\n                        data: data,\n                        lineTension: 0.1,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n\n                    },\n\n                ],\n            };\n    };\n\n\n    getBar = (name, data, dates) => {\n        const myData = this.createDataForGraph(name, data, dates);\n        return (< Bar\n            height={300}\n            width={500}\n            data={myData}\n            redraw={true}\n        />)\n    };\n\n    getPie = (name, data, data2) => {\n\n        const myData = this.createDataForPie(name, data, data2);\n        return (<Doughnut\n            height={150}\n            width={150}\n            data={myData}\n            redraw={true}\n        />)\n    };\n\n    createDataForPie = (name, data1, data2) => {\n        return {\n            labels: [\n                data1.action.toUpperCase(), data2.action\n            ],\n            datasets: [{\n                data: [data1.result, data2.result],\n                backgroundColor: [\n                    '#b17a1a',\n                    '#6d4c0c',\n                    '#FFCE56'\n                ],\n                hoverBackgroundColor: [\n                    '#7e5812',\n                    '#4a310d',\n                    '#FFCE56'\n                ]\n            }]\n        };\n    };\n\n    render() {\n        const {data} = this.state;\n        const {name} = this.state;\n        const {dates} = this.state;\n        console.log('this is dates',dates);\n        return (\n            <div>\n                {\n                    this.state.type\n                        ?\n                        this.state.type.match('line')\n                            ?\n                            this.getBar(name, data, dates)\n                            :\n                            this.getPie(name, data, dates)\n                        :\n                        <Loading/>\n                }\n\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport './Graph.css'\nimport {Graph} from \"../Card/Graph\";\nimport {getUserData} from \"../../Functions/Http\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:'',\n            data: [],\n            times: [],\n            type: ''\n        };\n    }\n\n    componentWillUpdate(prevProps) {\n        if(this.props.data !== prevProps.data)\n            this.refreshData()\n    }\n\n    componentDidMount() {\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        const {playerName} = this.props;\n        getUserData(playerName,'matches').then(({data}) => {\n            this.setState({\n                data: {\n                    killList: {data: data.matches.map(x => x.playerStats.kills), name: 'kill'},\n                    ekiaList: {data: data.matches.map(x => x.playerStats.ekia), name: 'ekia'},\n                    deathList: {data: data.matches.map(x => x.playerStats.deaths), name: 'death'},\n                    assistsList: {data: data.matches.map(x => x.playerStats.assists), name: 'assists'},\n                    ekiadRatioList: {data: data.matches.map(x => x.playerStats.ekiadRatio), name: 'ekiadRatio'},\n                },\n                times: {data: data.matches.map(x => x.utcStartSeconds)}})\n        })\n    };\n\n    render() {\n        const chartList = Object.keys(this.state.data).map(x => this.state.data[x]);\n        const times = Object.keys(this.state.times).map(x => this.state.times[x])[0];\n        return (\n            <div className={'graph-container'}>\n                {\n                    chartList.map((x, index) => {\n                        return (<div key={index}>\n                            <Graph name={x.name} dates={times} data={x.data} type={'line'}/>\n                        </div>)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport {normalizeNumber} from \"../../Functions/Functions\";\nimport {Card} from \"../../components/Card/CardPie\";\nimport {Graph} from \"../Card/Graph\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport './LifeTime.css'\nclass LifeTime extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('this is props',props);\n        this.state = {\n            allData: null,\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name);\n\n\n    }\n\n\n    getData = (username) => {\n        getUserData(username, 'profile').then(({data}) =>\n        {this.setState({\n                    allData: Object.keys(data.mp.lifetime.all)\n                        .map(x => Object.assign({action: x, result: data.mp.lifetime.all[x]})),});\n            });\n    };\n    pieFactory = (divider, divided)=>{\n        const {allData} = this.state;\n        console.log(allData);\n        const obj1 = this.hardFilter(allData,divider);\n        const obj2 = this.hardFilter(allData,divided);\n\n        return(<div className={'middel'}>\n            <div className={'card-wrapper'}>\n                <Card name={`${obj1.action.toUpperCase()}/${obj2.action.toUpperCase()}`}\n                      text={`Ratio ${normalizeNumber(obj1.result / obj2.result)*100}%`}>\n                    <Graph name={'test'} data={obj1} dates={obj2} type={'pie'}/>\n                 </Card>\n             </div>\n        </div>)\n    };\n\n    cardFactory =(cardName)=>{\n        const {allData} = this.state;\n         const filterResult = this.hardFilter(allData,cardName);\n        return(<Card name={filterResult.action}>{filterResult.result}</Card>)\n    };\n\n    lifeTime = () => {\n        const pieFactorList = [\n            {\n                obj1:'ekia',\n                obj2:'deaths'\n            },\n            {\n                obj1:'wins',\n                obj2:'losses'\n            },\n            {\n                obj1:'kills',\n                obj2:'deaths'\n            },\n            {\n                obj1:'statsHeadshot',\n                obj2:'kills'\n            }\n            ];\n        const cardFactoryList = ['scoreCore',\n            'scorePerGame',\n            'scorePerMinute',\n            'kills',\n            \"damagePerGame\",\n            \"damagePerMinute\",\n            \"healsPerGame\",\n        ];\n\n\n        return (\n            <div className={'cards-wrapper'}>\n                        {\n                            pieFactorList.map((x,index) =>{return(<div key={index}>{this.pieFactory(x.obj1,x.obj2)}</div>)})\n                        }\n                {\n                    cardFactoryList.map((x,index)=>{return(<div key={index}>{this.cardFactory(x)}</div>)})\n                }\n            </div>\n        );\n    };\n\n    hardFilter = (list ,word) => {\n        return list.filter(x=>x.action.split(' ').join('') === word)[0]\n    };\n\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div>\n                {\n                    list.length > 0 ?\n                    this.lifeTime()\n                        :\n                        <Loading/>\n                }\n            </div>\n        );\n    }\n\n\n}\n\nexport default LifeTime","import React from 'react'\nimport './Statistics.css'\nimport {SmallCard} from \"../../components/Card/CardPie\";\nimport {getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport WeeklyGraphs from \"../WeeklyGraphs/WeeklyGraphs\";\nimport LifeTime from \"../Multiplayer/LifeTime\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: '',\n            array: []\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name);\n\n\n    }\n\n    getData = (username) => {\n        getUserData(username, 'profile')\n            .then(({data}) => {\n                const {username} = data;\n                const {level, prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n\n                this.setState({\n                    allData: Object.keys(multiplayerData).map(x => Object.assign({\n                        ction: x,\n                        result: multiplayerData[x]\n                    })),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch',\n\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n\n    hardFilter = (list, word) => {\n        return list.filter(x => x.action.split(' ').join('') === word)[0]\n    };\n\n\n    pagesLabels = () => {\n        const outPage = {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            color: '#553400',\n            backgroundColor: '#1b1b1b',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n        };\n        const inPage = {\n            backgroundColor: '#101010',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        };\n\n        return (\n            <div className={'page-labels'}>\n                <div style={this.state.page === 'Team Deathmatch' ? inPage : outPage}\n                     onClick={() => this.setState({page: 'Team Deathmatch'})}>Life time\n                </div>\n                <div style={this.state.page !== 'Team Deathmatch' ? inPage : outPage}\n                     onClick={() => this.setState({page: 'BlackOut'})}>Weekly\n                </div>\n            </div>)\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <WeeklyGraphs type={'mp'} playerName={this.state.playerStats.username}/>;\n            default:\n                return <LifeTime name={this.state.playerStats.username}/>;\n\n\n        }\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div className={'container'}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    {this.pagesLabels()}\n                                    <div className={'pagination-border'}>\n                                        {this.pages(this.state.page)}\n                                    </div>\n                                </div>\n                                :\n                                <Loading/>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {Loading} from \"./components/Loading/Loading\";\nimport {getUserData} from \"./Functions/Http\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: 'FormingSpoon801',\n            list: [],\n            com: false,\n            isAutorise: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n    validateName = (name) => {\n        getUserData(name).then(({status}) =>\n            this.setState({\n                isAutorise: (status === 'success')\n            }));\n    };\n\n    render() {\n        const users = this.getAllUsers();\n        const {isAutorise} = this.state;\n\n        return (\n            <div>\n                <Logo/>\n                {\n                    isAutorise ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={this.state.query} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div>\n                            <div className={'login-step'}>\n                                Enter User name <input width={300} onChange={(event) => this.setState({query: event.target.value})}/>\n                                <button onClick={() => this.validateName(this.state.query)}>check</button>\n                            </div>\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        // {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}