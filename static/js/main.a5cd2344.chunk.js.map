{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","Container/Statistics/Statistics.js","Container/Statistics/Pageing.js","components/Loading/Loading.js","App.js","index.js"],"names":["getPresentage","num","total","arguments","length","undefined","Math","floor","toString","slice","getPrestigeImage","Logo","react_default","a","createElement","className","src","alt","Card","_ref2","name","data","sub","split","toUpperCase","map","letter","concat","join","fixName","toJson","json","getUserData","username","Promise","resolve","url","fetch","then","Statistics","React","Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","_ref","prestige","level","mp","multiplayerData","lifetime","all","setState","temp","playerStats","prestig","page","isLoading","keys","state","x","assign","action","result","show","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","main_min_default","completed","colors","teamDeathMatch","list","index","toLowerCase","includes","query","key","CardPie_Card","hidden","outPage","marginLeft","border","borderRadius","borderBottom","color","backgroundColor","shdowBox","padding","inPage","_this2","currentUserColor","onClick","Loading","src_App_0","App","changeList","user","clickHendler","com","getAllUsers","users","Functions_Logo","Container_Statistics_Statistics","Loading_Loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5cd2344.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num, slice = 4) => {\n    return num.toString().slice(0, slice)\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {Bar, Doughnut} from 'react-chartjs-2';\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const CardPie = ({name, data1, data2, sub}) => {\n    const data = {\n        labels: [\n            `${data1}%`,\n            `${data2}%`\n        ],\n        datasets: [{\n            data: [data1, data2],\n            backgroundColor: [\n                '#ff9202',\n                '#694603',\n            ],\n            hoverBackgroundColor: [\n                '#ff9202',\n                '#694603',\n            ]\n        }]\n    };\n\n    return (<div className={'card'}>\n        <div className={'card-container-pie'}>\n            <div className={'card-top'}>{name}</div>\n\n            <Doughnut data={data}\n                      width={150}\n                      height={100}\n                      options={{\n                          maintainAspectRatio: false\n                      }}/>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div className={'card-container'}>\n            <div className={'card-top'}> {fixName(name)}</div>\n            <div className={'card-context'}>\n                {(data.toString().split('').length > 10 ?\n                    data.toString().slice(0, 6) : data)}\n            </div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const TestGraph = ({name, lable}) => {\n    const data = {\n        lable: [lable],\n        datasets: [],\n        options: {\n            title: {\n                display: true,\n                text: 'Custom Chart Title'\n            }\n        }\n    };\n    const test = name.map(user => createDataForGraph(user.data['username'], user.data[lable], user.color));\n    test.map(x => data.datasets.push(x));\n    return <div className={'card'}>\n        <div className={'graph-mini'} style={{backgroundColor: 'white'}}>\n            <div className={'card-container-pie'}>\n                <div className={'card-top'}>{(lable).split('')[0].toUpperCase() +\n                lable.split('').slice(1)\n                    .map(letter => (letter === letter.toUpperCase()\n                        ? ` ${letter}`\n                        : letter)).join('')}\n                </div>\n                <Bar style={{backgroundColor: 'white', color: 'white'}}\n                     width={300}\n                     height={300} data={data}/>\n                <div className={'card-sub'}>test</div>\n            </div>\n        </div>\n\n    </div>\n\n\n};\n\nexport const createDataForGraph = (name, data, color) => {\n    return {\n        label: name,\n        backgroundColor: `rgba(${color},0.4)`,\n        borderColor: `rgba(${color},1)`,\n        borderWidth: 1,\n        hoverBackgroundColor: `rgba(${color},0.7)`,\n        hoverBorderColor: `rgba(${color},1)`,\n        data: [data]\n    };\n};\n","export const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username) => {\n    return Promise.resolve(\n             myFetch(`https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/${username}/profile/`)\n    )\n\n};\n\n// matches/warzone/start/0/end/0/details","import React from 'react'\nimport './Statistics.css'\nimport ProgressBar from 'react-progress-bar-battlenet-style';\nimport {Card} from \"../../components/Card/CardPie\";\nimport {getPresentage, getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport Pageing from \"./Pageing\";\n\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temp: null,\n            query: '',\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name)\n    }\n\n    getData = (username) => {\n        getUserData(username)\n            .then(({data}) => {\n                const username = data.username;\n                const prestige = data.prestige;\n                const level = data.mp.level;\n                const multiplayerData = data.mp.lifetime.all;\n                this.setState({\n                    temp: multiplayerData,\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestig: prestige,\n                    },\n                    page: 'Team Deathmatch'\n\n                });\n                this.setState({isLoading: false});\n                this.setState({\n                    temp: Object.keys(this.state.temp).map(x => Object.assign({\n                        action: x,\n                        result: this.state.temp[x],\n                        show: true\n                    }))\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                        <ProgressBar\n                            completed={getPresentage(this.state.playerStats.level, 55)}\n                            colors={[30, 70, 95]}/>\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n    teamDeathMatch = () => {\n        const list = (this.state.temp !== null ? this.state.temp : []);\n        return (\n            <div className={'middel'}>\n                <div className={'card-wrapper'}>\n                    {list.length > 0\n                        ?\n                        list.map((x, index) => {\n                            return x.action.toLowerCase().includes(this.state.query) ?\n                                <div key={index}>\n                                    <Card name={x.action} data={x.result}/>\n                                </div>\n                                :\n                                <div key={index} hidden={true}/>\n                        })\n                        :\n                        <div/>\n                    }\n                </div>\n            </div>\n\n\n        );\n    };\n\n    list = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return (<div>Coming soon...</div>);\n            case 'Team Deathmatch':\n                return this.teamDeathMatch();\n            default:\n\n        }\n    };\n    outPage = () => {\n        return {\n            marginLeft: \"1px\",\n            border: \"#e6a414 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#e6a414 solid thin\",\n            color:'#553400',\n            backgroundColor: 'black',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n\n        }\n    };\n\n    inPage = () => {\n        return {\n            backgroundColor: '#1b1b1b',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#e6a414 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        }\n    };\n\n    render() {\n        const currentUserColor = {border: `solid thin ${this.props.color}`};\n        return (\n            <div className={'container'} style={currentUserColor}>\n                {\n                    <div>\n                        {this.Top()}\n                        <div className={'testCallse'}>\n                            <div style={this.state.page === 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                                 onClick={() => this.setState({page: 'Team Deathmatch'})}>Team Deathmatch\n                            </div>\n                            <div style={this.state.page !== 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                                 onClick={() => this.setState({page: 'BlackOut'})}>BlackOut\n                            </div>\n                        </div>\n                        <div className={'pagination-border'}>\n                            {\n                                this.list(this.state.page)\n                            }\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\n\nexport class Pageing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pages: null\n        }\n    }\n\n\n\n\n    componentDidMount() {\n        this.setState({\n            pages: [\n                {page: 'a', isShow: true},\n                {page: 'b', isShow: false},\n                {page: 'c', isShow: false},\n                {page: 'd', isShow: false},\n            ]\n        })\n    }\n\n    changePage = (data) => {\n        const currentClickedPage = this.state.pages.filter(x => x.page === data.page).isShow=true;\n        console.log(currentClickedPage);\n        this.setState({\n            ...currentClickedPage\n        })\n    };\n\n\n    render() {\n        const pages = this.state.pages ? this.state.pages : [];\n        console.log(this.state.pages);\n        return (\n            <div>\n                {pages.map(x =>\n                    <div style={(x.isShow? this.inPage() : this.outPage())}\n                         onClick={() => this.changePage(x)}>{x.page}</div>)}\n            </div>\n        );\n    }\n\n\n}\n\nexport default Pageing","import React from 'react'\n\nexport const Loading = () => {\n    return (<div className={'loading-spinner'}>\n        <i className=\"fas fa-spinner\"/>\n    </div>)\n};","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {TestGraph} from \"./components/Card/CardPie\";\nimport {Loading} from \"./components/Loading/Loading\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            com: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    clickHendler = () => {\n        this.setState({com: !this.state.com})\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n\n\n    render() {\n        const users = this.getAllUsers();\n        return (\n            <div>\n                <Logo/>\n                {\n                    users.length >= 1\n                        ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={user.name} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        // {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}