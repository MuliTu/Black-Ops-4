{"version":3,"sources":["components/Card/CardPie.js","components/Functions.js","Main/Main.js","http/Search.js","App.js","index.js"],"names":["CardPie","_ref","name","data1","data2","sub","react_default","a","createElement","className","victory_pie","colorScale","data","x","concat","y","padAngle","innerRadius","labelRadius","style","labels","fill","fontSize","fontWeight","fontFamily","Card","_ref2","getPresentage","num","total","arguments","length","undefined","Math","floor","toString","slice","getShortNum","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","level","lifetime","hits","misses","hs","wins","losses","suicides","longestKillstreak","prestige","damagePerMinute","damagePerGame","headshotPercentage","ekiaPerGame","ekia","deaths","kills","assists","_this2","URL","fetch","headers","Access-Control-Allow-Origin","then","res","json","getUserData","mp","console","log","setState","all","totalShots","totalGames","main_min_default","completed","colors","CardPie_CardPie","CardPie_Card","split","React","Component","App","src_Main_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6559f809.chunk.js","sourcesContent":["import React from \"react\";\nimport './Card.css'\nimport {VictoryPie} from 'victory-pie';\n\nexport const CardPie = ({name, data1, data2, sub}) => {\n    const orange = '#b27b00';\n    const blackOrange = '#6e4c00';\n    return (<div className={'card'}>\n        <div className={'card-container-pie'}>\n            <div className={'card-top'}>{name}</div>\n            <div className={'card-context-pie'}><VictoryPie\n                    colorScale={[orange,blackOrange]}\n                    data={[\n                        {x: `${data1}%`, y: data1},\n                        {x: `${data2}%`, y: data2},\n                    ]}\n                    padAngle={3}\n                    innerRadius={100}\n                    labelRadius={110}\n                    style={{labels: {fill: \"black\", fontSize: 20, fontWeight: \"bold\" ,fontFamily:'Titillium Web, sans-serif'}}}\n                /></div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const Card = ({name, data, sub}) => {\n    return (<div>\n        <div className={'card-container'}>\n            <div className={'card-top'}> {name}</div>\n            <div className={'card-context'}>{data}</div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};","export const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num,slice=4) =>{\n    return num.toString().slice(0,slice)\n};","import React from 'react'\nimport './Main.css'\n\nimport {Card, CardPie} from \"../components/Card/CardPie\";\nimport ProgressBar from 'react-progress-bar-battlenet-style';\nimport {getUserData} from \"../http/Search\";\nimport {getPresentage, getShortNum} from \"../components/Functions\";\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: 'MenahemCohen',\n            level: null,\n            lifetime: [],\n            hits: 0,\n            misses: 0,\n            hs: 0,\n            wins: 0,\n            losses: 0,\n            suicides: 0,\n            longestKillstreak: 0,\n            prestige: 0,\n            damagePerMinute: 0,\n            damagePerGame: 0,\n            headshotPercentage: 0,\n            ekiaPerGame: 0,\n            ekia: 0,\n            deaths: 0,\n            kills: 0,\n            assists: 0\n        }\n    }\n\n    componentDidMount() {\n        getUserData(this.state.username).then(({data}) => data)\n            .then(({username, mp}) => {\n                console.log(mp);\n                this.setState({\n                    username: username,\n                    level: mp['level'],\n                    hits: mp['lifetime'].all['hits'],\n                    misses: mp['lifetime'].all['misses'],\n                    hs: mp['lifetime'].all['headshots'],\n                    headshotPercentage: mp['lifetime'].all['headshotPercentage'],\n                    wins: mp['lifetime'].all['wins'],\n                    losses: mp['lifetime'].all['losses'],\n                    suicides: mp['lifetime'].all['suicides'],\n                    longestKillstreak: mp['lifetime'].all['longestKillstreak'],\n                    prestige: mp['prestige'],\n                    damagePerMinute: mp['lifetime'].all['damagePerMinute'],\n                    damagePerGame: mp['lifetime'].all['damagePerGame'],\n                    ekiaPerGame: mp['lifetime'].all['ekiaPerGame'],\n                    ekia: mp['lifetime'].all['ekia'],\n                    deaths: mp['lifetime'].all['deaths'],\n                    kills: mp['lifetime'].all['kills'],\n                    assists: mp['lifetime'].all['assists']\n                })\n            });\n\n    }\n\n\n    render() {\n        const totalShots = this.state.misses + this.state.hits;\n        const totalGames = this.state.wins + this.state.losses;\n        return (\n            <div className={'container'}>\n                <div className={'top'}>\n                    <div className={'left'}>{this.state.username}</div>\n                    <div className={'right'}>\n                        <div className={'right-sub'}>Level: {this.state.level}\n                            <ProgressBar\n                                completed={getPresentage(this.state.level, 55)}\n                                colors={[30, 70, 95]}/>\n                        </div>\n                        <div className={'right-sub'}>Prestige: {this.state.prestige}</div>\n                    </div>\n                </div>\n                <div className={'middle'}>\n                    <div className={'middle-left'}>\n                        <div>\n                            <CardPie name={`Win/Lose (${totalGames})`}\n                                     data1={getPresentage(this.state.wins, totalGames)}\n                                     data2={getPresentage(this.state.losses, totalGames)}\n                                     sub={`Wins: ${this.state.wins} | Losses: ${this.state.losses}`}/>\n                        </div>\n                        <div>\n                            <CardPie name={`Shots (${totalShots})`}\n                                     data1={getPresentage(this.state.hits, totalShots)}\n                                     data2={getPresentage(this.state.misses, totalShots)}\n                                     sub={`Hits: ${this.state.hits} | Miss: ${this.state.misses}`}/>\n                        </div>\n                    </div>\n                    <div className={'middle-right'}>\n                        <div>\n\n                            <Card name={'Headshots'}\n                                  data={`${getPresentage(this.state.hs, this.state.hits, false)}%`}\n                                  sub={`${this.state.hs} Headshots in ${this.state.hits} Hits`}/>\n                        </div>\n                        <div>\n\n                            <Card name={'Suicides'}\n                                  data={this.state.suicides}\n                                  sub={`You commit a suicides ${this.state.suicides} times`}/>\n                        </div>\n                        <div>\n\n                            <Card name={'Longest Kill streak'}\n                                  data={this.state.longestKillstreak}\n                                  sub={(this.state.longestKillstreak > 10 ? 'Nice!!!' : 'Try to work on yourself dude')}/>\n                        </div>\n                        <div>\n\n                            <Card name={'Damage Per Minute'} data={getShortNum(this.state.damagePerMinute, 5)}\n                                  sub={`${((this.state.damagePerMinute) / 100).toString().split('.')[0]} +/- People in minute`}/>\n                        </div>\n                        <div>\n\n                            <Card name={'Damage Per Game'}\n                                  data={getShortNum(this.state.damagePerGame)}\n                                  sub={`${((this.state.damagePerGame) / 100).toString().split('.')[0]} +/- People in game`}/>\n                        </div>\n                        <div>\n\n                            <Card name={'Avg. EKIA Per Game'}\n                                  data={getShortNum(this.state.ekiaPerGame)}\n                                  sub={(this.state.ekiaPerGame > 10 ? 'Nice!!!!' : 'Need to practise')}/>\n                        </div>\n                        <div>\n\n                            <Card name={'K/D Ratio'}\n                                  data={getShortNum(this.state.kills / this.state.deaths)}\n                                  sub={`Kills: ${this.state.kills}\n                                  | Deaths: ${this.state.deaths}`}/>\n                        </div>\n\n                        <Card name={'EKIA (Kills + Assists) Ratio'}\n                              data={getShortNum((this.state.kills + this.state.assists)/this.state.deaths )}\n                              sub={`EKIA: ${this.state.assists +this.state.kills} | Death:${this.state.deaths}`}/>\n                        <Card name={'Title'} data={'data'}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Main","\nexport const getUserData = (name) => {\n    const URL = `https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/${name}/profile/`;\n    return fetch(URL, {headers: {'Access-Control-Allow-Origin': '*',}})\n        .then(res => res.json())\n\n};\n\n","import React from 'react'\nimport Main from \"./Main/Main\";\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <div className={'App'}>\n                    <Main />\n\n            </div>\n        );\n    }\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}