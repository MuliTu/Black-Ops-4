{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","components/Loading/Loading.js","Container/Card/CardLine.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["getPrestigeImage","num","Logo","react_default","a","createElement","className","src","alt","fixName","name","split","toUpperCase","slice","map","letter","concat","join","Card","_ref","data","sub","List","_ref2","filter","x","action","startsWith","index","key","replace","Math","round","result","URL","toJson","json","getUserData","username","arguments","length","undefined","path","Promise","resolve","fetch","then","Loading","id","CardLine","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshData","setState","dates","size","avg","state","reduce","b","createDataForGraph","avgValue","i","push","amount","labels","reverse","datasets","type","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","matchDate","timeList","Date","toLocaleDateString","getHours","getMinutes","inherits","createClass","value","prevProps","mydata","es","height","width","redraw","React","Component","WeeklyGraphs","playerName","killList","matches","playerStats","kills","ekiaList","ekia","deathList","deaths","assistsList","assists","ekiadRatioList","ekiadRatio","times","utcEndSeconds","utcStartSeconds","console","log","_this2","chartList","keys","time","CardLine_CardLine","Statistics","getData","_data$mp","mp","level","prestige","multiplayerData","lifetime","all","allData","assign","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","lifeTime","list","CardPie_List","CardPie_Card","pagesLabels","inPage","outPage","onClick","pages","Container_WeeklyGraphs_WeeklyGraphs","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","Loading_Loading_Loading","App","changeList","user","show","getAllUsers","validateName","status","isAutorise","query","com","users","Functions_Logo","Container_Statistics_Statistics","onChange","event","target","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b4a70cd3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num, slice = 4) => {\n    return num.toString().slice(0, slice)\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div>\n            <div className={'card-top'}>{fixName(name)}</div>\n            <div className={'card-context'}>\n                {(data)}\n            </div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\n\nexport const List = ({data,filter}) => {\n        data.filter(x=>x.action.startsWith(filter));\n\n    return (\n        <div>\n            <h1>{fixName(filter)}</h1>\n            <div  className={'table'}>\n                {data.map((x,index)=>\n                    <div key={index} className={'table-line'}>\n                        <div>{fixName(x.action).replace('Kill Enemy','')}</div>\n                        <div className={'table-result'}>{Math.round(x.result)}</div>\n                    </div>)}\n            </div>\n\n        </div>\n    );\n};\n\n\n\n","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action='profile') => {\n    // const path = (action !=='matches'? `${URL}${username}/${action}/type/wz` :\n    const path = (action !=='matches'? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar} from \"react-chartjs-2\";\n\nexport class CardLine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            amount: 1,\n            data: [],\n            dates: [],\n            size: 0,\n            avg: 0,\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.refreshData()\n    }\n\n    componentWillUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.refreshData()\n\n        }\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            size: this.props.size\n        }, () => {\n            this.setState({\n                avg: this.state.data ? this.state.data.reduce((a, b) => a + b) : 0\n            });\n\n        });\n    };\n\n    createDataForGraph = (name, data, avg, dates) => {\n        const avgValue = [];\n        for (let i = 0; i < 20; i++) {\n            avgValue.push(avg)\n        }\n        if (this.state.amount === 1)\n            return {\n                labels: dates.reverse(),\n                datasets: [\n                    {\n                        type: 'line',\n                        fill: false,\n                        label: `Average`,\n                        backgroundColor: 'rgba(255, 255, 255,0.5)',\n                        borderColor: 'rgba(255, 255, 255,0.5)',\n                        data: avgValue,\n                        steppedLine: false,\n                        lineTension: 0.6,\n                        pointRadius: 0,\n                        pointHitRadius: 10,\n                        borderDash: [3],\n                    },\n                    {\n                        type: 'bar',\n                        fill: false,\n                        borderDash: [],\n                        label: name.toUpperCase(),\n                        backgroundColor: 'rgba(255,140,0)',// orange\n                        borderColor: 'rgb(255,140,0)',\n                        data: data,\n                        lineTension: 0.1,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n\n                    },\n\n                ],\n            };\n    };\n\n    matchDate = (timeList) => {\n        return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')} ${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n    };\n\n    render() {\n        const {dates} = this.state ? this.state : [];\n        const mydata = this.createDataForGraph(this.state.name, this.state.data, this.state.avg / 20, this.matchDate(dates));\n        return (\n            <div>\n                <Bar\n                    height={300}\n                    width={500}\n                    data={mydata}\n                    redraw={true}\n                />\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport './Graph.css'\nimport {CardLine} from \"../Card/CardLine\";\nimport {getUserData} from \"../../Functions/Http\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('props',props);\n        this.state = {\n            username:'',\n            data: [],\n            times: [],\n            type: ''\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.type !== prevProps.type)\n            this.refreshData()\n    }\n\n    componentDidMount() {\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        const {playerName} = this.props;\n        getUserData(playerName,'matches')\n            .then(({data}) => {\n            this.setState({\n                data: {\n                    killList: {data: data.matches.map(x => x.playerStats.kills), name: 'kill'},\n                    ekiaList: {data: data.matches.map(x => x.playerStats.ekia), name: 'ekia'},\n                    deathList: {data: data.matches.map(x => x.playerStats.deaths), name: 'death'},\n                    assistsList: {data: data.matches.map(x => x.playerStats.assists), name: 'assists'},\n                    ekiadRatioList: {data: data.matches.map(x => x.playerStats.ekiadRatio), name: 'ekiadRatio'},\n                },\n                times: {utcEndSeconds: {data: data.matches.map(x => x.utcStartSeconds), name: 'utcEndSeconds'},}\n            })\n        })\n    };\n\n    render() {\n        const chartList = Object.keys(this.state.data).map(x => this.state.data[x]);\n        const time = Object.keys(this.state.times).map(x => this.state.times[x])[0];\n        return (\n            <div className={'graph-container'}>\n                {\n                    chartList.map((x, index) => {\n                        return (<div key={index}>\n                            <CardLine name={x.name} dates={time.data} data={x.data}/>\n                        </div>)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport './Statistics.css'\nimport {Card, List} from \"../../components/Card/CardPie\";\nimport {getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport WeeklyGraphs from \"../WeeklyGraphs/WeeklyGraphs\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: '',\n            filter:''\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name)\n    }\n\n    getData = (username) => {\n        getUserData(username, 'profile')\n            .then(({data}) => {\n                const {username} = data;\n                const {level, prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n                this.setState({\n                    allData: Object.keys(multiplayerData).map(x => Object.assign({\n                        action: x,\n                        result: multiplayerData[x]\n                    })),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch'\n\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n    lifeTime = () => {\n\n\n        //groups: killEnemy\n\n\n\n        const list = this.state.allData;\n        return (\n            <div className={'middel'}>\n                <div className={'card-wrapper'}>\n                    <div className={'list-nest'}>\n                        <List data={list} filter={'killEnemy'} />\n                        <List data={list} filter={'stats'} />\n                    </div>\n                    {\n                        list.map((x, index) => {\n                            return <div key={index}>\n                                <Card name={x.action} data={x.result}/>\n                            </div>\n                        })\n                    }\n\n\n\n                    {/*<TempCard data={tempList2}/>*/}\n                </div>\n            </div>\n\n\n        );\n    };\n\n    pagesLabels = () => {\n        return (\n            <div className={'page-labels'}>\n                <div style={this.state.page === 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'Team Deathmatch'})}>Life time\n                </div>\n                <div style={this.state.page !== 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'BlackOut'})}>Weekly\n                </div>\n            </div>)\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <WeeklyGraphs type={this.state.type ? 'mp' : 'wz'}\n                                     playerName={this.state.playerStats.username}/>;\n            default:\n                return this.lifeTime();\n\n\n        }\n    };\n\n    outPage = () => {\n        return {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            color: '#553400',\n            backgroundColor: 'black',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n\n        }\n    };\n\n    inPage = () => {\n        return {\n            backgroundColor: '#1b1b1b',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        }\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div className={'container'}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    {this.pagesLabels()}\n                                    <div className={'pagination-border'}> {this.pages(this.state.page)}</div>\n                                </div>\n                                :\n                                <Loading/>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {Loading} from \"./components/Loading/Loading\";\nimport {getUserData} from \"./Functions/Http\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: 'FormingSpoon801',\n            list: [],\n            com: false,\n            isAutorise: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n    validateName = (name) => {\n        getUserData(name).then(({status}) =>\n            this.setState({\n                isAutorise: (status === 'success')\n            }));\n    };\n\n    render() {\n        const users = this.getAllUsers();\n        const {isAutorise} = this.state;\n\n        return (\n            <div>\n                <Logo/>\n                {\n                    isAutorise ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={this.state.query} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div>\n                            <div className={'login-step'}>\n                                Enter User name <input width={300} onChange={(event) => this.setState({query: event.target.value})}/>\n                                <button onClick={() => this.validateName(this.state.query)}>check</button>\n                            </div>\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        // {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}