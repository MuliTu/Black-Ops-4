{"version":3,"sources":["components/Logo/Logo.js","Functions/Http.js","Functions/Functions.js","Container/Login/Login.js","Container/Navigation/Navigation.js","Container/Top/Top.js","components/Card/Card.js","components/Loading/Loading.js","Container/Graph/Graph.js","Container/LifeTime/LifeTime.js","Container/LifeTime/Data.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/TeamMate/table.js","Container/TeamMate/TeamMate.js","App.js","index.js"],"names":["Logo","react_default","a","createElement","className","src","alt","URL","toJson","data","json","myFetch","url","fetch","then","getUserData","username","action","arguments","length","undefined","path","match","concat","Promise","resolve","getUsersData","usersList","console","log","all","map","user","normalizeNumber","num","toString","includes","split","slice","getPrestigeImage","fixName","name","toUpperCase","letter","join","normalizeDate","timeList","x","Date","toLocaleDateString","getHours","getMinutes","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateUsername","results","setState","validate","status","res","state","query","options","_this2","firebase","ref","on","snap","users","keys","val","assign","_this3","index","key","onClick","hidden","Link","to","pathname","React","Component","Navigation","changePage","page","pagesList","pages","forEach","isClicked","indexOf","outPage","marginLeft","border","borderRadius","borderBottom","backgroundColor","shdowBox","padding","inPage","style","color","textDecorationLine","toLowerCase","children","Top","prestigeImage","backgroundImage","prestige","backgroundRepeat","backgroundPosition","backgroundSize","level","params","userName","userLevel","mp","userPrestige","update","personal","t","Container_Navigation_Navigation","Card","text","Loading","id","Graph","_React$Component","refreshData","dates","type","createDataForGraph","labels","reverse","datasets","fill","label","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","updateDimensions","width","window","innerWidth","forceUpdate","getBar","myData","es","height","redraw","getPie","data2","createDataForPie","maintainAspectRatio","data1","result","hoverBackgroundColor","inherits","createClass","value","addEventListener","removeEventListener","_this$state","Loading_Loading_Loading","LifeTime","pieFactory","divider","divided","allData","obj1","hardFilter","obj2","Card_Card_Card","Graph_Graph","size","cardFactory","cardName","filterResult","list","word","filter","userData","lifetime","cardFactoryList","pieFactorList","WeeklyGraphs","arraysEqual","arraToSave","arrayWithChanges","values","reduce","r","o","date","playerName","_ref","fromAPI","matches","assists","playerStats","utcStartSeconds","ekia","ekiadRatio","kills","dataFromDB","weekly","prevProps","chartList","names","times","isBigger","num1","num2","TeamMate","search","isSuccess","friedResult","friendName","myResult","myName","isLoading","setInterval","temp","onChange","event","target","actoin","Math","floor","abs","App","Logo_Logo","BrowserRouter","basename","process","Route","exact","render","Container_Login_Login","Container_Top_Top","Container_LifeTime_LifeTime","Container_WeeklyGraphs_WeeklyGraphs","Container_TeamMate_TeamMate","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a5afc569.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action='profile') => {\n\n    const path = (!action.match('matches')  ? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n\nexport const getUsersData = (usersList) =>{\n    console.log('active');\nreturn Promise.all(usersList.map(user =>{return myFetch(`${URL}${user}/profile`)}))\n};\n","import * as firebase from \"firebase\";\n\nexport const normalizeNumber = (num) => {\n\n    return (num.toString().includes('.')?`${num.toString().split('.')[0]}.${num.toString().split('.')[1].slice(0,3)}`:num)\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n\nexport const normalizeDate = (timeList) => {\n    return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')} ${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n};\n\nexport const getSnapKey = (ref,data) =>{\n    const  userRef=firebase.database().ref(`/users`);\n    userRef.child(`/${ref}`).on('value',(snap)=>{\n        console.log('this is snap',snap.val());\n        if(snap.val() === null){\n            console.log('create data');\n            firebase.database().ref(`/users/${ref}`).push({\n                data:data\n            });\n            return snap.val();\n        }\n\n        return Object.keys(snap.val())[0];\n\n    });\n};\n\n\nexport const getUsers = () =>{\n     firebase.database().ref('/users/').on('value', (snap) => {\n         // console.log(Object.keys(snap.val()).map(x => Object.assign({name: x})))\n      return Object.keys(snap.val()).map(x => Object.assign({name: x}));\n    });\n};","import React from 'react'\nimport {getUserData, myFetch} from \"../../Functions/Http\";\nimport './Login.css'\nimport {Link} from \"react-router-dom\";\nimport {getUsers} from \"../../Functions/Functions\";\nimport * as firebase from \"firebase\";\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            validate: false,\n            query: '',\n            data: [],\n            res: '',\n            options: []\n        }\n    }\n\n    componentWillMount() {\n        firebase.database().ref('/users/').on('value', (snap) => {\n            const users = Object.keys(snap.val()).map(x => Object.assign({name: x}));\n                this.setState({\n                    options: users.map(x => x.name)\n                })\n        })\n\n\n        }\n\n        validateUsername = (username) => {\n            getUserData(username).then(results => {\n                this.setState({\n                    validate: results.status === 'success',\n                    data: results.data,\n                    res: results.status\n                })\n            });\n        };\n\n        render()\n        {\n            const {options} = this.state;\n            return (\n                <div className={'login'}>\n                    <div>\n                        {\n                            options.length > 0 ?\n                                options.map((user, index) => {\n                                    return (\n                                        <div key={index} onClick={() => {\n                                            this.setState({\n                                                query: user\n                                            }, () => this.validateUsername(this.state.query))\n                                        }}>{user}\n\n                                        </div>\n                                    )\n                                })\n                                :\n                                <div>No User in list</div>\n\n                        }\n\n\n                    </div>\n                    <div hidden={!this.state.validate}><Link\n                        to={{pathname: `/${this.state.query}/lifetime`, state: {data: this.state.data}}}>\n                        Click Her\n                    </Link></div>\n                </div>\n            );\n        }\n\n\n    }\n\n    export\n    default\n    Login","import React from 'react'\nimport './Navigation.css'\nimport Link from \"react-router-dom/es/Link\";\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            pages:[\n                {name:'', isClicked:false}\n            ]\n        }\n    }\n\n    componentDidMount(){\n        this.setState({\n            pages:[\n                {name:'LifeTime',isClicked: true},\n                {name:'Weekly',isClicked: false},\n                {name:'TeamMates',isClicked: false},\n            ]\n        })\n    }\n\n    changePage= (page) =>{\n      const pagesList = this.state.pages;\n      pagesList.forEach((x=>x.isClicked = false));\n      const index = pagesList.indexOf(page);\n      pagesList[index].isClicked = true;\n        this.setState({\n            pages:pagesList\n        },()=>console.log(this.state))\n\n\n\n    };\n\n\n    render() {\n        const outPage = {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            backgroundColor: '#1b1b1b',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n        };\n        const inPage = {\n            backgroundColor: '#101010',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        };\n        const {pages} = this.state;\n        return (\n            <div className={'navigation'}>\n                {pages.map((page,index) =>{\n                    return (<div key={index}>\n                        <div style={page.isClicked? inPage : outPage} onClick={()=>this.changePage(page)}>\n                            <Link style={{color:'#fc6621',textDecorationLine:'none'}} to={page.name.toLowerCase()}>{page.name}</Link>\n                        </div>\n                    </div>)\n                })}\n\n\n                {this.props.children}\n            </div>\n        );\n    }\n\n\n}\n\nexport default Navigation","import React from \"react\";\nimport {getPrestigeImage} from \"../../Functions/Functions\";\nimport './Top.css'\nimport Navigation from \"../Navigation/Navigation\";\nimport {getUserData, myFetch} from \"../../Functions/Http\";\nimport * as firebase from \"firebase\";\n\nclass Top extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            level: 0,\n            prestige: 0\n\n        }\n\n    }\n\n    prestigeImage = () => {\n        return {\n            backgroundImage: `url(${getPrestigeImage(this.state.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        }\n\n    };\n\n    componentWillMount() {\n\n        const {name} = this.props.match.params;\n        getUserData(name).then(res=>{\n            const userName = res.data.username;\n            const userLevel = res.data.mp.level;\n            const userPrestige = res.data.mp.prestige;\n            firebase.database().ref(`/users/${name}`).update({\n                personal: {\n                    name: userName,\n                    level: userLevel,\n                    prestige: userPrestige\n                },\n            });\n        });\n        firebase.database().ref(`/users/${name}`).on('value', (snap) => {\n            const t = snap.val();\n            this.setState({\n                username:t.personal.name,\n                level:t.personal.level,\n                prestige:t.personal.prestige\n            })\n        });\n    }\n\n    render() {\n        return (\n            <div className={'top'} style={this.prestigeImage()}>\n                <div className={'info-section'}>\n                    <div className={'left'}>\n                        <div>\n                            {this.state.username}\n                        </div>\n                    </div>\n                    <div className={'right'}>\n                        <div className={'right-sub'}>Level: {this.state.level}</div>\n                        <div className={'right-sub'}>Prestige: {this.state.prestige}</div>\n                    </div>\n                </div>\n                <Navigation/>\n            </div>\n        );\n    }\n};\nexport default Top","import React from \"react\";\nimport './Card.css'\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const Card = (props) => {\n    return (<div className={'card'}>\n        <div>\n            <div className={'card-top'}>{fixName(props.name)}</div>\n            <div className={'card-context'}>{props.children}</div>\n            <div className={'card-sub'}>{props.text} </div>\n        </div>\n    </div>)\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar, Doughnut} from \"react-chartjs-2\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport {normalizeDate} from \"../../Functions/Functions\";\n\nexport class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            data: [],\n            dates: [],\n            type: '',\n            width :window.innerWidth\n\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateDimensions);\n        this.refreshData();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            type: this.props.type,\n\n        });\n    };\n\n\n    createDataForGraph = (name, data, dates) => {\n        const temp = normalizeDate(dates);\n        const avgValue = [1];\n        // const avg = this.state.data ? this.state.data.reduce((a, b) => a + b) : 0;\n        // for (let i = 0; i < 20; i++) {\n        //     avgValue.push(avg / 20)\n        // }\n        return {\n            labels: temp.reverse(),\n            datasets: [\n                {\n                    type: 'line',\n                    fill: false,\n                    label: `Average`,\n                    backgroundColor: 'rgba(255, 255, 255,0.5)',\n                    borderColor: 'rgba(255, 255, 255,0.5)',\n                    data: avgValue,\n                    steppedLine: false,\n                    lineTension: 0.6,\n                    pointRadius: 0,\n                    pointHitRadius: 10,\n                    borderDash: [3],\n                },\n                {\n                    type: 'bar',\n                    fill: false,\n                    borderDash: [],\n                    label: name.toUpperCase(),\n                    backgroundColor: 'rgba(255,140,0)',// orange\n                    borderColor: 'rgb(255,140,0)',\n                    data: data,\n                    lineTension: 0.1,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n\n                },\n\n            ],\n        };\n    };\n\n    updateDimensions=()=> {\n        this.setState({width: window.innerWidth});\n        this.forceUpdate();\n    };\n\n    componentWillMount(){\n\n        this.updateDimensions();\n    }\n\n\n    getBar = (name, data, dates,width) => {\n        const myData = this.createDataForGraph(name, data, dates);\n        return (<Bar\n            height={400}\n            width={width - 100}\n            data={myData}\n            redraw={true}\n        />)\n    };\n\n    getPie = (name, data, data2) => {\n        const options = {maintainAspectRatio: false};\n        const myData = this.createDataForPie(name, data, data2);\n        return (<Doughnut\n            height={250}\n            width={200}\n            data={myData}\n            redraw={true}\n            options={options}/>)\n    };\n\n    createDataForPie = (name, data1, data2) => {\n        return {\n            labels: [\n                data1.action, data2.action],\n            datasets: [{\n                data: [data1.result, data2.result],\n                backgroundColor: [\n                    '#b17a1a',\n                    '#6d4c0c',\n                ],\n                hoverBackgroundColor: [\n                    '#7e5812',\n                    '#4a310d',\n                ]\n            }]\n        };\n    };\n\n\n    render() {\n        const {data, name, dates} = this.state;\n        return (\n            <div>{\n                    this.state.type\n                        ?\n                        this.state.type.match('line')\n                            ?\n                            this.getBar(name, data, dates,this.state.width)\n                            :\n                            this.getPie(name, data, dates)\n                        :\n                        <Loading/>\n                }\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport {normalizeNumber} from \"../../Functions/Functions\";\nimport {Card} from \"../../components/Card/Card\";\nimport {Graph} from \"../Graph/Graph\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport './LifeTime.css'\nimport '../../App.css'\nimport {cardsData, pieData} from \"./Data\";\nimport {getUserData, myFetch} from \"../../Functions/Http\";\nimport * as firebase from \"firebase\";\n\nclass LifeTime extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n        }\n    };\n\n\n    componentWillMount() {\n        const {name} = this.props.match.params;\n        getUserData(name).then(res => {\n            const userData = res.data.mp.lifetime.all;\n            firebase.database().ref(`/users/${name}`).update({\n                data: Object.keys(userData).map(x => Object.assign({action: x, result: userData[x]}))\n            },\n                () => firebase.database().ref(`/users/${name}`).on('value', (snap) => {\n                    console.log(snap.val());\n                this.setState({allData:snap.val().data})\n            }));\n        });\n    }\n\n\n    pieFactory = (divider, divided) => {\n        const {allData} = this.state;\n        const obj1 = this.hardFilter(allData, divider);\n        const obj2 = this.hardFilter(allData, divided);\n        return (<div className={'middel'}>\n            <div className={'card-wrapper'}>\n                <Card name={`${obj1.action.toUpperCase()}/${obj2.action.toUpperCase()}`}\n                      text={`Ratio ${normalizeNumber((obj1.result / obj2.result) * 100)}%`}>\n                    <Graph name={'test'} data={obj1} dates={obj2} type={'pie'} size={500}/>\n                </Card>\n            </div>\n        </div>)\n    };\n\n    cardFactory = (cardName) => {\n        const {allData} = this.state;\n        const filterResult = this.hardFilter(allData, cardName);\n        return (<Card\n            name={filterResult.action}>{((filterResult.result % 1) !== 0 ? normalizeNumber(filterResult.result) : filterResult.result)}</Card>)\n    };\n\n    hardFilter = (list, word) => {\n        return list.filter(x => x.action.split(' ').join('') === word)[0]\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        const cardFactoryList = cardsData();\n        const pieFactorList = pieData();\n        return (\n            <div className={'container'}>\n                {\n                    list.length > 0 ?\n                        <div className={'cards-wrapper'}>\n                            {\n                                pieFactorList.map((x, index) => {\n                                    return (<div key={index}>{this.pieFactory(x.obj1, x.obj2)}</div>)\n                                })\n                            }\n                            {\n                                cardFactoryList.map((x, index) => {\n                                    return (<div key={index}>{this.cardFactory(x)}</div>)\n                                })\n                            }\n                        </div>\n                        :\n                        <Loading/>\n                }\n            </div>\n        );\n    }\n\n\n}\n\nexport default LifeTime","export const pieData = () => {\n    return [\n        {\n            obj1: 'ekia',\n            obj2: 'deaths',\n        },\n        {\n            obj1: 'wins',\n            obj2: 'losses',\n\n        },\n        {\n            obj1: 'kills',\n            obj2: 'deaths',\n\n        },\n        {\n            obj1: 'statsHeadshot',\n            obj2: 'kills',\n\n        },\n        {\n            obj1: 'hits',\n            obj2: 'totalShots',\n\n        },\n        {\n            obj1: 'headshots',\n            obj2: 'hits',\n\n        },\n        {\n            obj1: 'hits',\n            obj2: 'misses',\n\n        }\n    ];\n};\nexport const cardsData = () => {\n    return [\n        'scoreCore',\n        'scorePerGame',\n        'scorePerMinute',\n        'kills',\n        \"damagePerGame\",\n        \"damagePerMinute\",\n        \"healsPerGame\",\n\n    ]\n};\n\n","import React from 'react'\nimport './Graph.css'\nimport '../../App.css'\nimport {Graph} from \"../Graph/Graph\";\nimport {getUserData, myFetch} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport * as firebase from \"firebase\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        };\n    }\n\n    componentWillMount() {\n        const {name} = this.props.match.params;\n        getUserData(name, 'matches').then(res => {\n            const tempData = res.data.matches;\n            const fromAPI = tempData.map(x => Object.assign({\n                assists: x.playerStats.assists,\n                date: x.utcStartSeconds,\n                ekia: x.playerStats.ekia,\n                ekiadRatio: x.playerStats.ekiadRatio,\n                kills: x.playerStats.kills\n\n            }));\n            firebase.database().ref(`/users/${name}/weekly`).on('value', (snap) => {\n                const dataFromDB = snap.val();\n                if (dataFromDB == null) {\n                    firebase.database().ref(`/users/${name}`).update({\n                        weekly: fromAPI\n                    });\n                }\n                const size = this.arraysEqual(dataFromDB, fromAPI);\n                    this.setState({\n                        data:size\n                    })\n            })\n        });\n    }\n\n    arraysEqual = (arraToSave, arrayWithChanges) => {\n        return Object.values(arrayWithChanges.concat(arraToSave).reduce((r, o) => {\n            r[o.date] = o;\n            return r;\n        }, {}));\n\n    };\n\n    componentWillUpdate(prevProps) {\n        if (this.props !== prevProps.data) {\n        }\n\n    }\n\n    refreshData = () => {\n        const playerName = this.props.match.params.name;\n        getUserData(playerName, 'matches').then(({data}) => {\n\n        });\n\n    };\n\n\n    render() {\n        const chartList = Object.assign({\n            kills: this.state.data.map(x => x.kills),\n            ekia: this.state.data.map(x => x.ekia),\n            assists: this.state.data.map(x => x.assists),\n            ekiadRatio: this.state.data.map(x => x.ekiadRatio)\n        });\n        const names= Object.keys(chartList);\n        const times = this.state.data.map(x => x.date);\n\n\n        return (\n            <div className={'container'}>\n                <div className={'graph-container'}>\n                    {\n                        chartList.kills.length > 0 ?\n                            Object.keys(chartList).map((x, index) => {\n                                return (\n                                    <div key={index}>\n                                        <Graph name={names[index]} dates={times} data={chartList[x]} type={'line'}/>\n                                    </div>\n                                )\n                            })\n                            :\n                            <Loading/>\n                    }\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport './TeamMate.css'\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const TableRow = (actoin ,data1,data2,friendName)=>{\n    return (<div className={'table-row'}>\n        <div className={'table-action'}>{fixName(actoin)}</div>\n        <div className={'table-result'}>{Math.floor(data1)}</div>\n        <div className={'table-result'}>{Math.floor(data2)}</div>\n        <div className={'table-result'} style={{color:isBigger(data1,data2)}}>\n            {`${Math.floor(Math.abs(data2 - data1))}\n        ${data2 - data1 > 0 ? 'Less' : 'More' } then ${friendName}`}</div>\n    </div>)\n};\n\nconst isBigger =(num1,num2)=>{\n    if(num1 > num2)\n        return 'green';\n    else if(num2>num1)\n        return 'red';\n    return 'white'\n\n}","import React from 'react'\nimport { getUsersData} from \"../../Functions/Http\";\nimport './TeamMate.css'\nimport {TableRow} from \"./table\";\nimport {Bar} from \"react-chartjs-2\";\n\nclass TeamMate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            data: [],\n            isLoading: false,\n            isSuccess: null,\n            size:5\n        }\n    }\n\n    componentDidMount()\n    {\n        setInterval(()=>{this.setState({size: this.state.size +1})},10000)\n    };\n\n\n    search = () => {\n        if(this.state.query !== '') {\n            getUsersData([this.props.match.params.name, this.state.query]).then(res => {\n                if(res[1].status === 'success'){\n                    this.setState({\n                        isSuccess:true,\n                        data: Object.keys(res[1].data.mp.lifetime.all)\n                            .map(x => Object.assign({\n                                action: x,\n                                friedResult: res[1].data.mp.lifetime.all[x],\n                                friendName: res[1].data.username,\n                                myResult: res[0].data.mp.lifetime.all[x],\n                                myName: res[0].data.username,\n                            })),\n                    }, () => {\n                        this.setState({\n                            isLoading: true\n                        })\n                    })\n                }\n                else\n                    this.setState({\n                        isSuccess:false\n                    })\n\n            })\n        }\n    };\n\n\n    render() {\n        const temp =this.state.data.filter(x=>(x.myResult !== 0 &&\n            x.friedResult !==0 &&\n            x.myResult <1000 &&\n            x.friedResult <1000 &&\n            x.myResult >1 &&\n            x.friedResult >1));\n        const myData ={\n            labels: temp.map(x=>x.action).slice(this.state.size-5,this.state.size),\n            datasets: [\n                {\n                    // type: 'bar',\n                    fill: false,\n                    label: this.state.data.myName,\n                    backgroundColor: 'rgba(255, 255, 255,0.5)',\n                    borderColor: 'rgba(255, 255, 255,0.5)',\n                    data:temp.map(x=>x.friedResult).slice(this.state.size -5,this.state.size),\n                    steppedLine: false,\n                    lineTension: 0.6,\n                    pointRadius: 0,\n                    pointHitRadius: 10,\n                },\n                {\n                    // type: 'bar',\n                    fill: false,\n                    label: this.state.data.friendName,\n                    backgroundColor: 'rgba(255,140,0)',// orange\n                    borderColor: 'rgb(255,140,0)',\n                    data: temp.map(x=>x.myResult).slice(this.state.size -5,this.state.size),\n                    steppedLine: false,\n                    lineTension: 0.6,\n                    pointRadius: 0,\n                    pointHitRadius: 10,\n\n                },\n\n            ],\n        };\n\n        return (\n            <div className={'TeamMate'}>\n                <div className={'TeamMate-wrapper'}>\n                    <div className={'TeamMate-search'}>\n                        SearchFriend : <input type='text' onChange={(event) => {this.setState({query: event.target.value})}}/>\n                        <button onClick={() => this.search(this.state.query)}>Click</button>\n                    </div>\n                    {\n                        this.state.isSuccess !== null ?\n                            this.state.isSuccess ?\n                                <div>\n\n                                    <div className={'table'}>\n                                        {\n                                            this.state.isLoading ?\n                                                <div className={'table-header'}>\n                                                    <div className={'header-item'}/>\n                                                    <div className={'header-item'}>{this.props.match.params.name} VS {this.state.query}</div>\n                                                </div>\n                                                :\n                                                <div/>}\n\n                                    <Bar\n                                        height={50}\n                                        width={600}\n                                        data={myData}\n                                        redraw={true}\n                                    />\n                                </div>\n\n\n                                {\n                                    this.state.isLoading ?\n\n                                        this.state.data.map((x,index)=>{\n                                            return(\n                                                <div className={'table-wrapper'} key={index}>\n                                                    {TableRow(x.action,x.myResult,x.friedResult,x.friendName)}\n                                                </div>\n                                            )\n                                        })\n                                        :\n                                        <div>Choose Friend</div>\n                                }\n                            </div>\n\n                                :\n                                <div>Invalid Username</div>\n                            :\n                            <div>Enter User name</div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default TeamMate","import React from 'react'\nimport './App.css'\nimport {Logo} from \"./components/Logo/Logo\";\nimport Login from \"./Container/Login/Login\";\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport Top from \"./Container/Top/Top\"\nimport LifeTime from \"./Container/LifeTime/LifeTime\";\nimport WeeklyGraphs from \"./Container/WeeklyGraphs/WeeklyGraphs\";\nimport TeamMate from \"./Container/TeamMate/TeamMate\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <Logo/>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Route exact path=\"/\" render={()=><Login/>} />\n                        <Route path={'/:name/:section'} render={(props)=><Top {...props}/>}/>\n                        <Route path={'/:name/lifetime'} render={(props)=><LifeTime {...props} />}/>\n                        <Route path={'/:name/weekly'} render={(props)=><WeeklyGraphs {...props} />}/>\n                        <Route path={'/:name/teammates'} render={(props)=><TeamMate {...props} />}/>\n                    </div>\n                </BrowserRouter>\n\n            </div>\n        );\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport * as firebase from 'firebase'\n\nvar config = {\n    apiKey: \"AIzaSyAOzEkQ8vpjKbsw5mqnFFmr4qML-bVbCeI\",\n    authDomain: \"call-of-duty-black-ops-4-15a24.firebaseapp.com\",\n    databaseURL: \"https://call-of-duty-black-ops-4-15a24.firebaseio.com\",\n    projectId: \"call-of-duty-black-ops-4-15a24\",\n    storageBucket: \"call-of-duty-black-ops-4-15a24.appspot.com\",\n    messagingSenderId: \"518851485397\"\n};\n    firebase.initializeApp(config);\n\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}