{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","components/Loading/Loading.js","Container/Card/Graph.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/Multiplayer/LifeTime.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["normalizeNumber","num","slice","arguments","length","undefined","concat","toString","split","getPrestigeImage","Logo","react_default","a","createElement","className","src","alt","fixName","name","toUpperCase","map","letter","join","Card","props","children","text","URL","toJson","data","json","getUserData","username","action","path","match","Promise","resolve","fetch","then","Loading","id","Graph","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","resize","setState","allChartWidth","window","innerWidth","refreshData","dates","type","normalizeDate","timeList","x","Date","toLocaleDateString","getHours","getMinutes","createDataForGraph","temp","avgValue","avg","state","reduce","b","i","push","labels","reverse","datasets","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","getBar","myData","console","log","es","height","width","redraw","options","maintainAspectRatio","getPie","data2","createDataForPie","data1","result","hoverBackgroundColor","inherits","createClass","key","value","_this2","addEventListener","prevProps","prevState","Loading_Loading_Loading","React","Component","WeeklyGraphs","playerName","_ref","killList","matches","playerStats","kills","ekiaList","ekia","deathList","deaths","assistsList","assists","ekiadRatioList","ekiadRatio","times","utcStartSeconds","chartList","keys","index","Graph_Graph","LifeTime","getData","allData","mp","lifetime","all","assign","pieFactory","divider","divided","obj1","hardFilter","obj2","CardPie_Card","cardFactory","cardName","filterResult","lifeTime","list","word","filter","Statistics","_data$mp","level","prestige","multiplayerData","ction","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","pagesLabels","outPage","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","inPage","onClick","pages","Container_WeeklyGraphs_WeeklyGraphs","Container_Multiplayer_LifeTime","array","App","changeList","user","show","getAllUsers","validateName","status","isAutorise","query","com","users","Functions_Logo","Container_Statistics_Statistics","onChange","event","target","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ab3b7117.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const normalizeNumber = (num, slice = 3) => {\n    return `${num.toString().split('.')[0]}.${num.toString().split('.')[1].slice(0,slice)}`\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {fixName, normalizeNumber} from \"../../Functions/Functions\";\n\nexport const Card = (props) => {\n    return (<div className={'small-card'}>\n        <div>\n            <div className={'mall-card-top'}>{fixName(props.name)}</div>\n            <div className={'small-card-context'}>{props.children}</div>\n            <div className={'small-card-sub'}>{props.text} </div>\n        </div>\n    </div>)\n};\n\nexport const List = ({data,filter}) => {\n        const filteredList = data.filter(x=>x.action.startsWith(filter));\n    return (\n        <div>\n            <h1>{fixName(filter)}</h1>\n            <div  className={'table'}>\n                {SortMaxMin(filteredList).map((x,index)=>\n                    <div key={index} className={'table-line'}>\n                        <div>{fixName(x.action).replace(fixName(filter),'').length > 0\n                    ?\n                            fixName(x.action).replace(fixName(filter),''):\n                            filter\n                    }</div>\n                        <div className={'table-result'}>{Math.round(x.result)}</div>\n                    </div>)}\n            </div>\n\n        </div>\n    );\n};\n\n\n const SortMaxMin = (array)=>{\n    return array.sort((a,b)=> b.result - a.result)\n};\n\n\nexport class MyPie {\n}","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action='profile') => {\n    const path = (!action.match('matches')  ? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar, Doughnut} from \"react-chartjs-2\";\nimport {Loading} from \"../../components/Loading/Loading\";\n\nexport class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            data: [],\n            dates: [],\n            type: '',\n            allChartWidth:300,\n\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\",()=>this.resize()) ;\n        this.refreshData()\n    }\n\n    resize = () =>{\n        this.setState({allChartWidth:(window.innerWidth <= 600 ? 300 : 500)})\n    };\n\n    componentWillUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.refreshData()\n        }\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            type: this.props.type\n\n        });\n    };\n\n    normalizeDate = (timeList) => {\n        return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')}${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n    };\n\n    createDataForGraph = (name, data, dates) => {\n        const temp = this.normalizeDate(dates);\n        const avgValue = [];\n        const avg = this.state.data ? this.state.data.reduce((a, b) => a + b) : 0;\n        for (let i = 0; i < 20; i++) {avgValue.push(avg/20)}\n            return {\n                labels: temp.reverse(),\n                datasets: [\n                    {\n                        type: 'line',\n                        fill: false,\n                        label: `Average`,\n                        backgroundColor: 'rgba(255, 255, 255,0.5)',\n                        borderColor: 'rgba(255, 255, 255,0.5)',\n                        data: avgValue,\n                        steppedLine: false,\n                        lineTension: 0.6,\n                        pointRadius: 0,\n                        pointHitRadius: 10,\n                        borderDash: [3],\n                    },\n                    {\n                        type: 'bar',\n                        fill: false,\n                        borderDash: [],\n                        label: name.toUpperCase(),\n                        backgroundColor: 'rgba(255,140,0)',// orange\n                        borderColor: 'rgb(255,140,0)',\n                        data: data,\n                        lineTension: 0.1,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n\n                    },\n\n                ],\n            };\n    };\n    componentDidUpdate(prevState) {\n        if (this.state.allChartWidth !== prevState.allChartWidth) {\n            console.log('change happend')\n        }\n    }\n\n    getBar = (name, data, dates) => {\n        const options = {\n            maintainAspectRatio: false\t// Don't maintain w/h ratio\n        };\n        const myData = this.createDataForGraph(name, data, dates);\n        const {allChartWidth}=this.state;\n        console.log('this is allChartWidth',allChartWidth);\n        return (<Bar\n            height={300}\n            width={this.state.allChartWidth}\n            data={myData}\n            redraw={true}\n            options={options}\n        />)\n    };\n\n    getPie = (name, data, data2) => {\n        const options = {\n            maintainAspectRatio: false\t// Don't maintain w/h ratio\n        };\n        const myData = this.createDataForPie(name, data, data2);\n        return (<Doughnut\n            height={250}\n            width={200}\n            data={myData}\n            redraw={true}\n            options={options}\n        />)\n    };\n\n    createDataForPie = (name, data1, data2) => {\n        return {\n            labels: [\n                data1.action.toUpperCase(), data2.action\n            ],\n            datasets: [{\n                data: [data1.result, data2.result],\n                backgroundColor: [\n                    '#b17a1a',\n                    '#6d4c0c',\n                    '#FFCE56'\n                ],\n                hoverBackgroundColor: [\n                    '#7e5812',\n                    '#4a310d',\n                    '#FFCE56'\n                ]\n            }]\n        };\n    };\n\n    render() {\n        const {data} = this.state;\n        const {name} = this.state;\n        const {dates} = this.state;\n        return (\n            <div>\n                {\n                    this.state.type\n                        ?\n                        this.state.type.match('line')\n                            ?\n                            this.getBar(name, data, dates)\n                            :\n                            this.getPie(name, data, dates)\n                        :\n                        <Loading/>\n                }\n\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport './Graph.css'\nimport {Graph} from \"../Card/Graph\";\nimport {getUserData} from \"../../Functions/Http\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:'',\n            data: [],\n            times: [],\n            type: ''\n        };\n    }\n\n    componentWillUpdate(prevProps) {\n        if(this.props.data !== prevProps.data)\n            this.refreshData()\n    }\n\n    componentDidMount() {\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        const {playerName} = this.props;\n        getUserData(playerName,'matches').then(({data}) => {\n            this.setState({\n                data: {\n                    killList: {data: data.matches.map(x => x.playerStats.kills), name: 'kill'},\n                    ekiaList: {data: data.matches.map(x => x.playerStats.ekia), name: 'ekia'},\n                    deathList: {data: data.matches.map(x => x.playerStats.deaths), name: 'death'},\n                    assistsList: {data: data.matches.map(x => x.playerStats.assists), name: 'assists'},\n                    ekiadRatioList: {data: data.matches.map(x => x.playerStats.ekiadRatio), name: 'ekiadRatio'},\n                },\n                times: {data: data.matches.map(x => x.utcStartSeconds)}})\n        })\n    };\n\n    render() {\n        const chartList = Object.keys(this.state.data).map(x => this.state.data[x]);\n        const times = Object.keys(this.state.times).map(x => this.state.times[x])[0];\n        return (\n            <div className={'graph-container'}>\n                {\n                    chartList.map((x, index) => {\n                        return (<div key={index}>\n                            <Graph name={x.name} dates={times} data={x.data} type={'line'}/>\n                        </div>)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport {normalizeNumber} from \"../../Functions/Functions\";\nimport {Card} from \"../../components/Card/CardPie\";\nimport {Graph} from \"../Card/Graph\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport './LifeTime.css'\nclass LifeTime extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('this is props',props);\n        this.state = {\n            allData: null,\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name);\n\n\n    }\n\n\n    getData = (username) => {\n        getUserData(username, 'profile').then(({data}) =>\n        {this.setState({\n                    allData: Object.keys(data.mp.lifetime.all)\n                        .map(x => Object.assign({action: x, result: data.mp.lifetime.all[x]})),});\n            });\n    };\n    pieFactory = (divider, divided)=>{\n        const {allData} = this.state;\n        console.log(allData);\n        const obj1 = this.hardFilter(allData,divider);\n        const obj2 = this.hardFilter(allData,divided);\n\n        return(<div className={'middel'}>\n            <div className={'card-wrapper'}>\n                <Card name={`${obj1.action.toUpperCase()}/${obj2.action.toUpperCase()}`}\n                      text={`Ratio ${normalizeNumber(obj1.result / obj2.result)*100}%`}>\n                    <Graph name={'test'} data={obj1} dates={obj2} type={'pie'}/>\n                 </Card>\n             </div>\n        </div>)\n    };\n\n    cardFactory =(cardName)=>{\n        const {allData} = this.state;\n         const filterResult = this.hardFilter(allData,cardName);\n        return(<Card name={filterResult.action}>{filterResult.result}</Card>)\n    };\n\n    lifeTime = () => {\n        const pieFactorList = [\n            {\n                obj1:'ekia',\n                obj2:'deaths'\n            },\n            {\n                obj1:'wins',\n                obj2:'losses'\n            },\n            {\n                obj1:'kills',\n                obj2:'deaths'\n            },\n            {\n                obj1:'statsHeadshot',\n                obj2:'kills'\n            }\n            ];\n        const cardFactoryList = ['scoreCore',\n            'scorePerGame',\n            'scorePerMinute',\n            'kills',\n            \"damagePerGame\",\n            \"damagePerMinute\",\n            \"healsPerGame\",\n        ];\n\n\n        return (\n            <div className={'cards-wrapper'}>\n                        {\n                            pieFactorList.map((x,index) =>{return(<div key={index}>{this.pieFactory(x.obj1,x.obj2)}</div>)})\n                        }\n                {\n                    cardFactoryList.map((x,index)=>{return(<div key={index}>{this.cardFactory(x)}</div>)})\n                }\n            </div>\n        );\n    };\n\n    hardFilter = (list ,word) => {\n        return list.filter(x=>x.action.split(' ').join('') === word)[0]\n    };\n\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div>\n                {\n                    list.length > 0 ?\n                    this.lifeTime()\n                        :\n                        <Loading/>\n                }\n            </div>\n        );\n    }\n\n\n}\n\nexport default LifeTime","import React from 'react'\nimport './Statistics.css'\nimport {SmallCard} from \"../../components/Card/CardPie\";\nimport {getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport WeeklyGraphs from \"../WeeklyGraphs/WeeklyGraphs\";\nimport LifeTime from \"../Multiplayer/LifeTime\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: '',\n            array: []\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name);\n\n\n    }\n\n    getData = (username) => {\n        getUserData(username, 'profile')\n            .then(({data}) => {\n                const {username} = data;\n                const {level, prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n\n                this.setState({\n                    allData: Object.keys(multiplayerData).map(x => Object.assign({\n                        ction: x,\n                        result: multiplayerData[x]\n                    })),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch',\n\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n\n    hardFilter = (list, word) => {\n        return list.filter(x => x.action.split(' ').join('') === word)[0]\n    };\n\n\n    pagesLabels = () => {\n        const outPage = {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            color: '#553400',\n            backgroundColor: '#1b1b1b',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n        };\n        const inPage = {\n            backgroundColor: '#101010',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        };\n\n        return (\n            <div className={'page-labels'}>\n                <div style={this.state.page === 'Team Deathmatch' ? inPage : outPage}\n                     onClick={() => this.setState({page: 'Team Deathmatch'})}>Life time\n                </div>\n                <div style={this.state.page !== 'Team Deathmatch' ? inPage : outPage}\n                     onClick={() => this.setState({page: 'BlackOut'})}>Weekly\n                </div>\n            </div>)\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <WeeklyGraphs type={'mp'} playerName={this.state.playerStats.username}/>;\n            default:\n                return <LifeTime name={this.state.playerStats.username}/>;\n\n\n        }\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div className={'container'}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    {this.pagesLabels()}\n                                    <div className={'pagination-border'}>\n                                        {this.pages(this.state.page)}\n                                    </div>\n                                </div>\n                                :\n                                <Loading/>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {Loading} from \"./components/Loading/Loading\";\nimport {getUserData} from \"./Functions/Http\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: 'FormingSpoon801',\n            list: [],\n            com: false,\n            isAutorise: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n    validateName = (name) => {\n        getUserData(name).then(({status}) =>\n            this.setState({\n                isAutorise: (status === 'success')\n            }));\n    };\n\n    render() {\n        const users = this.getAllUsers();\n        const {isAutorise} = this.state;\n\n        return (\n            <div>\n                <Logo/>\n                {\n                    isAutorise ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={this.state.query} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div>\n                            <div className={'login-step'}>\n                                Enter User name <input width={300} onChange={(event) => this.setState({query: event.target.value})}/>\n                                <button onClick={() => this.validateName(this.state.query)}>check</button>\n                            </div>\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        // {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}