{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","components/Loading/Loading.js","Container/Card/CardLine.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["normalizeNumber","num","arguments","length","undefined","concat","toString","split","slice","getPrestigeImage","Logo","react_default","a","createElement","className","src","alt","fixName","name","toUpperCase","map","letter","join","List","_ref2","data","filter","temp","x","action","startsWith","sort","b","result","index","key","replace","Math","round","SmallCard","_ref3","sub","URL","toJson","json","getUserData","username","path","Promise","resolve","fetch","then","Loading","id","CardLine","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshData","setState","dates","size","avg","state","reduce","createDataForGraph","avgValue","i","push","amount","labels","reverse","datasets","type","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","matchDate","timeList","Date","toLocaleDateString","getHours","getMinutes","inherits","createClass","value","prevProps","mydata","es","height","width","redraw","React","Component","WeeklyGraphs","playerName","_ref","killList","matches","playerStats","kills","ekiaList","ekia","deathList","deaths","assistsList","assists","ekiadRatioList","ekiadRatio","times","utcEndSeconds","utcStartSeconds","console","log","_this2","chartList","keys","time","CardLine_CardLine","Statistics","getData","_data$mp","mp","level","prestige","multiplayerData","lifetime","all","allData","assign","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","lifeTime","list","perList","CardPie_List","CardPie_SmallCard","pagesLabels","inPage","outPage","onClick","pages","Container_WeeklyGraphs_WeeklyGraphs","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","Loading_Loading_Loading","App","changeList","user","show","getAllUsers","validateName","status","isAutorise","query","com","users","Functions_Logo","Container_Statistics_Statistics","onChange","event","target","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fad2c828.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const normalizeNumber = (num, slice = 3) => {\n    return `${num.toString().split('.')[0]}.${num.toString().split('.')[1].slice(0,3)}`\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {fixName, normalizeNumber} from \"../../Functions/Functions\";\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div>\n            <div className={'card-top'}>{fixName(name)}</div>\n            <div className={'card-context'}>\n                {normalizeNumber(data)}\n            </div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\n\nexport const List = ({data,filter}) => {\n        const temp =data.filter(x=>x.action.startsWith(filter));\n    return (\n        <div>\n            <h1>{fixName(filter)}</h1>\n            <div  className={'table'}>\n                {temp.sort((a,b)=> b.result -a.result).map((x,index)=>\n                    <div key={index} className={'table-line'}>\n                        <div>{fixName(x.action).replace(fixName(filter),'')}</div>\n                        <div className={'table-result'}>{Math.round(x.result)}</div>\n                    </div>)}\n            </div>\n\n        </div>\n    );\n};\n\n\n\nexport const SmallCard =({name, data, sub})=>{\n    return (<div className={'small-card'}>\n        <div>\n            <div className={'small-card-top'}>{fixName(name)}</div>\n            <div className={'small-card-context'}>\n                {normalizeNumber(data)}\n            </div>\n            <div className={'small -card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action='profile') => {\n    // const path = (action !=='matches'? `${URL}${username}/${action}/type/wz` :\n    const path = (action !=='matches'? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar} from \"react-chartjs-2\";\n\nexport class CardLine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            amount: 1,\n            data: [],\n            dates: [],\n            size: 0,\n            avg: 0,\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.refreshData()\n    }\n\n    componentWillUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.refreshData()\n\n        }\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            size: this.props.size\n        }, () => {\n            this.setState({\n                avg: this.state.data ? this.state.data.reduce((a, b) => a + b) : 0\n            });\n\n        });\n    };\n\n    createDataForGraph = (name, data, avg, dates) => {\n        const avgValue = [];\n        for (let i = 0; i < 20; i++) {\n            avgValue.push(avg)\n        }\n        if (this.state.amount === 1)\n            return {\n                labels: dates.reverse(),\n                datasets: [\n                    {\n                        type: 'line',\n                        fill: false,\n                        label: `Average`,\n                        backgroundColor: 'rgba(255, 255, 255,0.5)',\n                        borderColor: 'rgba(255, 255, 255,0.5)',\n                        data: avgValue,\n                        steppedLine: false,\n                        lineTension: 0.6,\n                        pointRadius: 0,\n                        pointHitRadius: 10,\n                        borderDash: [3],\n                    },\n                    {\n                        type: 'bar',\n                        fill: false,\n                        borderDash: [],\n                        label: name.toUpperCase(),\n                        backgroundColor: 'rgba(255,140,0)',// orange\n                        borderColor: 'rgb(255,140,0)',\n                        data: data,\n                        lineTension: 0.1,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n\n                    },\n\n                ],\n            };\n    };\n\n    matchDate = (timeList) => {\n        return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')} ${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n    };\n\n    render() {\n        const {dates} = this.state ? this.state : [];\n        const mydata = this.createDataForGraph(this.state.name, this.state.data, this.state.avg / 20, this.matchDate(dates));\n        return (\n            <div>\n                <Bar\n                    height={300}\n                    width={500}\n                    data={mydata}\n                    redraw={true}\n                />\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport './Graph.css'\nimport {CardLine} from \"../Card/CardLine\";\nimport {getUserData} from \"../../Functions/Http\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('props',props);\n        this.state = {\n            username:'',\n            data: [],\n            times: [],\n            type: ''\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.type !== prevProps.type)\n            this.refreshData()\n    }\n\n    componentDidMount() {\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        const {playerName} = this.props;\n        getUserData(playerName,'matches')\n            .then(({data}) => {\n            this.setState({\n                data: {\n                    killList: {data: data.matches.map(x => x.playerStats.kills), name: 'kill'},\n                    ekiaList: {data: data.matches.map(x => x.playerStats.ekia), name: 'ekia'},\n                    deathList: {data: data.matches.map(x => x.playerStats.deaths), name: 'death'},\n                    assistsList: {data: data.matches.map(x => x.playerStats.assists), name: 'assists'},\n                    ekiadRatioList: {data: data.matches.map(x => x.playerStats.ekiadRatio), name: 'ekiadRatio'},\n                },\n                times: {utcEndSeconds: {data: data.matches.map(x => x.utcStartSeconds), name: 'utcEndSeconds'},}\n            })\n        })\n    };\n\n    render() {\n        const chartList = Object.keys(this.state.data).map(x => this.state.data[x]);\n        const time = Object.keys(this.state.times).map(x => this.state.times[x])[0];\n        return (\n            <div className={'graph-container'}>\n                {\n                    chartList.map((x, index) => {\n                        return (<div key={index}>\n                            <CardLine name={x.name} dates={time.data} data={x.data}/>\n                        </div>)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport './Statistics.css'\nimport {Card, List, SmallCard} from \"../../components/Card/CardPie\";\nimport {fixName, getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport WeeklyGraphs from \"../WeeklyGraphs/WeeklyGraphs\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: '',\n            filter:''\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name)\n    }\n\n    getData = (username) => {\n        getUserData(username, 'profile')\n            .then(({data}) => {\n                const {username} = data;\n                const {level, prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n                this.setState({\n                    allData: Object.keys(multiplayerData).map(x => Object.assign({\n                        action: x,\n                        result: multiplayerData[x]\n                    })),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch'\n\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n    lifeTime = () => {\n        const list = this.state.allData;\n        const perList = list.\n        map(x=>Object.assign({action:fixName(x.action),result:x.result }))\n            .filter(x=>x.action.split(' ')[1] === 'Per');\n        console.log('perlist',perList);\n        return (\n            <div className={'middel'}>\n                <div className={'card-wrapper'}>\n                    <div className={'list-nest'}>\n                        <List data={list} filter={'killEnemy'} />\n                        <List data={list} filter={'stats'} />\n                    </div>\n                    <div className={'small-card-wrapper'}>\n                        {\n                            perList.map((x, index) => {\n                                return <div key={index} >\n                                    <SmallCard name={x.action} data={x.result}/>\n                                </div>\n                            })\n                        }\n                    </div>\n\n                </div>\n            </div>\n\n\n        );\n    };\n\n    pagesLabels = () => {\n        return (\n            <div className={'page-labels'}>\n                <div style={this.state.page === 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'Team Deathmatch'})}>Life time\n                </div>\n                <div style={this.state.page !== 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'BlackOut'})}>Weekly\n                </div>\n            </div>)\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <WeeklyGraphs type={this.state.type ? 'mp' : 'wz'}\n                                     playerName={this.state.playerStats.username}/>;\n            default:\n                return this.lifeTime();\n\n\n        }\n    };\n\n    outPage = () => {\n        return {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            color: '#553400',\n            backgroundColor: '#1b1b1b',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n\n        }\n    };\n\n    inPage = () => {\n        return {\n            backgroundColor: '#101010',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        }\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div className={'container'}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    {this.pagesLabels()}\n                                    <div className={'pagination-border'}> {this.pages(this.state.page)}</div>\n                                </div>\n                                :\n                                <Loading/>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {Loading} from \"./components/Loading/Loading\";\nimport {getUserData} from \"./Functions/Http\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: 'FormingSpoon801',\n            list: [],\n            com: false,\n            isAutorise: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n    validateName = (name) => {\n        getUserData(name).then(({status}) =>\n            this.setState({\n                isAutorise: (status === 'success')\n            }));\n    };\n\n    render() {\n        const users = this.getAllUsers();\n        const {isAutorise} = this.state;\n\n        return (\n            <div>\n                <Logo/>\n                {\n                    isAutorise ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={this.state.query} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div>\n                            <div className={'login-step'}>\n                                Enter User name <input width={300} onChange={(event) => this.setState({query: event.target.value})}/>\n                                <button onClick={() => this.validateName(this.state.query)}>check</button>\n                            </div>\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        // {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}