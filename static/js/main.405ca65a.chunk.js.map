{"version":3,"sources":["components/Card/CardPie.js","components/Functions.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["CardPie","_ref","name","data1","data2","sub","data","labels","concat","datasets","backgroundColor","hoverBackgroundColor","react_default","a","createElement","className","es","width","height","options","maintainAspectRatio","Card","_ref2","TestGraph","_ref3","lable","title","display","text","map","user","createDataForGraph","color","x","push","style","split","toUpperCase","slice","letter","join","label","borderColor","borderWidth","hoverBorderColor","getPresentage","num","total","arguments","length","undefined","Math","floor","toString","getShortNum","getPrestigeImage","getUserData","URL","fetch","headers","Access-Control-Allow-Origin","then","res","json","Logo","src","alt","Statistics","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","state","playerStats","username","mp","setState","level","hits","all","misses","hs","headshotPercentage","wins","losses","suicides","longestKillstreak","prestige","damagePerMinute","damagePerGame","ekiaPerGame","ekia","deaths","kills","assists","timePlayedTotal","dataToParent","getTimePlayed","time","getStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","console","log","lifetime","currentUserColor","border","totalShots","totalGames","main_min_default","completed","colors","hidden","CardPie_CardPie","CardPie_Card","React","Component","App","dataFromChild","currentUser","list","find","changeList","show","showComper","com","getAllUsers","_this2","users","Functions_Logo","index","key","type","defaultChecked","onClick","CardPie_TestGraph","Container_Statistics_Statistics","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.405ca65a.chunk.js","sourcesContent":["import React from \"react\";\nimport './Card.css'\nimport {HorizontalBar,Bar, Doughnut} from 'react-chartjs-2';\n\nexport const CardPie = ({name, data1, data2, sub}) => {\n    const data = {\n        labels: [\n            `${data1}%`,\n            `${data2}%`\n        ],\n        datasets: [{\n            data: [data1, data2],\n            backgroundColor: [\n                '#ff9202',\n                '#694603',\n            ],\n            hoverBackgroundColor: [\n                '#ff9202',\n                '#694603',\n            ]\n        }]\n    };\n\n    return (<div className={'card'}>\n        <div className={'card-container-pie'}>\n            <div className={'card-top'}>{name}</div>\n\n            <Doughnut data={data}\n                      width={150}\n                      height={100}\n                      options={{\n                          maintainAspectRatio: false\n                      }}/>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div className={'card-container'}>\n            <div className={'card-top'}> {name}</div>\n            <div className={'card-context'}>{data}</div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\n\nexport const TestGraph = ({name,lable}) => {\n    const data ={\n        lable:[lable],\n        datasets:[],\n        options: {\n            title: {\n                display: true,\n                text: 'Custom Chart Title'\n            }\n        }\n    };\n\n\n\n    const test = name.map(user => createDataForGraph(user.data['username'], user.data[lable], user.color));\n    test.map(x=>data.datasets.push(x));\n    return <div className={'card'}>\n        <div className={'graph-mini'} style={{backgroundColor: 'white'}}>\n            <div className={'card-container-pie'} >\n                <div className={'card-top'}>{(lable).split('')[0].toUpperCase()+\n                lable.split('').slice(1)\n                    .map(letter =>(letter === letter.toUpperCase()\n                        ? ` ${letter}`\n                        : letter)).join('')}\n\n                    </div>\n\n                <Bar style={{backgroundColor: 'white', color:'white'}}\n                    width={300}\n                               height={300} data={data}/>\n                <div className={'card-sub'}>test </div>\n            </div>\n        </div>\n\n    </div>\n\n\n};\n\n\nexport const createDataForGraph = (name, data, color) => {\n    return {\n        label: name,\n        backgroundColor: `rgba(${color},0.4)`,\n        borderColor: `rgba(${color},1)`,\n        borderWidth: 1,\n        hoverBackgroundColor: `rgba(${color},0.7)`,\n        hoverBorderColor: `rgba(${color},1)`,\n        data: [data]\n    };\n};","import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num,slice=4) =>{\n    return num.toString().slice(0,slice)\n};\n\nexport const getPrestigeImage = (num) => {\n        const list = [\n                '',\n                'https://image.ibb.co/ideMDA/L1.png',\n                'https://image.ibb.co/jFtgDA/L2.png',\n                'https://image.ibb.co/idRe0q/L3.png',\n                'https://image.ibb.co/jsoRfq/L4.png',\n                'https://image.ibb.co/cwviRV/L5.png',\n                'https://image.ibb.co/iRMe0q/L6.png',\n                'https://image.ibb.co/i9bq6V/L7.png',\n                'https://image.ibb.co/cPXK0q/L8.png',\n                'https://image.ibb.co/mZvHmV/L9.png',\n                'https://image.ibb.co/dzGe0q/L10.png'\n            ];\n\n        return list[num]\n    };\n\nexport const getUserData = (name) => {\n    const URL = `https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/${name}/profile/`;\n    return fetch(URL, {\n        headers: {'Access-Control-Allow-Origin': '*',}})\n        .then(res => res.json()).then(({data}) => {\n            return data;\n        })\n\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n               src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n               alt={'logo'}/>;\n};\n\n\n","import React from 'react'\nimport './Statistics.css'\nimport ProgressBar from 'react-progress-bar-battlenet-style';\nimport {Card, CardPie} from \"../../components/Card/CardPie\";\nimport {getPresentage, getPrestigeImage, getShortNum, getUserData} from \"../../components/Functions\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props);\n        this.state = {\n            playerStats: {\n                username: this.props.name,\n                level: null,\n                lifetime: [],\n                hits: 0,\n                misses: 0,\n                hs: 0,\n                wins: 0,\n                losses: 0,\n                suicides: 0,\n                longestKillstreak: 0,\n                prestige: 0,\n                damagePerMinute: 0,\n                damagePerGame: 0,\n                headshotPercentage: 0,\n                ekiaPerGame: 0,\n                ekia: 0,\n                deaths: 0,\n                kills: 0,\n                assists: 0,\n                timePlayedTotal: 0\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n        this.props.dataToParent(this.state.playerStats.username,this.state.playerStats)\n    }\n\n    getData = () => {\n        getUserData(this.state.playerStats.username)\n            .then(({username, mp}) => {\n                this.setState({\n                    playerStats: {\n                        username: username,\n                        level: mp['level'],\n                        hits: mp['lifetime'].all['hits'],\n                        misses: mp['lifetime'].all['misses'],\n                        hs: mp['lifetime'].all['headshots'],\n                        headshotPercentage: mp['lifetime'].all['headshotPercentage'],\n                        wins: mp['lifetime'].all['wins'],\n                        losses: mp['lifetime'].all['losses'],\n                        suicides: mp['lifetime'].all['suicides'],\n                        longestKillstreak: mp['lifetime'].all['longestKillstreak'],\n                        prestige: mp['prestige'],\n                        damagePerMinute: mp['lifetime'].all['damagePerMinute'],\n                        damagePerGame: mp['lifetime'].all['damagePerGame'],\n                        ekiaPerGame: mp['lifetime'].all['ekiaPerGame'],\n                        ekia: mp['lifetime'].all['ekia'],\n                        deaths: mp['lifetime'].all['deaths'],\n                        kills: mp['lifetime'].all['kills'],\n                        assists: mp['lifetime'].all['assists'],\n                        timePlayedTotal: mp['lifetime'].all['timePlayedTotal']\n                    }\n                });\n                  this.props.dataToParent(this.state.playerStats.username,this.state.playerStats)\n            });\n    };\n\n    getTimePlayed = (time) => {\n        const h = (time / 60) / 60;\n        return (h).toString().slice(0, 4)\n    };\n\n    getStyle = () =>{\n        return {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n    };\n\n    render() {\n        const currentUserColor = {border: `solid thin ${this.props.color}`};\n        const totalShots = this.state.playerStats.misses + this.state.playerStats.hits;\n        const totalGames = this.state.playerStats.wins + this.state.playerStats.losses;\n        return (\n            <div className={'container'} style={currentUserColor}>\n\n                <div className={'top'} style={this.getStyle()}>\n                    <div className={'left'}>\n                        <div>\n                            {this.state.playerStats.username}\n                        </div>\n                    </div>\n                    <div className={'right'}>\n                        <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                            <ProgressBar\n                                completed={getPresentage(this.state.playerStats.level, 55)}\n                                colors={[30, 70, 95]}/>\n                        </div>\n                        <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                    </div>\n                </div>\n                <div className={'middle'} hidden={'True'}>\n                    <CardPie name={`Shots (${totalShots})`}\n                             data1={getPresentage(this.state.playerStats.hits, totalShots)}\n                             data2={getPresentage(this.state.playerStats.misses, totalShots)}\n                             sub={`Hits: ${this.state.playerStats.hits} | Miss: ${this.state.playerStats.misses}`}/>\n                    <CardPie name={`Win/Lose (${totalGames})`}\n                             data1={getPresentage(this.state.playerStats.wins, totalGames)}\n                             data2={getPresentage(this.state.playerStats.losses, totalGames)}\n                             sub={`Wins: ${this.state.playerStats.wins} | Losses: ${this.state.playerStats.losses}`}/>\n                    <Card name={'Headshots'}\n                          data={this.state.playerStats.hs}\n                          sub={`${getPresentage(this.state.playerStats.hs, this.state.playerStats.hits, false)}% of you hits are headshots`}/>\n                    <Card name={'Suicides'}\n                          data={this.state.playerStats.suicides}\n                          sub={`${getPresentage(this.state.playerStats.suicides, this.state.playerStats.deaths, false)}% of you death is suicide `}/>\n                    <Card name={'Longest Kill streak'}\n                          data={this.state.playerStats.longestKillstreak}\n                          sub={(this.state.playerStats.longestKillstreak > 10 ? 'Nice!!!' : 'Try to work on yourself dude')}/>\n                    <Card name={'Damage Per Minute'} data={getShortNum(this.state.playerStats.damagePerMinute, 5)}\n                          sub={`${((this.state.playerStats.damagePerMinute) / 100).toString().split('.')[0]} +/- People in minute`}/>\n                    <Card name={'Damage Per Game'}\n                          data={getShortNum(this.state.playerStats.damagePerGame)}\n                          sub={`${((this.state.playerStats.damagePerGame) / 100).toString().split('.')[0]} +/- People in game`}/>\n                    <Card name={'Avg. EKIA Per Game'}\n                          data={getShortNum(this.state.playerStats.ekiaPerGame)}\n                          sub={(this.state.playerStats.ekiaPerGame > 10 ? 'Nice!!!!' : 'Need to practise')}/>\n                    <Card name={'K/D Ratio'}\n                          data={getShortNum(this.state.playerStats.kills / this.state.playerStats.deaths)}\n                          sub={`Kills: ${this.state.playerStats.kills}| Deaths: ${this.state.playerStats.deaths}`}/>\n                    <Card name={'EKIA (Kills + Assists) Ratio'}\n                          data={getShortNum((this.state.playerStats.kills + this.state.playerStats.assists) / this.state.playerStats.deaths)}\n                          sub={`EKIA: ${this.state.playerStats.assists + this.state.playerStats.kills} | Death:${this.state.playerStats.deaths}`}/>\n                    <Card name={'Time Played'}\n                          data={this.getTimePlayed(this.state.playerStats.timePlayedTotal)}\n                          sub={'Time in total'}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Statistics;","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./components/Functions\";\nimport {TestGraph} from \"./components/Card/CardPie\";\nimport {HorizontalBar} from \"react-chartjs-2\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [\n                {show: true, name: 'dudioudo', color: '255, 0, 0', data: []},\n                {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n                {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n                {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n                {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n            ],\n            com: false\n        }\n    }\n\n    componentDidMount() {\n        console.log('mounted', this.state)\n    }\n\n    dataFromChild = (name, data) => {\n        const currentUser = this.state.list.find(user => user.name === name);\n        currentUser.data = data;\n        this.setState({\n            currentUser\n        });\n    };\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    showComper = () => {\n        this.setState({com: !this.state.com})\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n    render() {\n        const myS = ['level',\n            'hits',\n            'hs', 'wins',\n            'suicides',\n            'longestKillstreak', 'damagePerMinute', 'damagePerGame', 'headshotPercentage',\n            'ekiaPerGame', 'ekia', 'deaths', 'kills', 'assists'\n        ];\n        const users = this.getAllUsers();\n        return (\n            <div>\n                <Logo/>\n                {this.state.list.map((user, index) => {\n                    return (<div key={index} className={'player-list'}>\n                        <label>\n                            <input type={'checkbox'}\n                                   defaultChecked\n                                   onClick={() => {\n                                       this.changeList(user)\n                                   }}/>\n                            {user.name}\n                        </label>\n                    </div>)\n                })}\n                <button onClick={() => this.showComper()}>Click</button>\n                {\n                    !this.state.com\n                        ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return user.show ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={user.name}\n                                                    color={user.color}\n                                                    dataToParent={this.dataFromChild}/>\n                                    </div>\n                                    :\n                                    <div/>\n                            })}\n                        </div>\n                        :\n                        <div className={'graph'}>\n                            {\n                                myS.map((lable, index) => {\n                                    return (<div key={index}>\n                                        <TestGraph name={users} lable={lable}/>\n                                    </div>)\n                                })\n                            }\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}