{"version":3,"sources":["components/Card/CardPie.js","components/Functions.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["CardPie","_ref","name","data1","data2","sub","data","labels","concat","datasets","backgroundColor","hoverBackgroundColor","react_default","a","createElement","className","es","width","height","options","maintainAspectRatio","Card","_ref2","TestGraph","_ref3","userA","userB","userC","userD","userE","myLable","userAdata","map","x","userBdata","userCdata","userDdata","userEdata","initialState","label","borderColor","borderWidth","hoverBorderColor","fontSize","legend","getPresentage","num","total","arguments","length","undefined","Math","floor","toString","slice","getShortNum","getPrestigeImage","getUserData","URL","fetch","headers","Access-Control-Allow-Origin","then","res","json","Logo","src","alt","Statistics","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","state","playerStats","username","mp","setState","level","hits","all","misses","hs","headshotPercentage","wins","losses","suicides","longestKillstreak","prestige","damagePerMinute","damagePerGame","ekiaPerGame","ekia","deaths","kills","assists","timePlayedTotal","dataToParent","getTimePlayed","time","getStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","console","log","lifetime","currentUserColor","border","color","totalShots","totalGames","style","main_min_default","completed","colors","hidden","CardPie_CardPie","CardPie_Card","split","React","Component","App","dataFromChild","currentUser","list","find","user","changeList","show","showComper","com","_this2","Functions_Logo","index","key","type","defaultChecked","onClick","Container_Statistics_Statistics","CardPie_TestGraph","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f5dffa41.chunk.js","sourcesContent":["import React from \"react\";\nimport './Card.css'\nimport {Bar, Doughnut} from 'react-chartjs-2';\nexport const CardPie = ({name, data1, data2, sub}) => {\n    const data = {\n        labels: [\n            `${data1}%`,\n            `${data2}%`\n        ],\n        datasets: [{\n            data: [data1, data2],\n            backgroundColor: [\n                '#ff9202',\n                '#694603',\n            ],\n            hoverBackgroundColor: [\n                '#ff9202',\n                '#694603',\n            ]\n        }]\n    };\n\n    return (<div className={'card'}>\n        <div className={'card-container-pie'}>\n            <div className={'card-top'}>{name}</div>\n\n            <Doughnut data={data}\n                      width={150}\n                      height={100}\n                      options={{\n                          maintainAspectRatio: false\n                      }}/>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div className={'card-container'}>\n            <div className={'background'}></div>\n            <div className={'card-top'}> {name}</div>\n            <div className={'card-context'}>{data}</div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\n\nexport const TestGraph = ({userA,userB,userC,userD,userE}) => {\n    const myLable=['level',\n        'hits', 'misses',\n        'hs', 'wins',\n        'losses', 'suicides',\n    'longestKillstreak','damagePerMinute','damagePerGame','headshotPercentage',\n    'ekiaPerGame','ekia','deaths', 'kills','assists','timePlayedTotal' ];\n    const userAdata = myLable.map(x=>userA[x]);\n    const userBdata = myLable.map(x=>userB[x]);\n    const userCdata = myLable.map(x=>userC[x]);\n    const userDdata = myLable.map(x=>userD[x]);\n    const userEdata = myLable.map(x=>userE[x]);\n\n    const initialState = {\n\n        labels: myLable,\n        datasets: [\n            {\n                label: userA['username'],\n                backgroundColor: 'rgba(255, 0, 30, 0.59)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                fontSize: '30px',\n                data: userAdata\n            },\n            {\n                label: userB['username'],\n                backgroundColor: 'rgba(0, 1, 255, 0.59)',\n                borderColor: 'rgba(0, 1, 255,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(0, 1, 255,0.4)',\n                hoverBorderColor: 'rgba(0, 1, 255,1)',\n                data: userBdata\n            },\n            {\n                label: userC['username'],\n                backgroundColor: 'rgba(12, 136, 16, 0.59)',\n                borderColor: 'rgba(12, 136, 16,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(12, 136, 16,0.4)',\n                hoverBorderColor: 'rgba(12, 136, 16,1)',\n                data: userCdata\n            },\n            {\n                label: userD['username'],\n                backgroundColor: 'rgba(136, 129, 0, 0.59)',\n                borderColor: 'rgba(136, 129, 0,1)',\n                borderWidth: 2,\n                hoverBackgroundColor: 'rgba(136, 129, 0,0.4)',\n                hoverBorderColor: 'rgba(136, 129, 0,1)',\n                data: userDdata\n            },\n            {\n                label: userE['username'],\n                backgroundColor: 'rgba(97, 96, 98, 0.59)',\n                borderColor: 'rgba(97, 96, 98,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(97, 96, 98,0.4)',\n                hoverBorderColor: 'rgba(97, 96, 98,1)',\n                data: userEdata\n            },\n\n        ],\n\n    };\n    return <Bar height={150}\n                data={initialState}\n    legend={{fontSize:'30'}}/>\n\n}","import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num,slice=4) =>{\n    return num.toString().slice(0,slice)\n};\n\nexport const getPrestigeImage = (num) => {\n        const list = [\n                '',\n                'https://image.ibb.co/ideMDA/L1.png',\n                'https://image.ibb.co/jFtgDA/L2.png',\n                'https://image.ibb.co/idRe0q/L3.png',\n                'https://image.ibb.co/jsoRfq/L4.png',\n                'https://image.ibb.co/cwviRV/L5.png',\n                'https://image.ibb.co/iRMe0q/L6.png',\n                'https://image.ibb.co/i9bq6V/L7.png',\n                'https://image.ibb.co/cPXK0q/L8.png',\n                'https://image.ibb.co/mZvHmV/L9.png',\n                'https://image.ibb.co/dzGe0q/L10.png'\n            ];\n\n        return list[num]\n    };\n\nexport const getUserData = (name) => {\n    const URL = `https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/${name}/profile/`;\n    return fetch(URL, {\n        headers: {'Access-Control-Allow-Origin': '*',}})\n        .then(res => res.json()).then(({data}) => {\n            return data;\n        })\n\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n               src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n               alt={'logo'}/>;\n};\n\n\n","import React from 'react'\nimport './Statistics.css'\nimport ProgressBar from 'react-progress-bar-battlenet-style';\nimport {Card, CardPie} from \"../../components/Card/CardPie\";\nimport {getPresentage, getPrestigeImage, getShortNum, getUserData} from \"../../components/Functions\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(this.props);\n        this.state = {\n            playerStats: {\n                username: this.props.name,\n                level: null,\n                lifetime: [],\n                hits: 0,\n                misses: 0,\n                hs: 0,\n                wins: 0,\n                losses: 0,\n                suicides: 0,\n                longestKillstreak: 0,\n                prestige: 0,\n                damagePerMinute: 0,\n                damagePerGame: 0,\n                headshotPercentage: 0,\n                ekiaPerGame: 0,\n                ekia: 0,\n                deaths: 0,\n                kills: 0,\n                assists: 0,\n                timePlayedTotal: 0\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n        this.props.dataToParent(this.state.playerStats.username,this.state.playerStats)\n    }\n\n    getData = () => {\n        getUserData(this.state.playerStats.username)\n            .then(({username, mp}) => {\n                this.setState({\n                    playerStats: {\n                        username: username,\n                        level: mp['level'],\n                        hits: mp['lifetime'].all['hits'],\n                        misses: mp['lifetime'].all['misses'],\n                        hs: mp['lifetime'].all['headshots'],\n                        headshotPercentage: mp['lifetime'].all['headshotPercentage'],\n                        wins: mp['lifetime'].all['wins'],\n                        losses: mp['lifetime'].all['losses'],\n                        suicides: mp['lifetime'].all['suicides'],\n                        longestKillstreak: mp['lifetime'].all['longestKillstreak'],\n                        prestige: mp['prestige'],\n                        damagePerMinute: mp['lifetime'].all['damagePerMinute'],\n                        damagePerGame: mp['lifetime'].all['damagePerGame'],\n                        ekiaPerGame: mp['lifetime'].all['ekiaPerGame'],\n                        ekia: mp['lifetime'].all['ekia'],\n                        deaths: mp['lifetime'].all['deaths'],\n                        kills: mp['lifetime'].all['kills'],\n                        assists: mp['lifetime'].all['assists'],\n                        timePlayedTotal: mp['lifetime'].all['timePlayedTotal']\n                    }\n                });\n                  this.props.dataToParent(this.state.playerStats.username,this.state.playerStats)\n            });\n    };\n\n    getTimePlayed = (time) => {\n        const h = (time / 60) / 60;\n        return (h).toString().slice(0, 4)\n    };\n\n    getStyle = () =>{\n        return {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n    };\n\n    render() {\n        const currentUserColor = {border: `solid thin ${this.props.color}`};\n        const totalShots = this.state.playerStats.misses + this.state.playerStats.hits;\n        const totalGames = this.state.playerStats.wins + this.state.playerStats.losses;\n        return (\n            <div className={'container'} style={currentUserColor}>\n\n                <div className={'top'} style={this.getStyle()}>\n                    <div className={'left'}>\n                        <div>\n                            {this.state.playerStats.username}\n                        </div>\n                    </div>\n                    <div className={'right'}>\n                        <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                            <ProgressBar\n                                completed={getPresentage(this.state.playerStats.level, 55)}\n                                colors={[30, 70, 95]}/>\n                        </div>\n                        <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                    </div>\n                </div>\n                <div className={'middle'} hidden={'True'}>\n                    <CardPie name={`Shots (${totalShots})`}\n                             data1={getPresentage(this.state.playerStats.hits, totalShots)}\n                             data2={getPresentage(this.state.playerStats.misses, totalShots)}\n                             sub={`Hits: ${this.state.playerStats.hits} | Miss: ${this.state.playerStats.misses}`}/>\n                    <CardPie name={`Win/Lose (${totalGames})`}\n                             data1={getPresentage(this.state.playerStats.wins, totalGames)}\n                             data2={getPresentage(this.state.playerStats.losses, totalGames)}\n                             sub={`Wins: ${this.state.playerStats.wins} | Losses: ${this.state.playerStats.losses}`}/>\n                    <Card name={'Headshots'}\n                          data={this.state.playerStats.hs}\n                          sub={`${getPresentage(this.state.playerStats.hs, this.state.playerStats.hits, false)}% of you hits are headshots`}/>\n                    <Card name={'Suicides'}\n                          data={this.state.playerStats.suicides}\n                          sub={`${getPresentage(this.state.playerStats.suicides, this.state.playerStats.deaths, false)}% of you death is suicide `}/>\n                    <Card name={'Longest Kill streak'}\n                          data={this.state.playerStats.longestKillstreak}\n                          sub={(this.state.playerStats.longestKillstreak > 10 ? 'Nice!!!' : 'Try to work on yourself dude')}/>\n                    <Card name={'Damage Per Minute'} data={getShortNum(this.state.playerStats.damagePerMinute, 5)}\n                          sub={`${((this.state.playerStats.damagePerMinute) / 100).toString().split('.')[0]} +/- People in minute`}/>\n                    <Card name={'Damage Per Game'}\n                          data={getShortNum(this.state.playerStats.damagePerGame)}\n                          sub={`${((this.state.playerStats.damagePerGame) / 100).toString().split('.')[0]} +/- People in game`}/>\n                    <Card name={'Avg. EKIA Per Game'}\n                          data={getShortNum(this.state.playerStats.ekiaPerGame)}\n                          sub={(this.state.playerStats.ekiaPerGame > 10 ? 'Nice!!!!' : 'Need to practise')}/>\n                    <Card name={'K/D Ratio'}\n                          data={getShortNum(this.state.playerStats.kills / this.state.playerStats.deaths)}\n                          sub={`Kills: ${this.state.playerStats.kills}| Deaths: ${this.state.playerStats.deaths}`}/>\n                    <Card name={'EKIA (Kills + Assists) Ratio'}\n                          data={getShortNum((this.state.playerStats.kills + this.state.playerStats.assists) / this.state.playerStats.deaths)}\n                          sub={`EKIA: ${this.state.playerStats.assists + this.state.playerStats.kills} | Death:${this.state.playerStats.deaths}`}/>\n                    <Card name={'Time Played'}\n                          data={this.getTimePlayed(this.state.playerStats.timePlayedTotal)}\n                          sub={'Time in total'}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Statistics;","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./components/Functions\";\nimport {TestGraph} from \"./components/Card/CardPie\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [\n                {show: true, name: 'dudioudo', color: 'red', data: []},\n                {show: true, name: 'WakingBrizard', color: 'blue', data: []},\n                {show: true, name: 'FormingSpoon801', color: 'green', data: []},\n                {show: true, name: 'MenahemCohen', color: 'white', data: []},\n                {show: true, name: 'SufleShokolad', color: 'yellow', data: []},\n            ],\n            com:false\n        }\n    }\n\n    componentDidMount() {\n        console.log('mounted', this.state)\n    }\n\n    dataFromChild = (name, data) => {\n        const currentUser = this.state.list.find(user => user.name === name);\n        currentUser.data = data;\n        this.setState({\n            currentUser\n        });\n    };\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    showComper = () =>{\n        this.setState({com: true})\n    };\n\n    render() {\n        return (\n            <div>\n                <Logo/>\n                {this.state.list.map((user, index) => {\n                    return (<div key={index} className={'player-list'}>\n                        <label>\n                            <input type={'checkbox'}\n                                   defaultChecked\n                                   onClick={() => {\n                                       this.changeList(user)\n                                   }}/>\n                            {user.name}\n                        </label>\n                    </div>)\n                })}\n                <div className={'App'}>\n                    {this.state.list.map((user, index) => {\n                        return user.show ?\n                            <div key={index} className={'statistic-container'}>\n                                <Statistics name={user.name}\n                                            color={user.color}\n                                            dataToParent={this.dataFromChild}/>\n                            </div>\n                            :\n                            <div/>\n                    })}\n                </div>\n                {\n\n                    this.state.com\n                        ?\n                        <div style={{backgroundColor:'white'}}>\n                            <TestGraph userA={this.state.list[0].data}\n                                       userB={this.state.list[1].data}\n                                       userC={this.state.list[2].data}\n                                       userD={this.state.list[3].data}\n                                       userE={this.state.list[4].data}\n                            />\n                        </div>\n                    :\n                    <button onClick={()=>this.showComper()}>Click</button>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}