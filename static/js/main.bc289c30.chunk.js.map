{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","components/Loading/Loading.js","Container/Card/Graph.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["normalizeNumber","num","slice","arguments","length","undefined","concat","toString","split","getPrestigeImage","Logo","react_default","a","createElement","className","src","alt","fixName","name","toUpperCase","map","letter","join","Card","props","children","text","List","_ref","data","filter","filteredList","x","action","startsWith","SortMaxMin","index","key","replace","Math","round","result","array","sort","b","URL","toJson","json","getUserData","username","path","match","Promise","resolve","fetch","then","Loading","id","Graph","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshData","setState","dates","type","normalizeDate","timeList","Date","toLocaleDateString","getHours","getMinutes","createDataForGraph","temp","console","log","avgValue","avg","state","reduce","i","push","labels","reverse","datasets","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","getBar","myData","es","height","width","redraw","getPie","data2","createDataForPie","data1","hoverBackgroundColor","inherits","createClass","value","prevProps","Loading_Loading_Loading","React","Component","WeeklyGraphs","playerName","killList","matches","playerStats","kills","ekiaList","ekia","deathList","deaths","assistsList","assists","ekiadRatioList","ekiadRatio","times","utcStartSeconds","_this2","chartList","keys","Graph_Graph","Statistics","getData","_data$mp","mp","level","prestige","multiplayerData","lifetime","all","allData","assign","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","hardFilter","list","word","lifeTime","objectList","perList","wins","losses","scoreListObjects","CardPie_List","CardPie_Card","pagesLabels","inPage","outPage","onClick","pages","Container_WeeklyGraphs_WeeklyGraphs","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","query","App","changeList","user","show","getAllUsers","validateName","status","isAutorise","com","users","Functions_Logo","Container_Statistics_Statistics","onChange","event","target","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bc289c30.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const normalizeNumber = (num, slice = 3) => {\n    return `${num.toString().split('.')[0]}.${num.toString().split('.')[1].slice(0,slice)}`\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {fixName, normalizeNumber} from \"../../Functions/Functions\";\n\nexport const Card = (props) => {\n    return (<div className={'small-card'}>\n        <div>\n            <div className={'mall-card-top'}>{fixName(props.name)}</div>\n            <div className={'small-card-context'}>{props.children}</div>\n            <div className={'small-card-sub'}>{props.text} </div>\n        </div>\n    </div>)\n};\n\nexport const List = ({data,filter}) => {\n        const filteredList = data.filter(x=>x.action.startsWith(filter));\n    return (\n        <div>\n            <h1>{fixName(filter)}</h1>\n            <div  className={'table'}>\n                {SortMaxMin(filteredList).map((x,index)=>\n                    <div key={index} className={'table-line'}>\n                        <div>{fixName(x.action).replace(fixName(filter),'').length > 0\n                    ?\n                            fixName(x.action).replace(fixName(filter),''):\n                            filter\n                    }</div>\n                        <div className={'table-result'}>{Math.round(x.result)}</div>\n                    </div>)}\n            </div>\n\n        </div>\n    );\n};\n\n\n const SortMaxMin = (array)=>{\n    return array.sort((a,b)=> b.result - a.result)\n};\n\n\n","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action='profile') => {\n    const path = (!action.match('matches')  ? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar, Doughnut} from \"react-chartjs-2\";\nimport {Loading} from \"../../components/Loading/Loading\";\n\nexport class Graph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            data: [],\n            dates: [],\n            type: ''\n\n        }\n    }\n\n    componentDidMount() {\n        this.refreshData()\n    }\n\n    componentWillUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.refreshData()\n        }\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            type: this.props.type\n\n        });\n    };\n\n    normalizeDate = (timeList) => {\n        return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')}${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n    };\n\n    createDataForGraph = (name, data, dates) => {\n        const temp = this.normalizeDate(dates);\n        console.log(typeof temp);\n        const avgValue = [];\n        const avg = this.state.data ? this.state.data.reduce((a, b) => a + b) : 0;\n        for (let i = 0; i < 20; i++) {avgValue.push(avg/20)}\n            return {\n                labels: temp.reverse(),\n                datasets: [\n                    {\n                        type: 'line',\n                        fill: false,\n                        label: `Average`,\n                        backgroundColor: 'rgba(255, 255, 255,0.5)',\n                        borderColor: 'rgba(255, 255, 255,0.5)',\n                        data: avgValue,\n                        steppedLine: false,\n                        lineTension: 0.6,\n                        pointRadius: 0,\n                        pointHitRadius: 10,\n                        borderDash: [3],\n                    },\n                    {\n                        type: 'bar',\n                        fill: false,\n                        borderDash: [],\n                        label: name.toUpperCase(),\n                        backgroundColor: 'rgba(255,140,0)',// orange\n                        borderColor: 'rgb(255,140,0)',\n                        data: data,\n                        lineTension: 0.1,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n\n                    },\n\n                ],\n            };\n    };\n\n\n    getBar = (name, data, dates) => {\n        const myData = this.createDataForGraph(name, data, dates);\n        return (< Bar\n            height={300}\n            width={500}\n            data={myData}\n            redraw={true}\n        />)\n    };\n\n    getPie = (name, data, data2) => {\n\n        const myData = this.createDataForPie(name, data, data2);\n        return (<Doughnut\n            height={200}\n            width={200}\n            data={myData}\n            redraw={true}\n        />)\n    };\n\n    createDataForPie = (name, data1, data2) => {\n        return {\n            labels: [\n                data1.action.toUpperCase(), data2.action\n            ],\n            datasets: [{\n                data: [data1.result, data2.result],\n                backgroundColor: [\n                    '#b17a1a',\n                    '#6d4c0c',\n                    '#FFCE56'\n                ],\n                hoverBackgroundColor: [\n                    '#7e5812',\n                    '#4a310d',\n                    '#FFCE56'\n                ]\n            }]\n        };\n    };\n\n    render() {\n        const {data} = this.state;\n        const {name} = this.state;\n        const {dates} = this.state;\n        console.log('this is dates',dates);\n        return (\n            <div>\n                {\n                    this.state.type\n                        ?\n                        this.state.type.match('line')\n                            ?\n                            this.getBar(name, data, dates)\n                            :\n                            this.getPie(name, data, dates)\n                        :\n                        <Loading/>\n                }\n\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport './Graph.css'\nimport {Graph} from \"../Card/Graph\";\nimport {getUserData} from \"../../Functions/Http\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:'',\n            data: [],\n            times: [],\n            type: ''\n        };\n    }\n\n    componentWillUpdate(prevProps) {\n        if(this.props.data !== prevProps.data)\n            this.refreshData()\n    }\n\n    componentDidMount() {\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        const {playerName} = this.props;\n        getUserData(playerName,'matches').then(({data}) => {\n            this.setState({\n                data: {\n                    killList: {data: data.matches.map(x => x.playerStats.kills), name: 'kill'},\n                    ekiaList: {data: data.matches.map(x => x.playerStats.ekia), name: 'ekia'},\n                    deathList: {data: data.matches.map(x => x.playerStats.deaths), name: 'death'},\n                    assistsList: {data: data.matches.map(x => x.playerStats.assists), name: 'assists'},\n                    ekiadRatioList: {data: data.matches.map(x => x.playerStats.ekiadRatio), name: 'ekiadRatio'},\n                },\n                times: {data: data.matches.map(x => x.utcStartSeconds)}})\n        })\n    };\n\n    render() {\n        const chartList = Object.keys(this.state.data).map(x => this.state.data[x]);\n        const times = Object.keys(this.state.times).map(x => this.state.times[x])[0];\n        return (\n            <div className={'graph-container'}>\n                {\n                    chartList.map((x, index) => {\n                        return (<div key={index}>\n                            <Graph name={x.name} dates={times} data={x.data} type={'line'}/>\n                        </div>)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport './Statistics.css'\nimport {Card, List, SmallCard, MyPie} from \"../../components/Card/CardPie\";\nimport {fixName, getPrestigeImage, normalizeNumber} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport WeeklyGraphs from \"../WeeklyGraphs/WeeklyGraphs\";\nimport {Graph} from \"../Card/Graph\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: '',\n            query: '',\n            array: []\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name);\n\n\n    }\n\n    getData = (username) => {\n        getUserData(username, 'profile')\n            .then(({data}) => {\n                const {username} = data;\n                const {level, prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n\n                this.setState({\n                    allData: Object.keys(multiplayerData).map(x => Object.assign({\n                        action: x,\n                        result: multiplayerData[x]\n                    })),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch',\n                    array: []\n\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n\n    hardFilter = (list ,word) => {\n    return list.filter(x=>x.action.split(' ').join('') === word)[0]\n    };\n\n\n    lifeTime = () => {\n        const list = this.state.allData;\n        const objectList = list.map(x => Object.assign({action: fixName(x.action), result: x.result}));\n        const objectList2 = list.map(x => Object.assign({action: x.action, result: x.result}));\n        const {array} = this.state;\n        const perList = list.map(x => Object.assign({\n            action: fixName(x.action),\n            result: x.result\n        })).filter(x => x.action.split(' ')[1] === 'Per');\n\n\n        const ekia = this.hardFilter(list,'ekia');\n        const deaths = this.hardFilter(list,'deaths');\n\n\n        const wins = this.hardFilter(list,'wins');\n        const losses = this.hardFilter(list,'losses');\n\n        const score = this.hardFilter(list,'scoreCore');\n        const scorePerGame = this.hardFilter(list,'scorePerGame');\n        const scorePerMin = this.hardFilter(list,'scorePerMinute');\n        const scoreList = ['scoreCore','scorePerGame','scorePerMinute'];\n\n        const scoreListObjects= scoreList.map( x=>this.hardFilter(list,x));\n\n        return (\n            <div className={'middel'}>\n                <div className={'card-wrapper'}>\n                    {\n                        array.map((filter, index) => {\n                            return (\n                                <div className={'list-nest'} key={index}>\n                                    <List data={objectList} filter={filter}/>\n                                </div>\n\n                            )\n                        })\n                    }\n\n\n                    <Card name={'Ekia/Deaths'} text={`Ratio ${normalizeNumber(ekia.result / deaths.result)}`}>\n                        <Graph name={'test'} data={ekia} dates={deaths} type={'pie'}/>\n                    </Card>\n\n                    <Card name={'Wins/Losses'} text={`Ratio ${normalizeNumber(wins.result / losses.result)}`}>\n                        <Graph name={'test'} data={wins} dates={losses} type={'pie'}/>\n                    </Card>\n\n\n\n                    <div className={'small-card-wrapper'}>\n                        {\n                            perList.map((x, index) => {\n                                return <div key={index}>\n                                    <Card name={x.action}>\n                                        {normalizeNumber(x.result)}\n                                    </Card>\n                                </div>\n                            })\n                        }\n                    </div>\n                </div>\n\n\n                {\n                    scoreListObjects.map((x,index)=>{\n                        return(<div key={index}><Card name={x.action}>{x.result}</Card></div>)\n                    })\n                }\n            </div>\n        );\n    };\n\n    pagesLabels = () => {\n        return (\n            <div className={'page-labels'}>\n                <div style={this.state.page === 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'Team Deathmatch'})}>Life time\n                </div>\n                <div style={this.state.page !== 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'BlackOut'})}>Weekly\n                </div>\n            </div>)\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <WeeklyGraphs type={'mp'} playerName={this.state.playerStats.username}/>;\n            default:\n                return this.lifeTime();\n\n\n        }\n    };\n\n    outPage = () => {\n        return {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            color: '#553400',\n            backgroundColor: '#1b1b1b',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n\n        }\n    };\n\n    inPage = () => {\n        return {\n            backgroundColor: '#101010',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        }\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div className={'container'}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    {this.pagesLabels()}\n                                    <div className={'pagination-border'}> {this.pages(this.state.page)}</div>\n                                </div>\n                                :\n                                <Loading/>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {Loading} from \"./components/Loading/Loading\";\nimport {getUserData} from \"./Functions/Http\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: 'FormingSpoon801',\n            list: [],\n            com: false,\n            isAutorise: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n    validateName = (name) => {\n        getUserData(name).then(({status}) =>\n            this.setState({\n                isAutorise: (status === 'success')\n            }));\n    };\n\n    render() {\n        const users = this.getAllUsers();\n        const {isAutorise} = this.state;\n\n        return (\n            <div>\n                <Logo/>\n                {\n                    isAutorise ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={this.state.query} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div>\n                            <div className={'login-step'}>\n                                Enter User name <input width={300} onChange={(event) => this.setState({query: event.target.value})}/>\n                                <button onClick={() => this.validateName(this.state.query)}>check</button>\n                            </div>\n                        </div>\n                }\n            </div>\n        );\n    }\n}\n\n\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        // {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}