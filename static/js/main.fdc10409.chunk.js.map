{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","components/Loading/Loading.js","Container/Card/CardLine.js","Container/WeeklyGraphs/WeeklyGraphs.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["getPrestigeImage","num","Logo","react_default","a","createElement","className","src","alt","Card","_ref","name","data","sub","split","toUpperCase","slice","map","letter","concat","join","fixName","toString","length","URL","toJson","json","getUserData","username","action","path","Promise","resolve","fetch","then","Loading","id","CardLine","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshData","setState","dates","size","avg","state","reduce","b","createDataForGraph","avgValue","i","push","amount","labels","reverse","datasets","type","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","matchDate","timeList","x","Date","toLocaleDateString","getHours","getMinutes","inherits","createClass","key","value","prevProps","mydata","es","height","width","redraw","React","Component","WeeklyGraphs","playerName","killList","matches","playerStats","kills","ekiaList","ekia","deathList","deaths","assistsList","assists","ekiadRatioList","ekiadRatio","times","utcEndSeconds","utcStartSeconds","console","log","_this2","chartList","keys","time","index","CardLine_CardLine","Statistics","getData","_data$mp","mp","level","prestige","multiplayerData","lifetime","all","allData","assign","result","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","lifeTime","list","tempList","filter","startsWith","CardPie_Card","pagesLabels","inPage","outPage","onClick","pages","Container_WeeklyGraphs_WeeklyGraphs","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","Loading_Loading_Loading","src_App_0","App","changeList","user","show","getAllUsers","com","users","Functions_Logo","Container_Statistics_Statistics","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdc10409.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num, slice = 4) => {\n    return num.toString().slice(0, slice)\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div>\n            <div className={'card-top'}>\n                {fixName(name)}</div>\n            <div className={'card-context'}>\n                {(data.toString().split('').length > 10 ?\n                    data.toString().slice(0, 6) : data)}\n            </div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\n\n\n\n","const URL ='https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/';\n\n\nexport const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username,action) => {\n    // const path = (action !=='matches'? `${URL}${username}/${action}/type/wz` :\n    const path = (action !=='matches'? `${URL}${username}/${action}` : `${URL}${username}/${action}/mp/start/0/end/0/details` );\n    return Promise.resolve(myFetch(path))\n};\n\n","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>\n            <div>Loading...</div></div>\n    </div>)\n};","import React from 'react'\nimport {Bar} from \"react-chartjs-2\";\n\nexport class CardLine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            amount: 1,\n            data: [],\n            dates: [],\n            size: 0,\n            avg: 0,\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.refreshData()\n    }\n\n    componentWillUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.refreshData()\n\n        }\n    }\n\n    refreshData = () => {\n        this.setState({\n            name: this.props.name,\n            data: this.props.data,\n            dates: this.props.dates,\n            size: this.props.size\n        }, () => {\n            this.setState({\n                avg: this.state.data ? this.state.data.reduce((a, b) => a + b) : 0\n            });\n\n        });\n    };\n\n    createDataForGraph = (name, data, avg, dates) => {\n        const avgValue = [];\n        for (let i = 0; i < 20; i++) {\n            avgValue.push(avg)\n        }\n        if (this.state.amount === 1)\n            return {\n                labels: dates.reverse(),\n                datasets: [\n                    {\n                        type: 'line',\n                        fill: false,\n                        label: `Average`,\n                        backgroundColor: 'rgba(255, 255, 255,0.5)',\n                        borderColor: 'rgba(255, 255, 255,0.5)',\n                        data: avgValue,\n                        steppedLine: false,\n                        lineTension: 0.6,\n                        pointRadius: 0,\n                        pointHitRadius: 10,\n                        borderDash: [3],\n                    },\n                    {\n                        type: 'bar',\n                        fill: false,\n                        borderDash: [],\n                        label: name.toUpperCase(),\n                        backgroundColor: 'rgba(255,140,0)',// orange\n                        borderColor: 'rgb(255,140,0)',\n                        data: data,\n                        lineTension: 0.1,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n\n                    },\n\n                ],\n            };\n    };\n\n    matchDate = (timeList) => {\n        return timeList.map(x => (`${new Date(x * 1000).toLocaleDateString('en-US')} ${new Date(x * 1000).getHours()}:${new Date(x * 1000).getMinutes()}`))\n    };\n\n    render() {\n        const {dates} = this.state ? this.state : [];\n        const mydata = this.createDataForGraph(this.state.name, this.state.data, this.state.avg / 20, this.matchDate(dates));\n        return (\n            <div>\n                <Bar\n                    height={300}\n                    width={500}\n                    data={mydata}\n                    redraw={true}\n                />\n            </div>\n        );\n    }\n\n\n}","import React from 'react'\nimport './Graph.css'\nimport {CardLine} from \"../Card/CardLine\";\nimport {getUserData} from \"../../Functions/Http\";\n\nexport class WeeklyGraphs extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('props',props);\n        this.state = {\n            username:'',\n            data: [],\n            times: [],\n            type: ''\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.type !== prevProps.type)\n            this.refreshData()\n    }\n\n    componentDidMount() {\n        this.refreshData();\n    }\n\n    refreshData = () => {\n        const {playerName} = this.props;\n        getUserData(playerName,'matches')\n            .then(({data}) => {\n            this.setState({\n                data: {\n                    killList: {data: data.matches.map(x => x.playerStats.kills), name: 'kill'},\n                    ekiaList: {data: data.matches.map(x => x.playerStats.ekia), name: 'ekia'},\n                    deathList: {data: data.matches.map(x => x.playerStats.deaths), name: 'death'},\n                    assistsList: {data: data.matches.map(x => x.playerStats.assists), name: 'assists'},\n                    ekiadRatioList: {data: data.matches.map(x => x.playerStats.ekiadRatio), name: 'ekiadRatio'},\n                },\n                times: {utcEndSeconds: {data: data.matches.map(x => x.utcStartSeconds), name: 'utcEndSeconds'},}\n            })\n        })\n    };\n\n    render() {\n        const chartList = Object.keys(this.state.data).map(x => this.state.data[x]);\n        const time = Object.keys(this.state.times).map(x => this.state.times[x])[0];\n        return (\n            <div className={'graph-container'}>\n                {\n                    chartList.map((x, index) => {\n                        return (<div key={index}>\n                            <CardLine name={x.name} dates={time.data} data={x.data}/>\n                        </div>)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default WeeklyGraphs","import React from 'react'\nimport './Statistics.css'\nimport {Card} from \"../../components/Card/CardPie\";\nimport {getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport WeeklyGraphs from \"../WeeklyGraphs/WeeklyGraphs\";\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allData: null,\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: '',\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name)\n    }\n\n    getData = (username) => {\n        getUserData(username, 'profile')\n            .then(({data}) => {\n                const {username} = data;\n                const {level, prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n                this.setState({\n                    allData: Object.keys(multiplayerData).map(x => Object.assign({\n                        action: x,\n                        result: multiplayerData[x]\n                    })),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch'\n\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n    lifeTime = () => {\n\n\n        //groups: killEnemy\n\n\n\n        const list = this.state.allData;\n        const tempList = list.filter(x=>x.action.startsWith('killEnemy'));\n        console.log('this is templist',tempList);\n        return (\n            <div className={'middel'}>\n                <div className={'card-wrapper'}>\n                    {\n                        list.map((x, index) => {\n                            return <div key={index}>\n                                <Card name={x.action} data={x.result}/>\n                            </div>\n                        })\n                    }\n                    {/*<div>Kill Enemy:</div>*/}\n                    {/*{*/}\n                        {/*tempList.map((x,index)=>{*/}\n                            {/*return <div key={index} className={'list'}>*/}\n                                {/*<Card name={`Kill`}*/}\n                                      {/*sub={x.action.replace('killEnemy',``)} data={x.result}/>*/}\n                            {/*</div>*/}\n                        {/*})*/}\n                    {/*}*/}\n                </div>\n            </div>\n\n\n        );\n    };\n\n    pagesLabels = () => {\n        return (\n            <div className={'page-labels'}>\n                <div style={this.state.page === 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'Team Deathmatch'})}>Life time\n                </div>\n                <div style={this.state.page !== 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                     onClick={() => this.setState({page: 'BlackOut'})}>Weekly\n                </div>\n            </div>)\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <WeeklyGraphs type={this.state.type ? 'mp' : 'wz'}\n                                     playerName={this.state.playerStats.username}/>;\n            default:\n                return this.lifeTime();\n\n\n        }\n    };\n\n    outPage = () => {\n        return {\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#fc6621 solid thin\",\n            color: '#553400',\n            backgroundColor: 'black',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n\n        }\n    };\n\n    inPage = () => {\n        return {\n            backgroundColor: '#1b1b1b',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#fc6621 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        }\n    };\n\n    render() {\n        const list = (this.state.allData !== null ? this.state.allData : []);\n        return (\n            <div className={'container'}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    {this.pagesLabels()}\n                                    <div className={'pagination-border'}> {this.pages(this.state.page)}</div>\n                                </div>\n                                :\n                                <Loading/>\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {Loading} from \"./components/Loading/Loading\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            com: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n\n\n    render() {\n        const users = this.getAllUsers();\n        return (\n            <div>\n                <Logo/>\n                {\n                    users.length >= 1\n                        ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={user.name} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        // {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}