{"version":3,"sources":["Functions/Functions.js","components/Card/CardPie.js","Functions/Http.js","components/Loading/Loading.js","Container/Blackout/Blackout.js","Container/Statistics/Statistics.js","App.js","index.js"],"names":["getPrestigeImage","num","Logo","react_default","a","createElement","className","src","alt","Card","_ref2","name","data","sub","split","toUpperCase","slice","map","letter","concat","join","fixName","toString","length","toJson","json","getUserData","username","console","log","Promise","resolve","url","fetch","then","Loading","id","Blackout","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","shots","ekiaDeathList","ekiaDeathAvg","shotAvg","inherits","createClass","key","value","_this2","j","_ref","obj","matches","setState","x","playerStats","kills","ekia","deaths","reduce","b","arra","i","push","labels","datasets","fill","label","backgroundColor","borderColor","steppedLine","lineTension","pointRadius","pointHitRadius","borderDash","options","legend","fontColor","defaultFontColor","es","height","width","redraw","maintainAspectRatio","Loading_Loading_Loading","React","Component","Statistics","getData","_data$mp","mp","level","prestige","multiplayerData","lifetime","all","temp","keys","assign","action","result","page","Top","prestigeImage","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","style","teamDeathMatch","list","index","toLowerCase","includes","query","CardPie_Card","pages","Container_Blackout_Blackout","outPage","marginLeft","border","borderRadius","borderBottom","color","shdowBox","padding","inPage","onClick","src_App_0","App","changeList","user","show","getAllUsers","com","users","Functions_Logo","Container_Statistics_Statistics","ReactDOM","render","document","getElementById"],"mappings":"gPAUaA,EAAmB,SAACC,GAe7B,MAda,CACT,GACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,uCAGQA,IAGHC,EAAO,WAChB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACXC,IAAK,uEACLC,IAAK,UCQRC,EAAO,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,IAC9B,OAAQV,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAhB,IDPW,SAACK,GACxB,OAAOA,EAAKG,MAAM,IAAI,GAAGC,cACrBJ,EAAKG,MAAM,IAAIE,MAAM,GAChBC,IAAI,SAAAC,GAAM,OAAKA,IAAWA,EAAOH,cAAlB,IAAAI,OACND,GACJA,IAASE,KAAK,ICEcC,CAAQV,IACtCR,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACVM,EAAKU,WAAWR,MAAM,IAAIS,OAAS,GACjCX,EAAKU,WAAWN,MAAM,EAAG,GAAKJ,GAEtCT,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAaO,EAA7B,QC/CCW,EAAS,SAACZ,GACnB,OAAOA,EAAKa,QAOHC,EAAc,SAACC,GAGxB,OAFAC,QAAQC,IAAI,mBAAmBF,GAExBG,QAAQC,SAPKC,EAQJ,qFAAAb,OAAsFQ,EAAtF,aAPTM,MAAMD,GAAKE,KAAKV,KADJ,IAACQ,GCFXG,UAAU,WACnB,OAAQhC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAG+B,GAAI,UAAW9B,UAAU,mBAAjC,iBCsGO+B,EAtGf,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAQ,CACTnC,KAAM,GACNoC,MAAO,GACPC,cAAe,GACfC,aAAc,EACdC,QAAQ,GAPGX,EADvB,OAAAC,OAAAW,EAAA,EAAAX,CAAAJ,EAAAC,GAAAG,OAAAY,EAAA,EAAAZ,CAAAJ,EAAA,EAAAiB,IAAA,oBAAAC,MAAA,WAawB,IAAAC,EAAAb,KAGhBV,MAAM,mIACDC,KAAK,SAAAuB,GAAC,OAAIA,EAAEhC,SAAQS,KAAK,SAAAwB,GAAY,IAAV9C,EAAU8C,EAAV9C,KACtB+C,EAAM/C,EAAKgD,QACjBJ,EAAKK,SAAS,CAACb,MAAOpC,EAAKgD,QAAQ3C,IAAI,SAAA6C,GAAC,OAAIA,EAAEC,YAAYC,UAC1DR,EAAKK,SAAS,CAACZ,cAAerC,EAAKgD,QAAQ3C,IAAI,SAAA6C,GAAC,OAAIA,EAAEC,YAAYE,KAAOH,EAAEC,YAAYG,WACvFV,EAAKK,SAAS,CAACX,aAAcM,EAAKT,MAAME,cAAckB,OAAO,SAAC/D,EAAGgE,GAAJ,OAAUhE,EAAIgE,IAAG,KAC9EZ,EAAKK,SAAS,CAACV,QAASK,EAAKT,MAAMC,MAAMmB,OAAO,SAAC/D,EAAGgE,GAAJ,OAAUhE,EAAIgE,IAAG,KACjEZ,EAAKK,SAAS,CAACjD,KAAM+C,QAvBjC,CAAAL,IAAA,SAAAC,MAAA,WAiCQ,IALK,IACEP,GAASL,KAAKI,MAAQJ,KAAKI,MAAQ,IAAnCC,MAEAG,IADgBR,KAAKI,MAAQJ,KAAKI,MAAQ,CAAC,IAA3CG,cACWP,KAAKI,MAAQJ,KAAKI,MAAQ,CAAC,IAAtCI,SACDkB,EAAO,GACJC,EAAI,EAAGA,EAAI,GAAIA,IAAKD,EAAKE,KAAKpB,GACvCvB,QAAQC,IAAIc,KAAKI,OACjB,IAAMnC,EAAO,CAET4D,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAClEC,SAAU,CACN,CACIC,MAAM,EACNC,MAAK,gBAAAxD,OAAkBgC,GACvByB,gBAAiB,qBACjBC,YAAa,qBACbjE,KAAMyD,EACNS,aAAY,EACZC,YAAa,GACbC,YAAa,EACbC,eAAgB,IAGpB,CAEIP,MAAM,EACNQ,WAAY,GACZP,MAAO,QACPC,gBAAiB,oBACjBC,YAAa,oBACbjE,KAAMoC,EACN+B,YAAa,GACbC,YAAa,EACbC,eAAgB,KAKxBE,QAAS,CACLC,OAAQ,CACJZ,OAAQ,CAEJa,UAAW,QACXC,iBAAiB,YAOjC,OACInF,EAAAC,EAAAC,cAAA,WAEmC,MAA3BsC,KAAKI,MAAMG,aACP/C,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACI3E,KAAMA,EACN4E,OAAQ,IACRC,MAAO,IACPC,QAAQ,EACRP,QAAS,CACLQ,qBAAqB,KAK7BxF,EAAAC,EAAAC,cAACuF,EAAD,WA7FxBvD,EAAA,CAA8BwD,IAAMC,WCsKrBC,cAhKX,SAAAA,EAAYxD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACfvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMJ,KAiBVyD,QAAU,SAACrE,GACPD,EAAYC,GACPO,KAAK,SAAAwB,GAAY,IAAV9C,EAAU8C,EAAV9C,KACJgB,QAAQC,IAAIjB,GADE,IAEPe,EAAaf,EAAbe,SAFOsE,EAGWrF,EAAKsF,GAAvBC,EAHOF,EAGPE,MAAMC,EAHCH,EAGDG,SACPC,EAAkBzF,EAAKsF,GAAGI,SAASC,IACzC/D,EAAKqB,SAAS,CACV2C,KAAM/D,OAAOgE,KAAKJ,GAAiBpF,IAAI,SAAA6C,GAAC,OAAIrB,OAAOiE,OAAO,CAACC,OAAQ7C,EAAG8C,OAAQP,EAAgBvC,OAC9FC,YAAa,CACTpC,SAAUA,EACVwE,MAAOA,EACPC,SAAUA,GAEdS,KAAM,uBAhCHrE,EAsCnBsE,IAAM,WACF,IAAMC,EAAgB,CAClBC,gBAAe,OAAA7F,OAASnB,EAAiBwC,EAAKO,MAAMgB,YAAYqC,UAAjD,KACfa,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,SAEpB,OACIhH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MAAO8G,MAAOL,GAC1B5G,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QACZH,EAAAC,EAAAC,cAAA,WACKmC,EAAKO,MAAMgB,YAAYpC,WAGhCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,SACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAhB,UAAqCkC,EAAKO,MAAMgB,YAAYoC,OAE5DhG,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAhB,aAAwCkC,EAAKO,MAAMgB,YAAYqC,aAvD5D5D,EA4DnB6E,eAAiB,WACb,IAAMC,EAAO9E,EAAKO,MAAMyD,KACxB,OACIrG,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBAERgH,EAAKrG,IAAI,SAAC6C,EAAGyD,GACT,OAAOzD,EAAE6C,OAAOa,cAAcC,SAASjF,EAAKO,MAAM2E,OAC9CvH,EAAAC,EAAAC,cAAA,OAAKiD,IAAKiE,GACNpH,EAAAC,EAAAC,cAACsH,EAAD,CAAMhH,KAAMmD,EAAE6C,OAAQ/F,KAAMkD,EAAE8C,UAGlCzG,EAAAC,EAAAC,cAAA,8BAxETmC,EAkFnBoF,MAAQ,SAACf,GACL,OAAQA,GACJ,IAAK,WACD,OAAO1G,EAAAC,EAAAC,cAACwH,EAAD,MACX,IAAK,kBACD,OAAOrF,EAAK6E,mBAvFL7E,EA6FnBsF,QAAU,WACN,MAAO,CACHC,WAAY,MACZC,OAAQ,qBACRC,aAAc,gBACdC,aAAc,qBACdC,MAAO,UACPvD,gBAAiB,QACjBwD,SAAU,uBACVC,QAAS,SAtGE7F,EA2GnB8F,OAAS,WACL,MAAO,CACH1D,gBAAiB,UACjByD,QAAS,OACTN,WAAY,MACZC,OAAQ,qBACRC,aAAc,gBACdC,aAAc,SAhHlB1F,EAAKO,MAAQ,CACTyD,KAAM,KACNkB,MAAO,GACP3D,YAAa,CACTpC,SAAU,GACVwE,MAAO,KACPC,SAAU,GAEdS,KAAM,IAVKrE,mFAefG,KAAKqD,QAAQrD,KAAKJ,MAAM5B,uCAuGnB,IAAA6C,EAAAb,KACC2E,EAA4B,OAApB3E,KAAKI,MAAMyD,KAAgB7D,KAAKI,MAAMyD,KAAO,GAC3D,OACIrG,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAa8G,MAAO,CAACY,OAAM,cAAA7G,OAAgBwB,KAAKJ,MAAM4F,SAE9DhI,EAAAC,EAAAC,cAAA,WACKsC,KAAKmE,MAEFQ,EAAK/F,OAAS,EAEVpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,cACZH,EAAAC,EAAAC,cAAA,OACI+G,MAA2B,oBAApBzE,KAAKI,MAAM8D,KAA6BlE,KAAK2F,SAAW3F,KAAKmF,UACpES,QAAS,kBAAM/E,EAAKK,SAAS,CAACgD,KAAM,sBAFxC,mBAIA1G,EAAAC,EAAAC,cAAA,OACI+G,MAA2B,oBAApBzE,KAAKI,MAAM8D,KAA6BlE,KAAK2F,SAAW3F,KAAKmF,UACpES,QAAS,kBAAM/E,EAAKK,SAAS,CAACgD,KAAM,eAFxC,aAKJ1G,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBAERqC,KAAKiF,MAAMjF,KAAKI,MAAM8D,QAOlC1G,EAAAC,EAAAC,cAACuF,EAAD,eArJPC,IAAMC,WCwD/B0C,sBA1DI,SAAAC,EAAYlG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACfjG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgG,GAAA3F,KAAAH,KAAMJ,KAcVmG,WAAa,SAACC,GACVA,EAAKC,MAAQD,EAAKC,KAClBpG,EAAKqB,SAAS,CACV8E,UAlBWnG,EAsBnBqG,YAAc,WACV,OAAOrG,EAAKO,MAAMuE,KAAKrG,IAAI,SAAA6C,GAAC,MAAK,CAAClD,KAAMkD,EAAElD,KAAMuH,MAAOrE,EAAEqE,UArBzD3F,EAAKO,MAAQ,CACTuE,KAAM,GACNwB,KAAK,GAJMtG,mFAUfG,KAAKkB,SAAS,CACVyD,KAAMA,uCAkBV,IAAMyB,EAAQpG,KAAKkG,cACnB,OACI1I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2I,EAAD,MAEID,EAAMxH,QAAU,EAEZpB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OACXqC,KAAKI,MAAMuE,KAAKrG,IAAI,SAAC0H,EAAMpB,GACxB,OAAOwB,EAAMxH,OAAS,EAClBpB,EAAAC,EAAAC,cAAA,OAAKiD,IAAKiE,EAAOjH,UAAW,uBACxBH,EAAAC,EAAAC,cAAC4I,EAAD,CAAYtI,KAAMgI,EAAKhI,KAAMwH,MAAK,OAAAhH,OAASwH,EAAKR,MAAd,QAItChI,EAAAC,EAAAC,cAAA,OAAKiD,IAAKiE,GACNpH,EAAAC,EAAAC,cAACuF,EAAD,UAMhBzF,EAAAC,EAAAC,cAAA,oBApDNwF,IAAMC,YA6DXwB,EAAO,WAChB,MAAO,CAIH,CAACsB,MAAM,EAAMjI,KAAM,eAAgBwH,MAAO,UAAWvH,KAAM,MCnEnEsI,IAASC,OAAOhJ,EAAAC,EAAAC,cAACmI,EAAD,MAAOY,SAASC,eAAe","file":"static/js/main.7f8846fd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const getPresentage = (num, total, bool = true) => {\n    return (bool ? Math.floor((num / total) * 100) : ((num / total)).toString().slice(0, 6));\n};\n\nexport const getShortNum = (num, slice = 4) => {\n    return num.toString().slice(0, slice)\n};\n\nexport const getPrestigeImage = (num) => {\n    const list = [\n        '',\n        'https://image.ibb.co/ideMDA/L1.png',\n        'https://image.ibb.co/jFtgDA/L2.png',\n        'https://image.ibb.co/idRe0q/L3.png',\n        'https://image.ibb.co/jsoRfq/L4.png',\n        'https://image.ibb.co/cwviRV/L5.png',\n        'https://image.ibb.co/iRMe0q/L6.png',\n        'https://image.ibb.co/i9bq6V/L7.png',\n        'https://image.ibb.co/cPXK0q/L8.png',\n        'https://image.ibb.co/mZvHmV/L9.png',\n        'https://image.ibb.co/dzGe0q/L10.png'\n    ];\n\n    return list[num]\n};\n\nexport const Logo = () => {\n    return <img className={'logo'}\n                src={'https://image.ibb.co/inYpYA/07ef4a2a-37ba-4f4d-8be6-1be1b61bc102.png'}\n                alt={'logo'}/>;\n};\n\n\nexport const fixName = (name) => {\nreturn name.split('')[0].toUpperCase() +\n    name.split('').slice(1)\n        .map(letter => (letter === letter.toUpperCase()\n            ? ` ${letter}`\n            : letter)).join('')\n};\n\n","import React from \"react\";\nimport './Card.css'\nimport {Bar, Doughnut} from 'react-chartjs-2';\nimport {fixName} from \"../../Functions/Functions\";\n\nexport const CardPie = ({name, data1, data2, sub}) => {\n    const data = {\n        labels: [\n            `${data1}%`,\n            `${data2}%`\n        ],\n        datasets: [{\n            data: [data1, data2],\n            backgroundColor: [\n                '#ff9202',\n                '#694603',\n            ],\n            hoverBackgroundColor: [\n                '#ff9202',\n                '#694603',\n            ]\n        }]\n    };\n\n    return (<div className={'card'}>\n        <div className={'card-container-pie'}>\n            <div className={'card-top'}>{name}</div>\n\n            <Doughnut data={data}\n                      width={150}\n                      height={100}\n                      options={{\n                          maintainAspectRatio: false\n                      }}/>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const Card = ({name, data, sub}) => {\n    return (<div className={'card'}>\n        <div className={'card-container'}>\n            <div className={'card-top'}> {fixName(name)}</div>\n            <div className={'card-context'}>\n                {(data.toString().split('').length > 10 ?\n                    data.toString().slice(0, 6) : data)}\n            </div>\n            <div className={'card-sub'}>{sub} </div>\n        </div>\n    </div>)\n};\n\nexport const TestGraph = ({name, lable}) => {\n    const data = {\n        lable: [lable],\n        datasets: [],\n        options: {\n            title: {\n                display: true,\n                text: 'Custom Chart Title'\n            }\n        }\n    };\n    const test = name.map(user => createDataForGraph(user.data['username'], user.data[lable], user.color));\n    test.map(x => data.datasets.push(x));\n    return <div className={'card'}>\n        <div className={'graph-mini'} style={{backgroundColor: 'white'}}>\n            <div className={'card-container-pie'}>\n                <div className={'card-top'}>{(lable).split('')[0].toUpperCase() +\n                lable.split('').slice(1)\n                    .map(letter => (letter === letter.toUpperCase()\n                        ? ` ${letter}`\n                        : letter)).join('')}\n                </div>\n                <Bar style={{backgroundColor: 'white', color: 'white'}}\n                     width={300}\n                     height={300} data={data}/>\n                <div className={'card-sub'}>test</div>\n            </div>\n        </div>\n\n    </div>\n\n\n};\n\nexport const createDataForGraph = (name, data, color) => {\n    return {\n        label: name,\n        backgroundColor: `rgba(${color},0.4)`,\n        borderColor: `rgba(${color},1)`,\n        borderWidth: 1,\n        hoverBackgroundColor: `rgba(${color},0.7)`,\n        hoverBorderColor: `rgba(${color},1)`,\n        data: [data]\n    };\n};\n","export const toJson = (data) => {\n    return data.json()\n};\n\nexport const myFetch = (url) => {\n    return fetch(url).then(toJson)\n};\n\nexport const getUserData = (username) => {\n    console.log('this is username',username);\n\n    return Promise.resolve(\n             myFetch(`https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/${username}/profile/`)\n    )\n\n};\n\n// https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/FormingSpoon801/matches/warzone/start/0/end/0/details","import React from 'react'\nimport './Loading.css'\nexport const Loading = () => {\n    return (<div>\n        <div><i id={'loading'} className=\"fas fa-spinner\"/>Loading...</div>\n    </div>)\n};","import React from 'react'\nimport {Bar, Line} from \"react-chartjs-2\";\nimport {Loading} from \"../../components/Loading/Loading\";\n\nexport class Blackout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            shots: [],\n            ekiaDeathList: [],\n            ekiaDeathAvg: 0,\n            shotAvg:0\n        }\n\n    }\n\n    componentDidMount() {\n        // fetch('https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/FormingSpoon801/profile/type/wz')\n        //     .then(j => j.json()).then(res => console.log(res));\n        fetch('https://my.callofduty.com/api/papi-client/crm/cod/v2/title/bo4/platform/xbl/gamer/MenahemCohen/matches/mp/start/0/end/0/details')\n            .then(j => j.json()).then(({data}) => {\n            const obj = data.matches;\n            this.setState({shots: data.matches.map(x => x.playerStats.kills)});\n            this.setState({ekiaDeathList: data.matches.map(x => x.playerStats.ekia / x.playerStats.deaths)});\n            this.setState({ekiaDeathAvg: this.state.ekiaDeathList.reduce((a, b) => a + b)/20});\n            this.setState({shotAvg: this.state.shots.reduce((a, b) => a + b)/20});\n            this.setState({data: obj})\n        });\n    }\n\n\n    render() {\n        const {shots} = this.state ? this.state : [];\n        const {ekiaDeathAvg} = this.state ? this.state : [6];\n        const {shotAvg} = this.state ? this.state : [6];\n        const arra  =[];\n        for (let i = 0; i < 20; i++) arra.push(shotAvg);\n        console.log(this.state);\n        const data = {\n\n            labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,19,20],\n            datasets: [\n                {\n                    fill: false,\n                    label: `Shot Average ${shotAvg}`,\n                    backgroundColor: 'rgb(255, 255, 255)',\n                    borderColor: 'rgb(255, 255, 255)',\n                    data: arra,\n                    steppedLine:false,\n                    lineTension: 0.1,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                },\n\n                {\n\n                    fill: false,\n                    borderDash: [],\n                    label: \"Shots\",\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: shots,\n                    lineTension: 0.1,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n\n                },\n\n            ],\n            options: {\n                legend: {\n                    labels: {\n                        // This more specific font property overrides the global property\n                        fontColor: 'black',\n                        defaultFontColor:'white'\n                    }\n                }\n            }\n\n        };\n\n        return (\n            <div>\n                {\n                    this.state.ekiaDeathAvg != null ?\n                        <Line\n                            data={data}\n                            height={200}\n                            width={500}\n                            redraw={true}\n                            options={{\n                                maintainAspectRatio: false\n                            }}\n\n                        />\n                        :\n                        <Loading/>\n                }\n\n            </div>\n        );\n    }\n\n}\n\nexport default Blackout","import React from 'react'\nimport './Statistics.css'\nimport {Card} from \"../../components/Card/CardPie\";\nimport {getPresentage, getPrestigeImage} from \"../../Functions/Functions\";\nimport {getUserData} from \"../../Functions/Http\";\nimport {Loading} from \"../../components/Loading/Loading\";\nimport Blackout from \"../Blackout/Blackout\";\n\n\nclass Statistics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temp: null,\n            query: '',\n            playerStats: {\n                username: '',\n                level: null,\n                prestige: 0,\n            },\n            page: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.name)\n    }\n\n    getData = (username) => {\n        getUserData(username)\n            .then(({data}) => {\n                console.log(data);\n                const {username } = data;\n                const {level,prestige} = data.mp;\n                const multiplayerData = data.mp.lifetime.all;\n                this.setState({\n                    temp: Object.keys(multiplayerData).map(x => Object.assign({action: x, result: multiplayerData[x]})),\n                    playerStats: {\n                        username: username,\n                        level: level,\n                        prestige: prestige,\n                    },\n                    page: 'Team Deathmatch'\n\n                });\n            });\n    };\n\n    Top = () => {\n        const prestigeImage = {\n            backgroundImage: `url(${getPrestigeImage(this.state.playerStats.prestige)})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n        };\n        return (\n            <div className={'top'} style={prestigeImage}>\n                <div className={'left'}>\n                    <div>\n                        {this.state.playerStats.username}\n                    </div>\n                </div>\n                <div className={'right'}>\n                    <div className={'right-sub'}>Level: {this.state.playerStats.level}\n                    </div>\n                    <div className={'right-sub'}>Prestige: {this.state.playerStats.prestige}</div>\n                </div>\n            </div>)\n    };\n\n    teamDeathMatch = () => {\n        const list = this.state.temp;\n        return (\n            <div className={'middel'}>\n                <div className={'card-wrapper'}>\n                    {\n                        list.map((x, index) => {\n                            return x.action.toLowerCase().includes(this.state.query) ?\n                                <div key={index}>\n                                    <Card name={x.action} data={x.result}/>\n                                </div>\n                                :\n                                <div>Loading...</div>\n                        })\n                    }\n                </div>\n            </div>\n\n\n        );\n    };\n\n    pages = (page) => {\n        switch (page) {\n            case 'BlackOut':\n                return <Blackout/>;\n            case 'Team Deathmatch':\n                return this.teamDeathMatch();\n            default:\n\n        }\n    };\n\n    outPage = () => {\n        return {\n            marginLeft: \"1px\",\n            border: \"#e6a414 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"#e6a414 solid thin\",\n            color: '#553400',\n            backgroundColor: 'black',\n            shdowBox: '10px 10px 10px white',\n            padding: '10px'\n\n        }\n    };\n\n    inPage = () => {\n        return {\n            backgroundColor: '#1b1b1b',\n            padding: '10px',\n            marginLeft: \"1px\",\n            border: \"#e6a414 solid thin\",\n            borderRadius: \"10px 10px 0 0\",\n            borderBottom: \"none\",\n        }\n    };\n\n    render() {\n        const list = (this.state.temp !== null ? this.state.temp : []);\n        return (\n            <div className={'container'} style={{border: `solid thin ${this.props.color}`}}>\n                {\n                    <div>\n                        {this.Top()}\n                        {\n                            list.length > 0\n                                ?\n                                <div>\n                                    <div className={'testCallse'}>\n                                        <div\n                                            style={this.state.page === 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                                            onClick={() => this.setState({page: 'Team Deathmatch'})}>Team Deathmatch\n                                        </div>\n                                        <div\n                                            style={this.state.page !== 'Team Deathmatch' ? this.inPage() : this.outPage()}\n                                            onClick={() => this.setState({page: 'BlackOut'})}>BlackOut\n                                        </div>\n                                    </div>\n                                    <div className={'pagination-border'}>\n                                        {\n                                            this.pages(this.state.page)\n                                        }\n                                    </div>\n                                </div>\n\n\n                                :\n                                <Loading/>\n\n\n                        }\n\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Statistics;\n\n","import React from 'react'\nimport Statistics from \"./Container/Statistics/Statistics\";\nimport './App.css'\nimport {Logo} from \"./Functions/Functions\";\nimport {Loading} from \"./components/Loading/Loading\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            com: false\n        }\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            list: list()\n        })\n    }\n\n    changeList = (user) => {\n        user.show = !user.show;\n        this.setState({\n            user\n        })\n    };\n\n    getAllUsers = () => {\n        return this.state.list.map(x => ({data: x.data, color: x.color}));\n    };\n\n\n\n    render() {\n        const users = this.getAllUsers();\n        return (\n            <div>\n                <Logo/>\n                {\n                    users.length >= 1\n                        ?\n                        <div className={'App'}>\n                            {this.state.list.map((user, index) => {\n                                return users.length > 0 ?\n                                    <div key={index} className={'statistic-container'}>\n                                        <Statistics name={user.name} color={`rgb(${user.color})`}/>\n                                    </div>\n\n                                    :\n                                    <div key={index}>\n                                        <Loading/>\n                                    </div>\n\n                            })}\n                        </div>\n                        :\n                        <div/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App\n\nexport const list = () => {\n    return [\n        // {name: 'dudioudo', color: '255, 0, 0', data: [], friends: []},\n        // {show: true, name: 'WakingBrizard', color: '0, 0, 255', data: []},\n        // {show: true, name: 'FormingSpoon801', color: '0, 255, 0', data: []},\n        {show: true, name: 'MenahemCohen', color: '0, 0, 0', data: []},\n        // {show: true, name: 'SufleShokolad', color: '255,255,0', data: []},\n    ]\n};","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}