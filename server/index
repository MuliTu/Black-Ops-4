const cors = require('cors');
const firebase = require('firebase');
const express = require('express');
const http = require('https');
const app = express();
const port = 5000;
const port2 = 8000;
const io = require('socket.io')();
const bodyParser = require('body-parser');
const PLATFORM = 'xbl';
const TITLE = 'bo4';
const MAIN_URL = `https://my.callofduty.com/api/papi-client/crm/cod/v2/title/${TITLE}/platform/${PLATFORM}/gamer/`;


app.use(cors());
app.use(bodyParser.json());

var config = {
    apiKey: "AIzaSyAOzEkQ8vpjKbsw5mqnFFmr4qML-bVbCeI",
    authDomain: "call-of-duty-black-ops-4-15a24.firebaseapp.com",
    databaseURL: "https://call-of-duty-black-ops-4-15a24.firebaseio.com",
    projectId: "call-of-duty-black-ops-4-15a24",
    storageBucket: "call-of-duty-black-ops-4-15a24.appspot.com",
    messagingSenderId: "518851485397"
};
firebase.initializeApp(config);

// io.on('connection', (client) => {
//     console.log('Client Connected');
//     let data = '';
//     // setInterval(() => {
//       });
//     // }, 5000)
// });


//Get the user list from the database
app.get('/users', (req, res) => {
    firebase.database().ref('/users/').on('value', (snap) => {
        const registrateUsers = snap.val();
        res.json(Object.keys(registrateUsers).map(x => Object.assign({name: x})));
        res.status(200);
        res.end();
    });
});

// Get the username,level,prestige  from API , and update the database | Top
app.get('/users/:name', (req, res) => {
    const name = req.params.name;
    console.log(`Enter /users/:name`);
    let data = '';
    http.get(`${MAIN_URL}${name}/profile`, (resp) => {
        resp.on('data', (chunk) => {
            data += chunk;
        });
        resp.on('end', () => {
            const jsonFile = JSON.parse(data);
            const userName = jsonFile.data.username;
            const userLevel = jsonFile.data.mp.level;
            const userPrestige = jsonFile.data.mp.prestige;
            const object = Object.assign({username: userName, level: userLevel, prestige: userPrestige});
            firebase.database().ref(`/users/${name}`).update({
                personal: {
                    name: userName,
                    level: userLevel,
                    prestige: userPrestige
                }
            }).then(res.json(object).end())
        });

    });
});

// Get the username data from API , and update the database | Lifetime
app.get('/lifetime/:name', (req, res) => {
    const name = req.params.name;
    let data = '';
    http.get(`${MAIN_URL}${name}/profile`, (resp) => {
        resp.on('data', (chunk) => {
            data += chunk;
        });
        resp.on('end', () => {
            const jsonFile = JSON.parse(data);
            const userData = jsonFile.data.mp.lifetime.all;
            firebase.database().ref(`/users/${name}`).update({
                data: Object.keys(userData).map(x => Object.assign({action: x, result: userData[x]}))
            });
            firebase.database().ref(`/users/${name}`).on('value', (snap) => {
                res.json(snap.val().data).end()
            })


        });

    });
});


app.get('/weekly/:name', (req, res) => {
    const name = req.params.name;
    console.log('Enter /weekly/:name');
    let data = '';
    let tempData = '';


    firebase.database().ref(`/users/${name}`).on('value', (snap) => {
        const fromDB = snap.val();




        if (!fromDB.weekly)
        {
            http.get(`${MAIN_URL}${name}/matches/mp/start/0/end/0/details`, (resp) => {
                resp.on('data', (chunk) => {
                    data += chunk;
                });
                resp.on('end', () => {
                    const t = JSON.parse(data);
                    const g = t.data.matches;
                    const fromAPI = g.map(x => Object.assign({
                        date: x.utcStartSeconds
                        , kills: x.playerStats.kills,
                        ekia: x.playerStats.ekia,
                        assists: x.playerStats.assists,
                        ekiadRatio: x.playerStats.ekiadRatio
                    }));
                    res.json(fromAPI).end();
                        firebase.database().ref(`/users/${name}`).update({
                            weekly:
                                g.map(x => Object.assign({
                                    date: x.utcStartSeconds,
                                    kills: x.playerStats.kills,
                                    ekia: x.playerStats.ekia,
                                    assists: x.playerStats.assists,
                                    ekiadRatio: x.playerStats.ekiadRatio
                                }))

                        });
                    data = '';
                });


            });
        }


            // http.get(`${MAIN_URL}${name}/matches/mp/start/0/end/0/details`, (resp) => {
            //     resp.on('data', (chunk) => {
            //         data += chunk;
            //     });
            //     resp.on('end', () => {
            //         const t = JSON.parse(data);
            //         const g = t.data.matches;
            //         const fromAPI = g.map(x => Object.assign({
            //             date: x.utcStartSeconds
            //             , kills: x.playerStats.kills,
            //             ekia: x.playerStats.ekia,
            //             assists: x.playerStats.assists,
            //             ekiadRatio: x.playerStats.ekiadRatio
            //         }));
            //         res.json(fromAPI).end();

                    if (true)

                    data = '';
                });


            // });

    // });
});

app.listen(port2);
io.listen(port);
